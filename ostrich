#!/bin/bash

if [ $(uname) = "Linux" ]; then
    pathCmd="readlink -f"
elif [ $(uname) = "Darwin" ]; then
    pathCmd="stat -f %N"
else
    pathCmd="realpath"
fi

BASEDIR=`dirname $($pathCmd $0)`
TARGET=`echo $BASEDIR/target/scala-*/ostrich-assembly*.jar`
LIBDIR=$BASEDIR/lib
SCALA=scala
JAVA=java
export JAVA_OPTS="-Xss20000k -Xmx2000m"

princessParams=()
ostrichSolver=ostrich.OstrichStringTheory
ostrichParams=""

help() {
    echo "Usage: $0 [options]* [file]*"
    echo "Options:"
    echo "  [+-]incremental: enable incremental solving                               (default:-)"
    echo "  [+-]model: print model                                                    (default:-)"
    echo "  -timeout=val: set timeout to val milliseconds                             (default:infy)"
    echo "  [+-]cea: use the cost-enriched automata solver                            (default:-)"
    echo "  [+-]seq: use the sequential string solver"
    echo "  [+-]eager: eagerly intersect automata                                     (default:-)"
    echo "  [+-]minimizeAutomata: minimize automata                                   (default:-)"
    echo "  -ceaBackend=<backend>: use <backend> for cost-enriched automata solver:   (default:unary)"
    echo "                                            (unary, nuxmv, catra)"
    echo "  -nuxmvBackend=<backend>: use <backend> for cost-enriched automata solver: (default:ic3)"
    echo "                                            (ic3, bmc)"
    echo "  [+-]debug: enable debugging                                               (default:-)"
    echo "  [+-]log: enable logging                                                   (default:-)"
    echo "  -h: print this help message"
}

for p; do
    case "$p" in
        [+-]eager | [+-]minimizeAutomata | -ceaBackend=* | -nuxmvBackend=* | [+-]debug | [+-]log)
            if [ x"$ostrichParams" = x"" ]; then
                ostrichParams=$p
            else
                ostrichParams=$ostrichParams,$p
            fi
            ;;
        -h)
            help
            exit 0
            ;;
        -cea)
            ostrichSolver=ostrich.OstrichStringTheory
            ;;
        +cea)
            ostrichSolver=ostrich.cesolver.stringtheory.CEStringTheory
            ;;
        +seq)
            ostrichSolver=ap.theories.strings.SeqStringTheory
            ;;
        *)
            princessParams+=("$p")
            ;;
    esac
done

exec $JAVA $JAVA_OPTS -cp $TARGET \
     ostrich.OstrichMain -stringSolver=$ostrichSolver:$ostrichParams \
     "${princessParams[@]}"
