;test regex ^Authorization\u{20}\s*Negotiate\s*((YE4G.{40}LgMc)|(YIIQ.{40}QUFB))
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "") (re.++ (str.to_re "A") (re.++ (str.to_re "u") (re.++ (str.to_re "t") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re "r") (re.++ (str.to_re "i") (re.++ (str.to_re "z") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "i") (re.++ (str.to_re "o") (re.++ (str.to_re "n") (re.++ (str.to_re "\u{20}") (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (str.to_re "N") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "o") (re.++ (str.to_re "t") (re.++ (str.to_re "i") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "e") (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.union (re.++ (str.to_re "Y") (re.++ (str.to_re "E") (re.++ (str.to_re "4") (re.++ (str.to_re "G") (re.++ ((_ re.loop 40 40) (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re "L") (re.++ (str.to_re "g") (re.++ (str.to_re "M") (str.to_re "c"))))))))) (re.++ (str.to_re "Y") (re.++ (str.to_re "I") (re.++ (str.to_re "I") (re.++ (str.to_re "Q") (re.++ ((_ re.loop 40 40) (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re "Q") (re.++ (str.to_re "U") (re.++ (str.to_re "F") (str.to_re "B"))))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)