;test regex (\(?\+44\)?\s?(1|2|3|7|8)\d{3}|\(?(01|02|03|07|08)\d{3}\)?)\s?\d{3}\s?\d{3}|(\(?\+44\)?\s?(1|2|3|5|7|8)\d{2}|\(?(01|02|03|05|07|08)\d{2}\)?)\s?\d{3}\s?\d{4}|(\(?\+44\)?\s?(5|9)\d{2}|\(?(05|09)\d{2}\)?)\s?\d{3}\s?\d{3}
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.++ (re.union (re.++ (re.opt (str.to_re "(")) (re.++ (str.to_re "+") (re.++ (str.to_re "44") (re.++ (re.opt (str.to_re ")")) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.union (re.union (re.union (re.union (str.to_re "1") (str.to_re "2")) (str.to_re "3")) (str.to_re "7")) (str.to_re "8")) ((_ re.loop 3 3) (re.range "0" "9")))))))) (re.++ (re.opt (str.to_re "(")) (re.++ (re.union (re.union (re.union (re.union (str.to_re "01") (str.to_re "02")) (str.to_re "03")) (str.to_re "07")) (str.to_re "08")) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.opt (str.to_re ")")))))) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) ((_ re.loop 3 3) (re.range "0" "9")))))) (re.++ (re.union (re.++ (re.opt (str.to_re "(")) (re.++ (str.to_re "+") (re.++ (str.to_re "44") (re.++ (re.opt (str.to_re ")")) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.union (re.union (re.union (re.union (re.union (str.to_re "1") (str.to_re "2")) (str.to_re "3")) (str.to_re "5")) (str.to_re "7")) (str.to_re "8")) ((_ re.loop 2 2) (re.range "0" "9")))))))) (re.++ (re.opt (str.to_re "(")) (re.++ (re.union (re.union (re.union (re.union (re.union (str.to_re "01") (str.to_re "02")) (str.to_re "03")) (str.to_re "05")) (str.to_re "07")) (str.to_re "08")) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (str.to_re ")")))))) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) ((_ re.loop 4 4) (re.range "0" "9"))))))) (re.++ (re.union (re.++ (re.opt (str.to_re "(")) (re.++ (str.to_re "+") (re.++ (str.to_re "44") (re.++ (re.opt (str.to_re ")")) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.union (str.to_re "5") (str.to_re "9")) ((_ re.loop 2 2) (re.range "0" "9")))))))) (re.++ (re.opt (str.to_re "(")) (re.++ (re.union (str.to_re "05") (str.to_re "09")) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (str.to_re ")")))))) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) ((_ re.loop 3 3) (re.range "0" "9")))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)