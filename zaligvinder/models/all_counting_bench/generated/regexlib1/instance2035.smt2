;test regex (LOC[^&#39;]*&#39;)(GID[^&#39;]*&#39;)?(GDS[^&#39;]*&#39;)?(FTX[^&#39;]*&#39;){0,9}(MEA[^&#39;]*&#39;){1,9}(DIM[^&#39;]*&#39;){0,9}(TMP[^&#39;]*&#39;)?(RNG[^&#39;]*&#39;)?(LOC[^&#39;]*&#39;){0,9}(RFF[^&#39;]*&#39;)((EQD[^&#39;]*&#39;)(EQA[^&#39;]*&#39;){0,9}(NAD[^&#39;]*&#39;)?){0,3}
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "L") (re.++ (str.to_re "O") (re.++ (str.to_re "C") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";")))))))) (re.++ (re.opt (re.++ (str.to_re "G") (re.++ (str.to_re "I") (re.++ (str.to_re "D") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ (re.opt (re.++ (str.to_re "G") (re.++ (str.to_re "D") (re.++ (str.to_re "S") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ ((_ re.loop 0 9) (re.++ (str.to_re "F") (re.++ (str.to_re "T") (re.++ (str.to_re "X") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ ((_ re.loop 1 9) (re.++ (str.to_re "M") (re.++ (str.to_re "E") (re.++ (str.to_re "A") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ ((_ re.loop 0 9) (re.++ (str.to_re "D") (re.++ (str.to_re "I") (re.++ (str.to_re "M") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ (re.opt (re.++ (str.to_re "T") (re.++ (str.to_re "M") (re.++ (str.to_re "P") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ (re.opt (re.++ (str.to_re "R") (re.++ (str.to_re "N") (re.++ (str.to_re "G") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ ((_ re.loop 0 9) (re.++ (str.to_re "L") (re.++ (str.to_re "O") (re.++ (str.to_re "C") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.++ (re.++ (str.to_re "R") (re.++ (str.to_re "F") (re.++ (str.to_re "F") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";")))))))) ((_ re.loop 0 3) (re.++ (re.++ (str.to_re "E") (re.++ (str.to_re "Q") (re.++ (str.to_re "D") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";")))))))) (re.++ ((_ re.loop 0 9) (re.++ (str.to_re "E") (re.++ (str.to_re "Q") (re.++ (str.to_re "A") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))) (re.opt (re.++ (str.to_re "N") (re.++ (str.to_re "A") (re.++ (str.to_re "D") (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re "&")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re "39")) (re.diff re.allchar (str.to_re ";")))))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "39") (str.to_re ";"))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)