;test regex ^((29\/0?2\/[0-9]{0,2}(04|08|92|96|([1|3|5|7][2|6])|[2|4|6|8][0|4|8]))|(((28|[12][0-7]|0?[1-9])\/0?2)|((30|[12][0-9]|0?[1-9])\/(0?(4|6|9)|11))|((31|[12][0-9]|0?[1-9])\/(0?(1|3|5|7|8))|(10|12)))\/(\d{2}|\d{4}))$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.union (re.++ (str.to_re "29") (re.++ (str.to_re "/") (re.++ (re.opt (str.to_re "0")) (re.++ (str.to_re "2") (re.++ (str.to_re "/") (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.union (re.union (re.union (re.union (re.union (str.to_re "04") (str.to_re "08")) (str.to_re "92")) (str.to_re "96")) (re.++ (re.union (str.to_re "1") (re.union (str.to_re "|") (re.union (str.to_re "3") (re.union (str.to_re "|") (re.union (str.to_re "5") (re.union (str.to_re "|") (str.to_re "7"))))))) (re.union (str.to_re "2") (re.union (str.to_re "|") (str.to_re "6"))))) (re.++ (re.union (str.to_re "2") (re.union (str.to_re "|") (re.union (str.to_re "4") (re.union (str.to_re "|") (re.union (str.to_re "6") (re.union (str.to_re "|") (str.to_re "8"))))))) (re.union (str.to_re "0") (re.union (str.to_re "|") (re.union (str.to_re "4") (re.union (str.to_re "|") (str.to_re "8"))))))))))))) (re.++ (re.union (re.union (re.++ (re.union (re.union (str.to_re "28") (re.++ (str.to_re "12") (re.range "0" "7"))) (re.++ (re.opt (str.to_re "0")) (re.range "1" "9"))) (re.++ (str.to_re "/") (re.++ (re.opt (str.to_re "0")) (str.to_re "2")))) (re.++ (re.union (re.union (str.to_re "30") (re.++ (str.to_re "12") (re.range "0" "9"))) (re.++ (re.opt (str.to_re "0")) (re.range "1" "9"))) (re.++ (str.to_re "/") (re.union (re.++ (re.opt (str.to_re "0")) (re.union (re.union (str.to_re "4") (str.to_re "6")) (str.to_re "9"))) (str.to_re "11"))))) (re.union (re.++ (re.union (re.union (str.to_re "31") (re.++ (str.to_re "12") (re.range "0" "9"))) (re.++ (re.opt (str.to_re "0")) (re.range "1" "9"))) (re.++ (str.to_re "/") (re.++ (re.opt (str.to_re "0")) (re.union (re.union (re.union (re.union (str.to_re "1") (str.to_re "3")) (str.to_re "5")) (str.to_re "7")) (str.to_re "8"))))) (re.union (str.to_re "10") (str.to_re "12")))) (re.++ (str.to_re "/") (re.union ((_ re.loop 2 2) (re.range "0" "9")) ((_ re.loop 4 4) (re.range "0" "9"))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)