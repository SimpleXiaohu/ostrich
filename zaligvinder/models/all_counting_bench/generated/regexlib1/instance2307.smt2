;test regex ([0-9]* {0,2}[A-Z]{1}\w+[,.;:]? {0,4}[xvilcXVILC\d]+[.,;:]( {0,2}[\d-,]{1,7})+)([,.;:] {0,4}[xvilcXVILC]*[.,;:]( {0,2}[\d-,]{1,7})+)*
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.* (re.range "0" "9")) (re.++ ((_ re.loop 0 2) (str.to_re " ")) (re.++ ((_ re.loop 1 1) (re.range "A" "Z")) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.++ (re.opt (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re ";") (str.to_re ":"))))) (re.++ ((_ re.loop 0 4) (str.to_re " ")) (re.++ (re.+ (re.union (str.to_re "x") (re.union (str.to_re "v") (re.union (str.to_re "i") (re.union (str.to_re "l") (re.union (str.to_re "c") (re.union (str.to_re "X") (re.union (str.to_re "V") (re.union (str.to_re "I") (re.union (str.to_re "L") (re.union (str.to_re "C") (re.range "0" "9")))))))))))) (re.++ (re.union (str.to_re ".") (re.union (str.to_re ",") (re.union (str.to_re ";") (str.to_re ":")))) (re.+ (re.++ ((_ re.loop 0 2) (str.to_re " ")) ((_ re.loop 1 7) (re.union (re.range "0" "9") (re.union (str.to_re "-") (str.to_re ",")))))))))))))) (re.* (re.++ (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re ";") (str.to_re ":")))) (re.++ ((_ re.loop 0 4) (str.to_re " ")) (re.++ (re.* (re.union (str.to_re "x") (re.union (str.to_re "v") (re.union (str.to_re "i") (re.union (str.to_re "l") (re.union (str.to_re "c") (re.union (str.to_re "X") (re.union (str.to_re "V") (re.union (str.to_re "I") (re.union (str.to_re "L") (str.to_re "C"))))))))))) (re.++ (re.union (str.to_re ".") (re.union (str.to_re ",") (re.union (str.to_re ";") (str.to_re ":")))) (re.+ (re.++ ((_ re.loop 0 2) (str.to_re " ")) ((_ re.loop 1 7) (re.union (re.range "0" "9") (re.union (str.to_re "-") (str.to_re ","))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)