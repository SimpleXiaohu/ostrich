;test regex ^[a-zA-Z]{4}((\d{2}((0[13578]|1[02])(0[1-9]|[12]\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\d|30)|02(0[1-9]|1\d|2[0-8])))|([02468][048]|[13579][26])0229)(H|M)(AS|BC|BS|CC|CL|CM|CS|CH|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|SM|NE)([a-zA-Z]{3})([a-zA-Z0-9\s]{1})\d{1}$+
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ ((_ re.loop 4 4) (re.union (re.range "a" "z") (re.range "A" "Z"))) (re.++ (re.union (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.union (re.union (re.++ (re.union (re.++ (str.to_re "0") (str.to_re "13578")) (re.++ (str.to_re "1") (str.to_re "02"))) (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "12") (re.range "0" "9"))) (re.++ (str.to_re "3") (str.to_re "01")))) (re.++ (re.union (re.++ (str.to_re "0") (str.to_re "13456789")) (re.++ (str.to_re "1") (str.to_re "012"))) (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "12") (re.range "0" "9"))) (str.to_re "30")))) (re.++ (str.to_re "02") (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "9"))) (re.++ (str.to_re "2") (re.range "0" "8")))))) (re.++ (re.union (re.++ (str.to_re "02468") (str.to_re "048")) (re.++ (str.to_re "13579") (str.to_re "26"))) (str.to_re "0229"))) (re.++ (re.union (str.to_re "H") (str.to_re "M")) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "A") (str.to_re "S")) (re.++ (str.to_re "B") (str.to_re "C"))) (re.++ (str.to_re "B") (str.to_re "S"))) (re.++ (str.to_re "C") (str.to_re "C"))) (re.++ (str.to_re "C") (str.to_re "L"))) (re.++ (str.to_re "C") (str.to_re "M"))) (re.++ (str.to_re "C") (str.to_re "S"))) (re.++ (str.to_re "C") (str.to_re "H"))) (re.++ (str.to_re "D") (str.to_re "F"))) (re.++ (str.to_re "D") (str.to_re "G"))) (re.++ (str.to_re "G") (str.to_re "T"))) (re.++ (str.to_re "G") (str.to_re "R"))) (re.++ (str.to_re "H") (str.to_re "G"))) (re.++ (str.to_re "J") (str.to_re "C"))) (re.++ (str.to_re "M") (str.to_re "C"))) (re.++ (str.to_re "M") (str.to_re "N"))) (re.++ (str.to_re "M") (str.to_re "S"))) (re.++ (str.to_re "N") (str.to_re "T"))) (re.++ (str.to_re "N") (str.to_re "L"))) (re.++ (str.to_re "O") (str.to_re "C"))) (re.++ (str.to_re "P") (str.to_re "L"))) (re.++ (str.to_re "Q") (str.to_re "T"))) (re.++ (str.to_re "Q") (str.to_re "R"))) (re.++ (str.to_re "S") (str.to_re "P"))) (re.++ (str.to_re "S") (str.to_re "L"))) (re.++ (str.to_re "S") (str.to_re "R"))) (re.++ (str.to_re "T") (str.to_re "C"))) (re.++ (str.to_re "T") (str.to_re "S"))) (re.++ (str.to_re "T") (str.to_re "L"))) (re.++ (str.to_re "V") (str.to_re "Z"))) (re.++ (str.to_re "Y") (str.to_re "N"))) (re.++ (str.to_re "Z") (str.to_re "S"))) (re.++ (str.to_re "S") (str.to_re "M"))) (re.++ (str.to_re "N") (str.to_re "E"))) (re.++ ((_ re.loop 3 3) (re.union (re.range "a" "z") (re.range "A" "Z"))) (re.++ ((_ re.loop 1 1) (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))) ((_ re.loop 1 1) (re.range "0" "9"))))))))) (re.+ (str.to_re "")))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)