;test regex ^((http(s){0,1}\:\/\/){0,1}([a-z|A-Z|0-9|\.|\-|_]){4,255}(\:\d{1,5}){0,1}){0,1}((\/([a-z|A-Z|0-9|\.|\-|_]|\%[A-F|a-f|0-9]{2}){1,255}){1,255}\/{0,1}){0,1}(|\/{0,1}\?[a-z|A-Z|0-9|\.|\-|_]{1,255}\=([a-z|A-Z|0-9|\.|\-|_|\+|\:]|\%[A-F|a-f|0-9]{2}|\&[a-z|A-Z]{2,12}\;){0,255}){0,1}((\&[a-z|A-Z|0-9|\.|\-|_]{1,255}\=([a-z|A-Z|0-9|\.|\-|_|\+|\:]|\%[A-F|a-f|0-9]{2}|\&[a-z|A-Z]{2,12}\;){0,255}){0,255})(\/{0,1}|\#([a-z|A-Z|0-9|\.|\-|_|\+|\:]|\%[A-F|a-f|0-9]{2}|\&[a-z|A-Z]{2,12}\;){0,255})$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 0 1) (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "p") (re.++ ((_ re.loop 0 1) (str.to_re "s")) (re.++ (str.to_re ":") (re.++ (str.to_re "/") (str.to_re "/"))))))))) (re.++ ((_ re.loop 4 255) (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.union (re.range "A" "Z") (re.union (str.to_re "|") (re.union (re.range "0" "9") (re.union (str.to_re "|") (re.union (str.to_re ".") (re.union (str.to_re "|") (re.union (str.to_re "-") (re.union (str.to_re "|") (str.to_re "_")))))))))))) ((_ re.loop 0 1) (re.++ (str.to_re ":") ((_ re.loop 1 5) (re.range "0" "9"))))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 1 255) (re.++ (str.to_re "/") ((_ re.loop 1 255) (re.union (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.union (re.range "A" "Z") (re.union (str.to_re "|") (re.union (re.range "0" "9") (re.union (str.to_re "|") (re.union (str.to_re ".") (re.union (str.to_re "|") (re.union (str.to_re "-") (re.union (str.to_re "|") (str.to_re "_"))))))))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "A" "F") (re.union (str.to_re "|") (re.union (re.range "a" "f") (re.union (str.to_re "|") (re.range "0" "9"))))))))))) ((_ re.loop 0 1) (str.to_re "/")))) (re.++ ((_ re.loop 0 1) (re.union (str.to_re "") (re.++ (str.to_re "") (re.++ ((_ re.loop 0 1) (str.to_re "/")) (re.++ (str.to_re "?") (re.++ ((_ re.loop 1 255) (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.union (re.range "A" "Z") (re.union (str.to_re "|") (re.union (re.range "0" "9") (re.union (str.to_re "|") (re.union (str.to_re ".") (re.union (str.to_re "|") (re.union (str.to_re "-") (re.union (str.to_re "|") (str.to_re "_")))))))))))) (re.++ (str.to_re "=") ((_ re.loop 0 255) (re.union (re.union (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.union (re.range "A" "Z") (re.union (str.to_re "|") (re.union (re.range "0" "9") (re.union (str.to_re "|") (re.union (str.to_re ".") (re.union (str.to_re "|") (re.union (str.to_re "-") (re.union (str.to_re "|") (re.union (str.to_re "_") (re.union (str.to_re "|") (re.union (str.to_re "+") (re.union (str.to_re "|") (str.to_re ":"))))))))))))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "A" "F") (re.union (str.to_re "|") (re.union (re.range "a" "f") (re.union (str.to_re "|") (re.range "0" "9")))))))) (re.++ (str.to_re "&") (re.++ ((_ re.loop 2 12) (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.range "A" "Z")))) (str.to_re ";")))))))))))) (re.++ ((_ re.loop 0 255) (re.++ (str.to_re "&") (re.++ ((_ re.loop 1 255) (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.union (re.range "A" "Z") (re.union (str.to_re "|") (re.union (re.range "0" "9") (re.union (str.to_re "|") (re.union (str.to_re ".") (re.union (str.to_re "|") (re.union (str.to_re "-") (re.union (str.to_re "|") (str.to_re "_")))))))))))) (re.++ (str.to_re "=") ((_ re.loop 0 255) (re.union (re.union (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.union (re.range "A" "Z") (re.union (str.to_re "|") (re.union (re.range "0" "9") (re.union (str.to_re "|") (re.union (str.to_re ".") (re.union (str.to_re "|") (re.union (str.to_re "-") (re.union (str.to_re "|") (re.union (str.to_re "_") (re.union (str.to_re "|") (re.union (str.to_re "+") (re.union (str.to_re "|") (str.to_re ":"))))))))))))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "A" "F") (re.union (str.to_re "|") (re.union (re.range "a" "f") (re.union (str.to_re "|") (re.range "0" "9")))))))) (re.++ (str.to_re "&") (re.++ ((_ re.loop 2 12) (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.range "A" "Z")))) (str.to_re ";"))))))))) (re.union ((_ re.loop 0 1) (str.to_re "/")) (re.++ (str.to_re "#") ((_ re.loop 0 255) (re.union (re.union (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.union (re.range "A" "Z") (re.union (str.to_re "|") (re.union (re.range "0" "9") (re.union (str.to_re "|") (re.union (str.to_re ".") (re.union (str.to_re "|") (re.union (str.to_re "-") (re.union (str.to_re "|") (re.union (str.to_re "_") (re.union (str.to_re "|") (re.union (str.to_re "+") (re.union (str.to_re "|") (str.to_re ":"))))))))))))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "A" "F") (re.union (str.to_re "|") (re.union (re.range "a" "f") (re.union (str.to_re "|") (re.range "0" "9")))))))) (re.++ (str.to_re "&") (re.++ ((_ re.loop 2 12) (re.union (re.range "a" "z") (re.union (str.to_re "|") (re.range "A" "Z")))) (str.to_re ";")))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)