;test regex (ABC[#:*$]+(?:\w+[#:*$]+){2}|DEF[#:*$]+(?:\w+[#:*$]+){3})([^#:*$]+)(.+)
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (re.++ (str.to_re "A") (re.++ (str.to_re "B") (re.++ (str.to_re "C") (re.++ (re.+ (re.union (str.to_re "#") (re.union (str.to_re ":") (re.union (str.to_re "*") (str.to_re "$"))))) ((_ re.loop 2 2) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.+ (re.union (str.to_re "#") (re.union (str.to_re ":") (re.union (str.to_re "*") (str.to_re "$"))))))))))) (re.++ (str.to_re "D") (re.++ (str.to_re "E") (re.++ (str.to_re "F") (re.++ (re.+ (re.union (str.to_re "#") (re.union (str.to_re ":") (re.union (str.to_re "*") (str.to_re "$"))))) ((_ re.loop 3 3) (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.+ (re.union (str.to_re "#") (re.union (str.to_re ":") (re.union (str.to_re "*") (str.to_re "$")))))))))))) (re.++ (re.+ (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re ":")) (re.inter (re.diff re.allchar (str.to_re "*")) (re.diff re.allchar (str.to_re "$")))))) (re.+ (re.diff re.allchar (str.to_re "\n")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)