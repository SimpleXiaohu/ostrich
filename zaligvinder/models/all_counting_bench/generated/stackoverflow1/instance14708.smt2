;test regex (\d{1,3}[\.,\s]{0,2})*\d{3}[\.,\s]{0,2}\d{0,2}[\s]{0,2}[zl|z|zlotych|zotych|pln|PLN]{0,1}
(declare-const X String)
(assert (str.in_re X (re.++ (re.* (re.++ ((_ re.loop 1 3) (re.range "0" "9")) ((_ re.loop 0 2) (re.union (str.to_re ".") (re.union (str.to_re ",") (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ ((_ re.loop 0 2) (re.union (str.to_re ".") (re.union (str.to_re ",") (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))) (re.++ ((_ re.loop 0 2) (re.range "0" "9")) (re.++ ((_ re.loop 0 2) (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) ((_ re.loop 0 1) (re.union (str.to_re "z") (re.union (str.to_re "l") (re.union (str.to_re "|") (re.union (str.to_re "z") (re.union (str.to_re "|") (re.union (str.to_re "z") (re.union (str.to_re "l") (re.union (str.to_re "o") (re.union (str.to_re "t") (re.union (str.to_re "y") (re.union (str.to_re "c") (re.union (str.to_re "h") (re.union (str.to_re "|") (re.union (str.to_re "z") (re.union (str.to_re "o") (re.union (str.to_re "t") (re.union (str.to_re "y") (re.union (str.to_re "c") (re.union (str.to_re "h") (re.union (str.to_re "|") (re.union (str.to_re "p") (re.union (str.to_re "l") (re.union (str.to_re "n") (re.union (str.to_re "|") (re.union (str.to_re "P") (re.union (str.to_re "L") (str.to_re "N")))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)