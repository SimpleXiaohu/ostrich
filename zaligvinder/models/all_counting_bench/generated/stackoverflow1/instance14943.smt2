;test regex egrep \e '(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z){2,}' dict.txt
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (re.++ (re.* (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to_re "a") (str.to_re "b")) (str.to_re "c")) (str.to_re "d")) (str.to_re "e")) (str.to_re "f")) (str.to_re "g")) (str.to_re "h")) (str.to_re "i")) (str.to_re "j")) (str.to_re "k")) (str.to_re "l")) (str.to_re "m")) (str.to_re "n")) (str.to_re "o")) (str.to_re "p")) (str.to_re "q")) (str.to_re "r")) (str.to_re "s")) (str.to_re "t")) (str.to_re "u")) (str.to_re "v")) (str.to_re "w")) (str.to_re "x")) (str.to_re "y")) (str.to_re "z"))) ((_ re.loop 2 2) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to_re "a") (str.to_re "b")) (str.to_re "c")) (str.to_re "d")) (str.to_re "e")) (str.to_re "f")) (str.to_re "g")) (str.to_re "h")) (str.to_re "i")) (str.to_re "j")) (str.to_re "k")) (str.to_re "l")) (str.to_re "m")) (str.to_re "n")) (str.to_re "o")) (str.to_re "p")) (str.to_re "q")) (str.to_re "r")) (str.to_re "s")) (str.to_re "t")) (str.to_re "u")) (str.to_re "v")) (str.to_re "w")) (str.to_re "x")) (str.to_re "y")) (str.to_re "z")))) (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "d") (re.++ (str.to_re "i") (re.++ (str.to_re "c") (re.++ (str.to_re "t") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "t") (re.++ (str.to_re "x") (str.to_re "t"))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)