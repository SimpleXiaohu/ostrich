;test regex ^(?:[A-Za-z][\w-]*|\d+(?:\.\d+)*)=(?:#(?:[\dA-Fa-f]{2})+|(?:[^,=\+<>#;\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*|"(?:[^\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*")(?:\+(?:[A-Za-z][\w-]*|\d+(?:\.\d+)*)=(?:#(?:[\dA-Fa-f]{2})+|(?:[^,=\+<>#;\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*|"(?:[^\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*"))*(?:,(?:[A-Za-z][\w-]*|\d+(?:\.\d+)*)=(?:#(?:[\dA-Fa-f]{2})+|(?:[^,=\+<>#;\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*|"(?:[^\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*")(?:\+(?:[A-Za-z][\w-]*|\d+(?:\.\d+)*)=(?:#(?:[\dA-Fa-f]{2})+|(?:[^,=\+<>#;\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*|"(?:[^\\"]|\\[,=\+<>#;\\"]|\\[\dA-Fa-f]{2})*"))*)*$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.union (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.* (re.union (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (str.to_re "-")))) (re.++ (re.+ (re.range "0" "9")) (re.* (re.++ (str.to_re ".") (re.+ (re.range "0" "9")))))) (re.++ (str.to_re "=") (re.++ (re.union (re.union (re.++ (str.to_re "#") (re.+ ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))) (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re ",")) (re.inter (re.diff re.allchar (str.to_re "=")) (re.inter (re.diff re.allchar (str.to_re "+")) (re.inter (re.diff re.allchar (str.to_re "<")) (re.inter (re.diff re.allchar (str.to_re ">")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re ";")) (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}")))))))))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))))) (re.++ (str.to_re "\u{22}") (re.++ (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}"))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f"))))))) (str.to_re "\u{22}")))) (re.++ (re.* (re.++ (str.to_re "+") (re.++ (re.union (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.* (re.union (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (str.to_re "-")))) (re.++ (re.+ (re.range "0" "9")) (re.* (re.++ (str.to_re ".") (re.+ (re.range "0" "9")))))) (re.++ (str.to_re "=") (re.union (re.union (re.++ (str.to_re "#") (re.+ ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))) (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re ",")) (re.inter (re.diff re.allchar (str.to_re "=")) (re.inter (re.diff re.allchar (str.to_re "+")) (re.inter (re.diff re.allchar (str.to_re "<")) (re.inter (re.diff re.allchar (str.to_re ">")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re ";")) (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}")))))))))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))))) (re.++ (str.to_re "\u{22}") (re.++ (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}"))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f"))))))) (str.to_re "\u{22}")))))))) (re.* (re.++ (str.to_re ",") (re.++ (re.union (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.* (re.union (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (str.to_re "-")))) (re.++ (re.+ (re.range "0" "9")) (re.* (re.++ (str.to_re ".") (re.+ (re.range "0" "9")))))) (re.++ (str.to_re "=") (re.++ (re.union (re.union (re.++ (str.to_re "#") (re.+ ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))) (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re ",")) (re.inter (re.diff re.allchar (str.to_re "=")) (re.inter (re.diff re.allchar (str.to_re "+")) (re.inter (re.diff re.allchar (str.to_re "<")) (re.inter (re.diff re.allchar (str.to_re ">")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re ";")) (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}")))))))))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))))) (re.++ (str.to_re "\u{22}") (re.++ (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}"))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f"))))))) (str.to_re "\u{22}")))) (re.* (re.++ (str.to_re "+") (re.++ (re.union (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.* (re.union (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (str.to_re "-")))) (re.++ (re.+ (re.range "0" "9")) (re.* (re.++ (str.to_re ".") (re.+ (re.range "0" "9")))))) (re.++ (str.to_re "=") (re.union (re.union (re.++ (str.to_re "#") (re.+ ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))) (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re ",")) (re.inter (re.diff re.allchar (str.to_re "=")) (re.inter (re.diff re.allchar (str.to_re "+")) (re.inter (re.diff re.allchar (str.to_re "<")) (re.inter (re.diff re.allchar (str.to_re ">")) (re.inter (re.diff re.allchar (str.to_re "#")) (re.inter (re.diff re.allchar (str.to_re ";")) (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}")))))))))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f")))))))) (re.++ (str.to_re "\u{22}") (re.++ (re.* (re.union (re.union (re.inter (re.diff re.allchar (str.to_re "\\")) (re.diff re.allchar (str.to_re "\u{22}"))) (re.++ (str.to_re "\\") (re.union (str.to_re ",") (re.union (str.to_re "=") (re.union (str.to_re "+") (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "#") (re.union (str.to_re ";") (re.union (str.to_re "\\") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re "\\") ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "F") (re.range "a" "f"))))))) (str.to_re "\u{22}")))))))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)