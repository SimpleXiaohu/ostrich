;test regex regex <- "([0-9A-Za-z]{2,}\\[0-9A-Za-z]{2,3}\\[0-9A-Za-z]{2,3}|[0-9A-Za-z]{2,}\\[0-9A-Za-z]{2,3})$"
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (re.++ (str.to_re " ") (re.++ (str.to_re "<") (re.++ (str.to_re "-") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.union (re.++ (re.++ (re.* (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z")))) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z"))))) (re.++ (str.to_re "\\") (re.++ ((_ re.loop 2 3) (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z")))) (re.++ (str.to_re "\\") ((_ re.loop 2 3) (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z")))))))) (re.++ (re.++ (re.* (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z")))) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z"))))) (re.++ (str.to_re "\\") ((_ re.loop 2 3) (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z"))))))))))))))))) (re.++ (str.to_re "") (str.to_re "\u{22}")))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)