;test regex (\d+(?:\s(?:Dose|TL|EL)){0,})\s+(.*)
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.+ (re.range "0" "9")) (re.++ (re.* (re.++ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (re.union (re.++ (str.to_re "D") (re.++ (str.to_re "o") (re.++ (str.to_re "s") (str.to_re "e")))) (re.++ (str.to_re "T") (str.to_re "L"))) (re.++ (str.to_re "E") (str.to_re "L"))))) ((_ re.loop 0 0) (re.++ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (re.union (re.++ (str.to_re "D") (re.++ (str.to_re "o") (re.++ (str.to_re "s") (str.to_re "e")))) (re.++ (str.to_re "T") (str.to_re "L"))) (re.++ (str.to_re "E") (str.to_re "L"))))))) (re.++ (re.+ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.* (re.diff re.allchar (str.to_re "\n")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)