;test regex ^(?:[2-5]\d{3,4}|1(?:[1-9]\d{2,3}|0(?:[3-9]\d{1,2}|[01]\d{2}|2(?:[4-9]\d?|[0-3]\d)))|6(?:[0-4]\d{2,3}|5(?:[0-4]\d{1,2}|5(?:[0-2]\d?|3[0-5]?|[4-9])|[6-9]\d)|[6-9]\d{2})|[7-9]\d{3})$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.union (re.union (re.union (re.++ (re.range "2" "5") ((_ re.loop 3 4) (re.range "0" "9"))) (re.++ (str.to_re "1") (re.union (re.++ (re.range "1" "9") ((_ re.loop 2 3) (re.range "0" "9"))) (re.++ (str.to_re "0") (re.union (re.union (re.++ (re.range "3" "9") ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (str.to_re "01") ((_ re.loop 2 2) (re.range "0" "9")))) (re.++ (str.to_re "2") (re.union (re.++ (re.range "4" "9") (re.opt (re.range "0" "9"))) (re.++ (re.range "0" "3") (re.range "0" "9"))))))))) (re.++ (str.to_re "6") (re.union (re.union (re.++ (re.range "0" "4") ((_ re.loop 2 3) (re.range "0" "9"))) (re.++ (str.to_re "5") (re.union (re.union (re.++ (re.range "0" "4") ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (str.to_re "5") (re.union (re.union (re.++ (re.range "0" "2") (re.opt (re.range "0" "9"))) (re.++ (str.to_re "3") (re.opt (re.range "0" "5")))) (re.range "4" "9")))) (re.++ (re.range "6" "9") (re.range "0" "9"))))) (re.++ (re.range "6" "9") ((_ re.loop 2 2) (re.range "0" "9")))))) (re.++ (re.range "7" "9") ((_ re.loop 3 3) (re.range "0" "9"))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)