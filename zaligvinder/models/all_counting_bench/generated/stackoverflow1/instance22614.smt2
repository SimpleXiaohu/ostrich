;test regex (http|https):\/\/(www.){0,1}google.[a-z.]+\/url\?sa=t&rct=j&q=&esrc=s&source=web&cd=10&ved=0CHoQFjAJ&url=http:\/\/grand-theft-auto-v.tk\/Biggenius.php
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (str.to_re "p")))) (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "p") (str.to_re "s")))))) (re.++ (str.to_re ":") (re.++ (str.to_re "/") (re.++ (str.to_re "/") (re.++ ((_ re.loop 0 1) (re.++ (str.to_re "w") (re.++ (str.to_re "w") (re.++ (str.to_re "w") (re.diff re.allchar (str.to_re "\n")))))) (re.++ (str.to_re "g") (re.++ (str.to_re "o") (re.++ (str.to_re "o") (re.++ (str.to_re "g") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.+ (re.union (re.range "a" "z") (str.to_re "."))) (re.++ (str.to_re "/") (re.++ (str.to_re "u") (re.++ (str.to_re "r") (re.++ (str.to_re "l") (re.++ (str.to_re "?") (re.++ (str.to_re "s") (re.++ (str.to_re "a") (re.++ (str.to_re "=") (re.++ (str.to_re "t") (re.++ (str.to_re "&") (re.++ (str.to_re "r") (re.++ (str.to_re "c") (re.++ (str.to_re "t") (re.++ (str.to_re "=") (re.++ (str.to_re "j") (re.++ (str.to_re "&") (re.++ (str.to_re "q") (re.++ (str.to_re "=") (re.++ (str.to_re "&") (re.++ (str.to_re "e") (re.++ (str.to_re "s") (re.++ (str.to_re "r") (re.++ (str.to_re "c") (re.++ (str.to_re "=") (re.++ (str.to_re "s") (re.++ (str.to_re "&") (re.++ (str.to_re "s") (re.++ (str.to_re "o") (re.++ (str.to_re "u") (re.++ (str.to_re "r") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (re.++ (str.to_re "=") (re.++ (str.to_re "w") (re.++ (str.to_re "e") (re.++ (str.to_re "b") (re.++ (str.to_re "&") (re.++ (str.to_re "c") (re.++ (str.to_re "d") (re.++ (str.to_re "=") (re.++ (str.to_re "10") (re.++ (str.to_re "&") (re.++ (str.to_re "v") (re.++ (str.to_re "e") (re.++ (str.to_re "d") (re.++ (str.to_re "=") (re.++ (str.to_re "0") (re.++ (str.to_re "C") (re.++ (str.to_re "H") (re.++ (str.to_re "o") (re.++ (str.to_re "Q") (re.++ (str.to_re "F") (re.++ (str.to_re "j") (re.++ (str.to_re "A") (re.++ (str.to_re "J") (re.++ (str.to_re "&") (re.++ (str.to_re "u") (re.++ (str.to_re "r") (re.++ (str.to_re "l") (re.++ (str.to_re "=") (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "p") (re.++ (str.to_re ":") (re.++ (str.to_re "/") (re.++ (str.to_re "/") (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "d") (re.++ (str.to_re "-") (re.++ (str.to_re "t") (re.++ (str.to_re "h") (re.++ (str.to_re "e") (re.++ (str.to_re "f") (re.++ (str.to_re "t") (re.++ (str.to_re "-") (re.++ (str.to_re "a") (re.++ (str.to_re "u") (re.++ (str.to_re "t") (re.++ (str.to_re "o") (re.++ (str.to_re "-") (re.++ (str.to_re "v") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "t") (re.++ (str.to_re "k") (re.++ (str.to_re "/") (re.++ (str.to_re "B") (re.++ (str.to_re "i") (re.++ (str.to_re "g") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "n") (re.++ (str.to_re "i") (re.++ (str.to_re "u") (re.++ (str.to_re "s") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "p") (re.++ (str.to_re "h") (str.to_re "p")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)