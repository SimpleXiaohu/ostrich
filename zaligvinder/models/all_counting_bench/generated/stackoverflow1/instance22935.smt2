;test regex ([-a-zA-Z']+[^-a-zA-Z']+){0,5}the([^-a-zA-Z']+[-a-zA-Z']+){0,5}([-a-zA-Z']+[^-a-zA-Z']+){0,5}the([^-a-zA-Z']+[-a-zA-Z']+){0,5}
(declare-const X String)
(assert (str.in_re X (re.++ ((_ re.loop 0 5) (re.++ (re.+ (re.union (str.to_re "-") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (str.to_re "\u{27}"))))) (re.+ (re.inter (re.diff re.allchar (str.to_re "-")) (re.inter (re.diff re.allchar (re.range "a" "z")) (re.inter (re.diff re.allchar (re.range "A" "Z")) (re.diff re.allchar (str.to_re "\u{27}")))))))) (re.++ (str.to_re "t") (re.++ (str.to_re "h") (re.++ (str.to_re "e") (re.++ ((_ re.loop 0 5) (re.++ (re.+ (re.inter (re.diff re.allchar (str.to_re "-")) (re.inter (re.diff re.allchar (re.range "a" "z")) (re.inter (re.diff re.allchar (re.range "A" "Z")) (re.diff re.allchar (str.to_re "\u{27}")))))) (re.+ (re.union (str.to_re "-") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (str.to_re "\u{27}"))))))) (re.++ ((_ re.loop 0 5) (re.++ (re.+ (re.union (str.to_re "-") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (str.to_re "\u{27}"))))) (re.+ (re.inter (re.diff re.allchar (str.to_re "-")) (re.inter (re.diff re.allchar (re.range "a" "z")) (re.inter (re.diff re.allchar (re.range "A" "Z")) (re.diff re.allchar (str.to_re "\u{27}")))))))) (re.++ (str.to_re "t") (re.++ (str.to_re "h") (re.++ (str.to_re "e") ((_ re.loop 0 5) (re.++ (re.+ (re.inter (re.diff re.allchar (str.to_re "-")) (re.inter (re.diff re.allchar (re.range "a" "z")) (re.inter (re.diff re.allchar (re.range "A" "Z")) (re.diff re.allchar (str.to_re "\u{27}")))))) (re.+ (re.union (str.to_re "-") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (str.to_re "\u{27}"))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)