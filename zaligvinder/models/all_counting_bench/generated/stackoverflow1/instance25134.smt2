;test regex ^((1|2|3|4|5|6|11N?|22N?|33N?|44N?|55N?|66N?)(-R)?)(\s(1|2|3|4|5|6|11N?|22N?|33N?|44N?|55N?|66N?)(-R)?){0,5}$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to_re "1") (str.to_re "2")) (str.to_re "3")) (str.to_re "4")) (str.to_re "5")) (str.to_re "6")) (re.++ (str.to_re "11") (re.opt (str.to_re "N")))) (re.++ (str.to_re "22") (re.opt (str.to_re "N")))) (re.++ (str.to_re "33") (re.opt (str.to_re "N")))) (re.++ (str.to_re "44") (re.opt (str.to_re "N")))) (re.++ (str.to_re "55") (re.opt (str.to_re "N")))) (re.++ (str.to_re "66") (re.opt (str.to_re "N")))) (re.opt (re.++ (str.to_re "-") (str.to_re "R")))) ((_ re.loop 0 5) (re.++ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to_re "1") (str.to_re "2")) (str.to_re "3")) (str.to_re "4")) (str.to_re "5")) (str.to_re "6")) (re.++ (str.to_re "11") (re.opt (str.to_re "N")))) (re.++ (str.to_re "22") (re.opt (str.to_re "N")))) (re.++ (str.to_re "33") (re.opt (str.to_re "N")))) (re.++ (str.to_re "44") (re.opt (str.to_re "N")))) (re.++ (str.to_re "55") (re.opt (str.to_re "N")))) (re.++ (str.to_re "66") (re.opt (str.to_re "N")))) (re.opt (re.++ (str.to_re "-") (str.to_re "R")))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)