;test regex grep -Pv '([0-9]{1,3}.){3}(0|255)' [inputfile] > [outputfile]
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "P") (re.++ (str.to_re "v") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ ((_ re.loop 3 3) (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (re.diff re.allchar (str.to_re "\n")))) (re.++ (re.union (str.to_re "0") (str.to_re "255")) (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (re.union (str.to_re "i") (re.union (str.to_re "n") (re.union (str.to_re "p") (re.union (str.to_re "u") (re.union (str.to_re "t") (re.union (str.to_re "f") (re.union (str.to_re "i") (re.union (str.to_re "l") (str.to_re "e"))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re ">") (re.++ (str.to_re " ") (re.union (str.to_re "o") (re.union (str.to_re "u") (re.union (str.to_re "t") (re.union (str.to_re "p") (re.union (str.to_re "u") (re.union (str.to_re "t") (re.union (str.to_re "f") (re.union (str.to_re "i") (re.union (str.to_re "l") (str.to_re "e"))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)