;test regex ^((\SP)|(sp)|(FA)|(fa))[1-9][0-9]{2}-{0,1}((BSE)|(bse)|(bcs)|(BCS)|(BTN)|(btn))-{0,1}[0-9]{3}$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.union (re.union (re.union (re.++ (re.inter (re.diff re.allchar (str.to_re "\u{20}")) (re.inter (re.diff re.allchar (str.to_re "\u{0a}")) (re.inter (re.diff re.allchar (str.to_re "\u{0b}")) (re.inter (re.diff re.allchar (str.to_re "\u{0d}")) (re.inter (re.diff re.allchar (str.to_re "\u{09}")) (re.diff re.allchar (str.to_re "\u{0c}"))))))) (str.to_re "P")) (re.++ (str.to_re "s") (str.to_re "p"))) (re.++ (str.to_re "F") (str.to_re "A"))) (re.++ (str.to_re "f") (str.to_re "a"))) (re.++ (re.range "1" "9") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ ((_ re.loop 0 1) (str.to_re "-")) (re.++ (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "B") (re.++ (str.to_re "S") (str.to_re "E"))) (re.++ (str.to_re "b") (re.++ (str.to_re "s") (str.to_re "e")))) (re.++ (str.to_re "b") (re.++ (str.to_re "c") (str.to_re "s")))) (re.++ (str.to_re "B") (re.++ (str.to_re "C") (str.to_re "S")))) (re.++ (str.to_re "B") (re.++ (str.to_re "T") (str.to_re "N")))) (re.++ (str.to_re "b") (re.++ (str.to_re "t") (str.to_re "n")))) (re.++ ((_ re.loop 0 1) (str.to_re "-")) ((_ re.loop 3 3) (re.range "0" "9"))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)