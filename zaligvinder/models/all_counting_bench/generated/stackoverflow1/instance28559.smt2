;test regex Select 'P' from dual Where REGEXP_LIKE ('W777AA,WZGET0,WZGEG0','(^W[0-9A-Z]{5}(,W[0-9A-Z]{5}){0,3}$ | (%$))')
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "S") (re.++ (str.to_re "e") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "t") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "P") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "f") (re.++ (str.to_re "r") (re.++ (str.to_re "o") (re.++ (str.to_re "m") (re.++ (str.to_re " ") (re.++ (str.to_re "d") (re.++ (str.to_re "u") (re.++ (str.to_re "a") (re.++ (str.to_re "l") (re.++ (str.to_re " ") (re.++ (str.to_re "W") (re.++ (str.to_re "h") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "R") (re.++ (str.to_re "E") (re.++ (str.to_re "G") (re.++ (str.to_re "E") (re.++ (str.to_re "X") (re.++ (str.to_re "P") (re.++ (str.to_re "_") (re.++ (str.to_re "L") (re.++ (str.to_re "I") (re.++ (str.to_re "K") (re.++ (str.to_re "E") (re.++ (str.to_re " ") (re.++ (re.++ (re.++ (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "W") (re.++ (str.to_re "777") (re.++ (str.to_re "A") (str.to_re "A"))))) (re.++ (str.to_re ",") (re.++ (str.to_re "W") (re.++ (str.to_re "Z") (re.++ (str.to_re "G") (re.++ (str.to_re "E") (re.++ (str.to_re "T") (str.to_re "0")))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "W") (re.++ (str.to_re "Z") (re.++ (str.to_re "G") (re.++ (str.to_re "E") (re.++ (str.to_re "G") (re.++ (str.to_re "0") (str.to_re "\u{27}"))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\u{27}") (re.++ (re.union (re.++ (re.++ (str.to_re "") (re.++ (str.to_re "W") (re.++ ((_ re.loop 5 5) (re.union (re.range "0" "9") (re.range "A" "Z"))) ((_ re.loop 0 3) (re.++ (str.to_re ",") (re.++ (str.to_re "W") ((_ re.loop 5 5) (re.union (re.range "0" "9") (re.range "A" "Z"))))))))) (re.++ (str.to_re "") (str.to_re " "))) (re.++ (str.to_re " ") (re.++ (str.to_re "%") (str.to_re "")))) (str.to_re "\u{27}"))))))))))))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)