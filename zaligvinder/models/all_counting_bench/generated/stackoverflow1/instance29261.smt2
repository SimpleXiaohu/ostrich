;test regex f?a?(x|csim)?(mob)?(ile\s*?)?(tel)?(e)?(phone|p|t|m)?\s*?:?\s*?(\s*?\(*?\d\)*?){8,10}
(declare-const X String)
(assert (str.in_re X (re.++ (re.opt (str.to_re "f")) (re.++ (re.opt (str.to_re "a")) (re.++ (re.opt (re.union (str.to_re "x") (re.++ (str.to_re "c") (re.++ (str.to_re "s") (re.++ (str.to_re "i") (str.to_re "m")))))) (re.++ (re.opt (re.++ (str.to_re "m") (re.++ (str.to_re "o") (str.to_re "b")))) (re.++ (re.opt (re.++ (str.to_re "i") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))))) (re.++ (re.opt (re.++ (str.to_re "t") (re.++ (str.to_re "e") (str.to_re "l")))) (re.++ (re.opt (str.to_re "e")) (re.++ (re.opt (re.union (re.union (re.union (re.++ (str.to_re "p") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re "n") (str.to_re "e"))))) (str.to_re "p")) (str.to_re "t")) (str.to_re "m"))) (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.opt (str.to_re ":")) (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) ((_ re.loop 8 10) (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.* (str.to_re "(")) (re.++ (re.range "0" "9") (re.* (str.to_re ")")))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)