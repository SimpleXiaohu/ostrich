;test regex prefix:\\w+,\\w+,\\s*-?[0-9]{1,4}\\s*,\\s*-?[0-9]{1,4}\\s*,\\s*-?[0-9]{1,4}\\s*,(?:\\w+)
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (str.to_re "p") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "f") (re.++ (str.to_re "i") (re.++ (str.to_re "x") (re.++ (str.to_re ":") (re.++ (str.to_re "\\") (re.+ (str.to_re "w")))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\\") (re.+ (str.to_re "w"))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\\") (re.++ (re.* (str.to_re "s")) (re.++ (re.opt (str.to_re "-")) (re.++ ((_ re.loop 1 4) (re.range "0" "9")) (re.++ (str.to_re "\\") (re.* (str.to_re "s"))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\\") (re.++ (re.* (str.to_re "s")) (re.++ (re.opt (str.to_re "-")) (re.++ ((_ re.loop 1 4) (re.range "0" "9")) (re.++ (str.to_re "\\") (re.* (str.to_re "s"))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\\") (re.++ (re.* (str.to_re "s")) (re.++ (re.opt (str.to_re "-")) (re.++ ((_ re.loop 1 4) (re.range "0" "9")) (re.++ (str.to_re "\\") (re.* (str.to_re "s"))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\\") (re.+ (str.to_re "w")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)