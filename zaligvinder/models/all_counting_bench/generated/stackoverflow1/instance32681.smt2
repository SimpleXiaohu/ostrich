;test regex ^\s*(?:\+?(011))?[-. (]*?(1|32)?[-. (]*(703|701|21)?[-. )]*(\d{3})?[-. ]*(\d{4})?\s*$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.opt (re.++ (re.opt (str.to_re "+")) (str.to_re "011"))) (re.++ (re.* (re.union (str.to_re "-") (re.union (str.to_re ".") (re.union (str.to_re " ") (str.to_re "("))))) (re.++ (re.opt (re.union (str.to_re "1") (str.to_re "32"))) (re.++ (re.* (re.union (str.to_re "-") (re.union (str.to_re ".") (re.union (str.to_re " ") (str.to_re "("))))) (re.++ (re.opt (re.union (re.union (str.to_re "703") (str.to_re "701")) (str.to_re "21"))) (re.++ (re.* (re.union (str.to_re "-") (re.union (str.to_re ".") (re.union (str.to_re " ") (str.to_re ")"))))) (re.++ (re.opt ((_ re.loop 3 3) (re.range "0" "9"))) (re.++ (re.* (re.union (str.to_re "-") (re.union (str.to_re ".") (str.to_re " ")))) (re.++ (re.opt ((_ re.loop 4 4) (re.range "0" "9"))) (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)