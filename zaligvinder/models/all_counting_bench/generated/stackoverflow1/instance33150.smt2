;test regex ^[(0-9)|(_|\.)]|^[0-9]+$|[^a-zA-z0-9_.]{3,}|(_\.|\._)|\.{2,}|_{2,}
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "") (re.union (str.to_re "(") (re.union (re.range "0" "9") (re.union (str.to_re ")") (re.union (str.to_re "|") (re.union (str.to_re "(") (re.union (str.to_re "_") (re.union (str.to_re "|") (re.union (str.to_re ".") (str.to_re ")")))))))))) (re.++ (re.++ (str.to_re "") (re.+ (re.range "0" "9"))) (str.to_re ""))) (re.++ (re.* (re.inter (re.diff re.allchar (re.range "a" "z")) (re.inter (re.diff re.allchar (re.range "A" "z")) (re.inter (re.diff re.allchar (re.range "0" "9")) (re.inter (re.diff re.allchar (str.to_re "_")) (re.diff re.allchar (str.to_re "."))))))) ((_ re.loop 3 3) (re.inter (re.diff re.allchar (re.range "a" "z")) (re.inter (re.diff re.allchar (re.range "A" "z")) (re.inter (re.diff re.allchar (re.range "0" "9")) (re.inter (re.diff re.allchar (str.to_re "_")) (re.diff re.allchar (str.to_re "."))))))))) (re.union (re.++ (str.to_re "_") (str.to_re ".")) (re.++ (str.to_re ".") (str.to_re "_")))) (re.++ (re.* (str.to_re ".")) ((_ re.loop 2 2) (str.to_re ".")))) (re.++ (re.* (str.to_re "_")) ((_ re.loop 2 2) (str.to_re "_"))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)