;test regex ([ftp:]|[\.\.])*\/[\/]{0,1}([a-z0-9\.\/]*[a-z0-9]*)([\\.a-z0-9]+)([0-9a-zAz:]+)[@]*[\/?#]*([\\.\/a-z0-9:]+)?([?=]([^#]*))?[#a-zA-Z]*
(declare-const X String)
(assert (str.in_re X (re.++ (re.* (re.union (re.union (str.to_re "f") (re.union (str.to_re "t") (re.union (str.to_re "p") (str.to_re ":")))) (re.union (str.to_re ".") (str.to_re ".")))) (re.++ (str.to_re "/") (re.++ ((_ re.loop 0 1) (str.to_re "/")) (re.++ (re.++ (re.* (re.union (re.range "a" "z") (re.union (re.range "0" "9") (re.union (str.to_re ".") (str.to_re "/"))))) (re.* (re.union (re.range "a" "z") (re.range "0" "9")))) (re.++ (re.+ (re.union (str.to_re "\\") (re.union (str.to_re ".") (re.union (re.range "a" "z") (re.range "0" "9"))))) (re.++ (re.+ (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (str.to_re "A") (re.union (str.to_re "z") (str.to_re ":")))))) (re.++ (re.* (str.to_re "@")) (re.++ (re.* (re.union (str.to_re "/") (re.union (str.to_re "?") (str.to_re "#")))) (re.++ (re.opt (re.+ (re.union (str.to_re "\\") (re.union (str.to_re ".") (re.union (str.to_re "/") (re.union (re.range "a" "z") (re.union (re.range "0" "9") (str.to_re ":")))))))) (re.++ (re.opt (re.++ (re.union (str.to_re "?") (str.to_re "=")) (re.* (re.diff re.allchar (str.to_re "#"))))) (re.* (re.union (str.to_re "#") (re.union (re.range "a" "z") (re.range "A" "Z"))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)