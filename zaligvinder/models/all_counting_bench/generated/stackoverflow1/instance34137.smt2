;test regex ... | grep -E "([1-9][0-9]{4,}|3[0-9]{2}[1-9]|3[0-9][1-9]0|[4-9][0-9]{3}) elapsed"
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.diff re.allchar (str.to_re "\n")) (str.to_re " ")))) (re.++ (str.to_re " ") (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "E") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (re.union (re.union (re.union (re.++ (re.range "1" "9") (re.++ (re.* (re.range "0" "9")) ((_ re.loop 4 4) (re.range "0" "9")))) (re.++ (str.to_re "3") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.range "1" "9")))) (re.++ (str.to_re "3") (re.++ (re.range "0" "9") (re.++ (re.range "1" "9") (str.to_re "0"))))) (re.++ (re.range "4" "9") ((_ re.loop 3 3) (re.range "0" "9")))) (re.++ (str.to_re " ") (re.++ (str.to_re "e") (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "p") (re.++ (str.to_re "s") (re.++ (str.to_re "e") (re.++ (str.to_re "d") (str.to_re "\u{22}")))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)