;test regex (?:Seg|Segunda)? [a] (?:Sex|sexta)?: (?:de)?\s?(\d{1,2})h?(\d{2})? [a]s .*?h(\d{2})?
(declare-const X String)
(assert (str.in_re X (re.++ (re.opt (re.union (re.++ (str.to_re "S") (re.++ (str.to_re "e") (str.to_re "g"))) (re.++ (str.to_re "S") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "u") (re.++ (str.to_re "n") (re.++ (str.to_re "d") (str.to_re "a"))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "a") (re.++ (str.to_re " ") (re.++ (re.opt (re.union (re.++ (str.to_re "S") (re.++ (str.to_re "e") (str.to_re "x"))) (re.++ (str.to_re "s") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (re.++ (str.to_re "t") (str.to_re "a"))))))) (re.++ (str.to_re ":") (re.++ (str.to_re " ") (re.++ (re.opt (re.++ (str.to_re "d") (str.to_re "e"))) (re.++ (re.opt (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.++ (re.opt (str.to_re "h")) (re.++ (re.opt ((_ re.loop 2 2) (re.range "0" "9"))) (re.++ (str.to_re " ") (re.++ (str.to_re "a") (re.++ (str.to_re "s") (re.++ (str.to_re " ") (re.++ (re.* (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re "h") (re.opt ((_ re.loop 2 2) (re.range "0" "9")))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)