;test regex ((>|<|q)?[=:8;]{1}(')?(-)?[><\)\(\/cdopsx:^*]|\([\w\s]+\)|([:P$])|([|-])|(&#9829;{0,}.)|(x{0,}.))
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.union (re.union (re.++ (re.opt (re.union (re.union (str.to_re ">") (str.to_re "<")) (str.to_re "q"))) (re.++ ((_ re.loop 1 1) (re.union (str.to_re "=") (re.union (str.to_re ":") (re.union (str.to_re "8") (str.to_re ";"))))) (re.++ (re.opt (str.to_re "\u{27}")) (re.++ (re.opt (str.to_re "-")) (re.union (str.to_re ">") (re.union (str.to_re "<") (re.union (str.to_re ")") (re.union (str.to_re "(") (re.union (str.to_re "/") (re.union (str.to_re "c") (re.union (str.to_re "d") (re.union (str.to_re "o") (re.union (str.to_re "p") (re.union (str.to_re "s") (re.union (str.to_re "x") (re.union (str.to_re ":") (re.union (str.to_re "^") (str.to_re "*")))))))))))))))))) (re.++ (str.to_re "(") (re.++ (re.+ (re.union (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))) (str.to_re ")")))) (re.union (str.to_re ":") (re.union (str.to_re "P") (str.to_re "$")))) (re.union (str.to_re "|") (str.to_re "-"))) (re.++ (str.to_re "&") (re.++ (str.to_re "#") (re.++ (str.to_re "9829") (re.++ (re.++ (re.* (str.to_re ";")) ((_ re.loop 0 0) (str.to_re ";"))) (re.diff re.allchar (str.to_re "\n"))))))) (re.++ (re.++ (re.* (str.to_re "x")) ((_ re.loop 0 0) (str.to_re "x"))) (re.diff re.allchar (str.to_re "\n"))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)