;test regex \w+/[\w\-]+/\d{4}-[01]\d-[0-3]\d/(computer|desktop|laptop)
(declare-const X String)
(assert (str.in_re X (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.++ (str.to_re "/") (re.++ (re.+ (re.union (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (str.to_re "-"))) (re.++ (str.to_re "/") (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (str.to_re "-") (re.++ (str.to_re "01") (re.++ (re.range "0" "9") (re.++ (str.to_re "-") (re.++ (re.range "0" "3") (re.++ (re.range "0" "9") (re.++ (str.to_re "/") (re.union (re.union (re.++ (str.to_re "c") (re.++ (str.to_re "o") (re.++ (str.to_re "m") (re.++ (str.to_re "p") (re.++ (str.to_re "u") (re.++ (str.to_re "t") (re.++ (str.to_re "e") (str.to_re "r")))))))) (re.++ (str.to_re "d") (re.++ (str.to_re "e") (re.++ (str.to_re "s") (re.++ (str.to_re "k") (re.++ (str.to_re "t") (re.++ (str.to_re "o") (str.to_re "p")))))))) (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "p") (re.++ (str.to_re "t") (re.++ (str.to_re "o") (str.to_re "p")))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)