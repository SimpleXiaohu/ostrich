;test regex REGEX_EXTRACT(Del_EFF_DT,'\\d{4}\\d{2}\\d{2}\\s',1) AS DEL_EFF_DT;
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "R") (re.++ (str.to_re "E") (re.++ (str.to_re "G") (re.++ (str.to_re "E") (re.++ (str.to_re "X") (re.++ (str.to_re "_") (re.++ (str.to_re "E") (re.++ (str.to_re "X") (re.++ (str.to_re "T") (re.++ (str.to_re "R") (re.++ (str.to_re "A") (re.++ (str.to_re "C") (re.++ (str.to_re "T") (re.++ (re.++ (re.++ (re.++ (str.to_re "D") (re.++ (str.to_re "e") (re.++ (str.to_re "l") (re.++ (str.to_re "_") (re.++ (str.to_re "E") (re.++ (str.to_re "F") (re.++ (str.to_re "F") (re.++ (str.to_re "_") (re.++ (str.to_re "D") (str.to_re "T")))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "\\") (re.++ ((_ re.loop 4 4) (str.to_re "d")) (re.++ (str.to_re "\\") (re.++ ((_ re.loop 2 2) (str.to_re "d")) (re.++ (str.to_re "\\") (re.++ ((_ re.loop 2 2) (str.to_re "d")) (re.++ (str.to_re "\\") (re.++ (str.to_re "s") (str.to_re "\u{27}")))))))))))) (re.++ (str.to_re ",") (str.to_re "1"))) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "S") (re.++ (str.to_re " ") (re.++ (str.to_re "D") (re.++ (str.to_re "E") (re.++ (str.to_re "L") (re.++ (str.to_re "_") (re.++ (str.to_re "E") (re.++ (str.to_re "F") (re.++ (str.to_re "F") (re.++ (str.to_re "_") (re.++ (str.to_re "D") (re.++ (str.to_re "T") (str.to_re ";")))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)