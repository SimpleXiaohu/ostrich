;test regex ^BT\d{1,2}\s|^HS\d{1,2}\s|KA27|AB31|AB32|AB33|AB34|AB35|AB36|AB37|AB38|PH4|PH5|PH6|PH7|PH8|PH9|KA28|^KW\d{1,2}\s|^IM\d{1,2}\s|^IV\d{1,2}\s|^AB4\d{1}\s|^AB5\d{1}\s|^PA2\d{1}\s|^PA3\d{1}\s|^PA4\d{1}\s|^PA5\d{1}\s|^PA6\d{1}\s|^PA7\d{1}\s|^PH1\d{1}\s|^PH2\d{1}\s|^PH3\d{1}\s|^PH4\d{1}\s|^PH5\d{1}\s
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "") (re.++ (str.to_re "B") (re.++ (str.to_re "T") (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "H") (re.++ (str.to_re "S") (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))))) (re.++ (str.to_re "K") (re.++ (str.to_re "A") (str.to_re "27")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "31")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "32")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "33")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "34")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "35")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "36")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "37")))) (re.++ (str.to_re "A") (re.++ (str.to_re "B") (str.to_re "38")))) (re.++ (str.to_re "P") (re.++ (str.to_re "H") (str.to_re "4")))) (re.++ (str.to_re "P") (re.++ (str.to_re "H") (str.to_re "5")))) (re.++ (str.to_re "P") (re.++ (str.to_re "H") (str.to_re "6")))) (re.++ (str.to_re "P") (re.++ (str.to_re "H") (str.to_re "7")))) (re.++ (str.to_re "P") (re.++ (str.to_re "H") (str.to_re "8")))) (re.++ (str.to_re "P") (re.++ (str.to_re "H") (str.to_re "9")))) (re.++ (str.to_re "K") (re.++ (str.to_re "A") (str.to_re "28")))) (re.++ (str.to_re "") (re.++ (str.to_re "K") (re.++ (str.to_re "W") (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "I") (re.++ (str.to_re "M") (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "I") (re.++ (str.to_re "V") (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "A") (re.++ (str.to_re "B") (re.++ (str.to_re "4") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "A") (re.++ (str.to_re "B") (re.++ (str.to_re "5") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "2") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "3") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "4") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "5") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "6") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "7") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "H") (re.++ (str.to_re "1") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "H") (re.++ (str.to_re "2") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "H") (re.++ (str.to_re "3") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "H") (re.++ (str.to_re "4") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "P") (re.++ (str.to_re "H") (re.++ (str.to_re "5") (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)