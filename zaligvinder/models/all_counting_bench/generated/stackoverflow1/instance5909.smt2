;test regex $name = (split(/\Q$MOVIE_IN_PATH\E[\\\/]{1}/i, $name))[1];
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "") (re.++ (str.to_re "n") (re.++ (str.to_re "a") (re.++ (str.to_re "m") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "=") (re.++ (str.to_re " ") (re.++ (re.++ (str.to_re "s") (re.++ (str.to_re "p") (re.++ (str.to_re "l") (re.++ (str.to_re "i") (re.++ (str.to_re "t") (re.++ (re.++ (re.++ (re.++ (str.to_re "/") (str.to_re "Q")) (re.++ (str.to_re "") (re.++ (str.to_re "M") (re.++ (str.to_re "O") (re.++ (str.to_re "V") (re.++ (str.to_re "I") (re.++ (str.to_re "E") (re.++ (str.to_re "_") (re.++ (str.to_re "I") (re.++ (str.to_re "N") (re.++ (str.to_re "_") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "T") (re.++ (str.to_re "H") (re.++ (str.to_re "E") (re.++ ((_ re.loop 1 1) (re.union (str.to_re "\\") (str.to_re "/"))) (re.++ (str.to_re "/") (str.to_re "i"))))))))))))))))))) (re.++ (str.to_re ",") (str.to_re " "))) (re.++ (str.to_re "") (re.++ (str.to_re "n") (re.++ (str.to_re "a") (re.++ (str.to_re "m") (str.to_re "e"))))))))))) (re.++ (str.to_re "1") (str.to_re ";")))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)