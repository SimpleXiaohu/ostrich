;test regex ("EEID","SUPLIFE","Voluntary Life Insurance",([^,]+,){8}"","A",)("")(.*)
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "E") (re.++ (str.to_re "E") (re.++ (str.to_re "I") (re.++ (str.to_re "D") (str.to_re "\u{22}")))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "S") (re.++ (str.to_re "U") (re.++ (str.to_re "P") (re.++ (str.to_re "L") (re.++ (str.to_re "I") (re.++ (str.to_re "F") (re.++ (str.to_re "E") (str.to_re "\u{22}"))))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "V") (re.++ (str.to_re "o") (re.++ (str.to_re "l") (re.++ (str.to_re "u") (re.++ (str.to_re "n") (re.++ (str.to_re "t") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ (str.to_re "y") (re.++ (str.to_re " ") (re.++ (str.to_re "L") (re.++ (str.to_re "i") (re.++ (str.to_re "f") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "I") (re.++ (str.to_re "n") (re.++ (str.to_re "s") (re.++ (str.to_re "u") (re.++ (str.to_re "r") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (str.to_re "\u{22}")))))))))))))))))))))))))))) (re.++ (str.to_re ",") (re.++ ((_ re.loop 8 8) (re.++ (re.+ (re.diff re.allchar (str.to_re ","))) (str.to_re ","))) (re.++ (str.to_re "\u{22}") (str.to_re "\u{22}"))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "A") (str.to_re "\u{22}"))))) (str.to_re ",")) (re.++ (re.++ (str.to_re "\u{22}") (str.to_re "\u{22}")) (re.* (re.diff re.allchar (str.to_re "\n")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)