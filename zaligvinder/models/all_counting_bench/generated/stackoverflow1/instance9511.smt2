;test regex ([ns]?(?: ?[+-]?\d+(?:\.\d+)?['"d:]?){1,3} ?[ns]?) ?,? ?([ew]?(?: ?[+-]?\d+(?:\.\d+)?['"d:]?){1,3} ?[ew]?)
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (re.opt (re.union (str.to_re "n") (str.to_re "s"))) (re.++ ((_ re.loop 1 3) (re.++ (re.opt (str.to_re " ")) (re.++ (re.opt (re.union (str.to_re "+") (str.to_re "-"))) (re.++ (re.+ (re.range "0" "9")) (re.++ (re.opt (re.++ (str.to_re ".") (re.+ (re.range "0" "9")))) (re.opt (re.union (str.to_re "\u{27}") (re.union (str.to_re "\u{22}") (re.union (str.to_re "d") (str.to_re ":")))))))))) (re.++ (re.opt (str.to_re " ")) (re.opt (re.union (str.to_re "n") (str.to_re "s")))))) (re.opt (str.to_re " "))) (re.++ (re.opt (str.to_re ",")) (re.++ (re.opt (str.to_re " ")) (re.++ (re.opt (re.union (str.to_re "e") (str.to_re "w"))) (re.++ ((_ re.loop 1 3) (re.++ (re.opt (str.to_re " ")) (re.++ (re.opt (re.union (str.to_re "+") (str.to_re "-"))) (re.++ (re.+ (re.range "0" "9")) (re.++ (re.opt (re.++ (str.to_re ".") (re.+ (re.range "0" "9")))) (re.opt (re.union (str.to_re "\u{27}") (re.union (str.to_re "\u{22}") (re.union (str.to_re "d") (str.to_re ":")))))))))) (re.++ (re.opt (str.to_re " ")) (re.opt (re.union (str.to_re "e") (str.to_re "w")))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)