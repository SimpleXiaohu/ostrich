;test regex gsub("\\n(.{90,}[\\.\\?\\:].*){2,}\\n$", "\n", string1, perl=T)
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "g") (re.++ (str.to_re "s") (re.++ (str.to_re "u") (re.++ (str.to_re "b") (re.++ (re.++ (re.++ (re.++ (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "\\") (re.++ (str.to_re "n") (re.++ (re.++ (re.* (re.++ (re.++ (re.* (re.diff re.allchar (str.to_re "\n"))) ((_ re.loop 90 90) (re.diff re.allchar (str.to_re "\n")))) (re.++ (re.union (str.to_re "\\") (re.union (str.to_re ".") (re.union (str.to_re "\\") (re.union (str.to_re "?") (re.union (str.to_re "\\") (str.to_re ":")))))) (re.* (re.diff re.allchar (str.to_re "\n")))))) ((_ re.loop 2 2) (re.++ (re.++ (re.* (re.diff re.allchar (str.to_re "\n"))) ((_ re.loop 90 90) (re.diff re.allchar (str.to_re "\n")))) (re.++ (re.union (str.to_re "\\") (re.union (str.to_re ".") (re.union (str.to_re "\\") (re.union (str.to_re "?") (re.union (str.to_re "\\") (str.to_re ":")))))) (re.* (re.diff re.allchar (str.to_re "\n"))))))) (re.++ (str.to_re "\\") (str.to_re "n")))))) (re.++ (str.to_re "") (str.to_re "\u{22}"))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "\u{0a}") (str.to_re "\u{22}")))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "s") (re.++ (str.to_re "t") (re.++ (str.to_re "r") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (re.++ (str.to_re "g") (str.to_re "1")))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "p") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "l") (re.++ (str.to_re "=") (str.to_re "T")))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)