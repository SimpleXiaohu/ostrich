;test regex \d{9}X|\d{8}X\d|\d{7}X\d{2}|\d{6}X\d{3}|\d{5}X\d{4}|\d{4}X\d{5}|\d{3}X\d{6}|\d{2}X\d{7}|\d{1}X\d{8}|\d{10}|X\d{9}
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.loop 9 9) (re.range "0" "9")) (str.to_re "X")) (re.++ ((_ re.loop 8 8) (re.range "0" "9")) (re.++ (str.to_re "X") (re.range "0" "9")))) (re.++ ((_ re.loop 7 7) (re.range "0" "9")) (re.++ (str.to_re "X") ((_ re.loop 2 2) (re.range "0" "9"))))) (re.++ ((_ re.loop 6 6) (re.range "0" "9")) (re.++ (str.to_re "X") ((_ re.loop 3 3) (re.range "0" "9"))))) (re.++ ((_ re.loop 5 5) (re.range "0" "9")) (re.++ (str.to_re "X") ((_ re.loop 4 4) (re.range "0" "9"))))) (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (str.to_re "X") ((_ re.loop 5 5) (re.range "0" "9"))))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ (str.to_re "X") ((_ re.loop 6 6) (re.range "0" "9"))))) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re "X") ((_ re.loop 7 7) (re.range "0" "9"))))) (re.++ ((_ re.loop 1 1) (re.range "0" "9")) (re.++ (str.to_re "X") ((_ re.loop 8 8) (re.range "0" "9"))))) ((_ re.loop 10 10) (re.range "0" "9"))) (re.++ (str.to_re "X") ((_ re.loop 9 9) (re.range "0" "9"))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)