;test regex $pattern = '/^(([\w]+:)?\/\/)?(([\d\w]|%[a-fA-f\d]{2,2})+(:([\d\w]|%[a-fA-f\d]{2,2})+)?@)?([\d\w][-\d\w]{0,253}[\d\w]\.)+[\w]{2,4}(:[\d]+)?(\/([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)*(\?(&amp;?([-+_~.\d\w]|%[a-fA-f\d]{2,2})=?)*)?(#([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)?$/';
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (str.to_re "") (re.++ (str.to_re "p") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "n") (re.++ (str.to_re " ") (re.++ (str.to_re "=") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (str.to_re "/"))))))))))))) (re.++ (str.to_re "") (re.++ (re.opt (re.++ (re.opt (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (str.to_re ":"))) (re.++ (str.to_re "/") (str.to_re "/")))) (re.++ (re.opt (re.++ (re.+ (re.union (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.union (re.range "A" "f") (re.range "0" "9"))))))) (re.++ (re.opt (re.++ (str.to_re ":") (re.+ (re.union (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.union (re.range "A" "f") (re.range "0" "9"))))))))) (str.to_re "@")))) (re.++ (re.+ (re.++ (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.++ ((_ re.loop 0 253) (re.union (str.to_re "-") (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))))) (re.++ (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (str.to_re "."))))) (re.++ ((_ re.loop 2 4) (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (re.++ (re.opt (re.++ (str.to_re ":") (re.+ (re.range "0" "9")))) (re.++ (re.* (re.++ (str.to_re "/") (re.* (re.union (re.union (str.to_re "-") (re.union (str.to_re "+") (re.union (str.to_re "_") (re.union (str.to_re "~") (re.union (str.to_re ".") (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))))))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.union (re.range "A" "f") (re.range "0" "9"))))))))) (re.++ (re.opt (re.++ (str.to_re "?") (re.* (re.++ (str.to_re "&") (re.++ (str.to_re "a") (re.++ (str.to_re "m") (re.++ (str.to_re "p") (re.++ (re.opt (str.to_re ";")) (re.++ (re.union (re.union (str.to_re "-") (re.union (str.to_re "+") (re.union (str.to_re "_") (re.union (str.to_re "~") (re.union (str.to_re ".") (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))))))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.union (re.range "A" "f") (re.range "0" "9")))))) (re.opt (str.to_re "="))))))))))) (re.opt (re.++ (str.to_re "#") (re.* (re.union (re.union (str.to_re "-") (re.union (str.to_re "+") (re.union (str.to_re "_") (re.union (str.to_re "~") (re.union (str.to_re ".") (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))))))))) (re.++ (str.to_re "%") ((_ re.loop 2 2) (re.union (re.range "a" "f") (re.union (re.range "A" "f") (re.range "0" "9")))))))))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "/") (re.++ (str.to_re "\u{27}") (str.to_re ";")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)