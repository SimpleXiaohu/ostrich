;test regex "myid":"{1132} AND {1133} AND {1134} AND {1139} AND {1140} AND {1142} AND {1143} AND {1144} AND {1147} AND {1148} AND {1149} AND {1269} AND {1543} AND {1548} AND {1549} AND {1550} AND {1551} AND {1552} AND {1879} AND {1880} AND {1881} AND {1886} AND {1889} AND {1891} AND {1893} AND {1894}"
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "m") (re.++ (str.to_re "y") (re.++ (str.to_re "i") (re.++ (str.to_re "d") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re ":") (re.++ ((_ re.loop 1132 1132) (str.to_re "\u{22}")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1133 1133) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1134 1134) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1139 1139) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1140 1140) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1142 1142) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1143 1143) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1144 1144) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1147 1147) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1148 1148) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1149 1149) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1269 1269) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1543 1543) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1548 1548) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1549 1549) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1550 1550) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1551 1551) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1552 1552) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1879 1879) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1880 1880) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1881 1881) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1886 1886) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1889 1889) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1891 1891) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1893 1893) (str.to_re " ")) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ ((_ re.loop 1894 1894) (str.to_re " ")) (str.to_re "\u{22}"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)