;test regex SgxEpochRegEx='"SgxEpoch":\s*(\"([^0].{31}|.[^0].{30}|.{2}[^0].{29}|.{3}[^0].{28}|.{4}[^0].{27}|.{5}[^0].{26}|.{6}[^0].{25}|.{7}[^0].{24}|.{8}[^0].{23}|.{9}[^0].{22}|.{10}[^0].{21}|.{11}[^0].{20}|.{12}[^0].{19}|.{13}[^0].{18}|.{14}[^0].{17}|.{15}[^0].{16}|.{16}[^0].{15}|.{17}[^0].{14}|.{18}[^0].{13}|.{19}[^0].{12}|.{20}[^0].{11}|.{21}[^0].{10}|.{22}[^0].{9}|.{23}[^0].{8}|.{24}[^0].{7}|.{25}[^0].{6}|.{26}[^0].{5}|.{27}[^0].{4}|.{28}[^0].{3}|.{29}[^0].{2}|.{30}[^0].|.{31}[^0])\"|"")'
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "S") (re.++ (str.to_re "g") (re.++ (str.to_re "x") (re.++ (str.to_re "E") (re.++ (str.to_re "p") (re.++ (str.to_re "o") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "R") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "E") (re.++ (str.to_re "x") (re.++ (str.to_re "=") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "S") (re.++ (str.to_re "g") (re.++ (str.to_re "x") (re.++ (str.to_re "E") (re.++ (str.to_re "p") (re.++ (str.to_re "o") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re ":") (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.union (re.++ (str.to_re "\u{22}") (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 31 31) (re.diff re.allchar (str.to_re "\n")))) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 30 30) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 2 2) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 29 29) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 3 3) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 28 28) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 4 4) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 27 27) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 5 5) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 26 26) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 6 6) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 25 25) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 7 7) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 24 24) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 8 8) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 23 23) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 9 9) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 22 22) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 10 10) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 21 21) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 11 11) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 20 20) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 12 12) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 19 19) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 13 13) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 18 18) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 14 14) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 17 17) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 15 15) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 16 16) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 16 16) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 15 15) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 17 17) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 14 14) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 18 18) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 13 13) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 19 19) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 12 12) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 20 20) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 11 11) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 21 21) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 10 10) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 22 22) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 9 9) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 23 23) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 8 8) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 24 24) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 7 7) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 25 25) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 6 6) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 26 26) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 5 5) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 27 27) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 4 4) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 28 28) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 3 3) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 29 29) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) ((_ re.loop 2 2) (re.diff re.allchar (str.to_re "\n")))))) (re.++ ((_ re.loop 30 30) (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.diff re.allchar (str.to_re "0")) (re.diff re.allchar (str.to_re "\n"))))) (re.++ ((_ re.loop 31 31) (re.diff re.allchar (str.to_re "\n"))) (re.diff re.allchar (str.to_re "0")))) (str.to_re "\u{22}"))) (re.++ (str.to_re "\u{22}") (str.to_re "\u{22}"))) (str.to_re "\u{27}")))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)