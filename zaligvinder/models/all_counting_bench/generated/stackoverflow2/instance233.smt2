;test regex ^\|[DUA]\|[0-9A-Z]{8}\|[0-9A-Z]{8}\|[^|]{0,25}\|[^|]{0,25}\|[^|]{0,25}\|[A-Za-z]{2}\|[0-9]{5}\|[A-Za-z0-9]{12}\|[A-Za-z0-9]{10}\|[^|]{0,25}\|[01]\|[0-9]{12}\|[01]\|[0-9]{12}\|[01]\|[0-9]{15}\|[01]\|[0-9]{12}\|[01]\|[0-9]{12}\|[01]\|[0-9]{12}\|[01]\|[0-9]{12}\|[01]\|[0-9]{12}\|
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "") (re.++ (str.to_re "|") (re.++ (re.union (str.to_re "D") (re.union (str.to_re "U") (str.to_re "A"))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 8 8) (re.union (re.range "0" "9") (re.range "A" "Z"))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 8 8) (re.union (re.range "0" "9") (re.range "A" "Z"))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 0 25) (re.diff re.allchar (str.to_re "|"))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 0 25) (re.diff re.allchar (str.to_re "|"))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 0 25) (re.diff re.allchar (str.to_re "|"))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 2 2) (re.union (re.range "A" "Z") (re.range "a" "z"))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 5 5) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.union (re.range "A" "Z") (re.union (re.range "a" "z") (re.range "0" "9")))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 10 10) (re.union (re.range "A" "Z") (re.union (re.range "a" "z") (re.range "0" "9")))) (re.++ (str.to_re "|") (re.++ ((_ re.loop 0 25) (re.diff re.allchar (str.to_re "|"))) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 15 15) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.range "0" "9")) (re.++ (str.to_re "|") (re.++ (str.to_re "01") (re.++ (str.to_re "|") (re.++ ((_ re.loop 12 12) (re.range "0" "9")) (str.to_re "|"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)