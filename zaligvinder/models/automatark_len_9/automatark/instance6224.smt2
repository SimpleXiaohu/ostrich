(set-logic QF_SLIA)
(set-option :produce-models true)
(declare-const X String)
; /((https?|ftp)\:\/\/)?([a-z0-9+!*(),;?&=\$_.-]+(\:[a-z0-9+!*(),;?&=\$_.-]+)?@)?(([a-z0-9-.]*)\.([a-z]{2,6}))|(([0-9]{1,3}\.){3}[0-9]{1,3})(\:[0-9]{2,5})?(\/([a-z0-9+\$_-]\.?)+)*\/?(\?[a-z+&\$_.-][a-z0-9;:@&%=+\/\$_.-]*)?(#[a-z_.-][a-z0-9+\$_.-]*)?/i
(assert (str.in_re X (re.union (re.++ (str.to_re "/") (re.opt (re.++ (re.union (re.++ (str.to_re "http") (re.opt (str.to_re "s"))) (str.to_re "ftp")) (str.to_re "://"))) (re.opt (re.++ (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "+") (str.to_re "!") (str.to_re "*") (str.to_re "(") (str.to_re ")") (str.to_re ",") (str.to_re ";") (str.to_re "?") (str.to_re "&") (str.to_re "=") (str.to_re "$") (str.to_re "_") (str.to_re ".") (str.to_re "-"))) (re.opt (re.++ (str.to_re ":") (re.+ (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "+") (str.to_re "!") (str.to_re "*") (str.to_re "(") (str.to_re ")") (str.to_re ",") (str.to_re ";") (str.to_re "?") (str.to_re "&") (str.to_re "=") (str.to_re "$") (str.to_re "_") (str.to_re ".") (str.to_re "-"))))) (str.to_re "@"))) (re.* (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "-") (str.to_re "."))) (str.to_re ".") ((_ re.loop 2 6) (re.range "a" "z"))) (re.++ (re.opt (re.++ (str.to_re ":") ((_ re.loop 2 5) (re.range "0" "9")))) (re.* (re.++ (str.to_re "/") (re.+ (re.++ (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "+") (str.to_re "$") (str.to_re "_") (str.to_re "-")) (re.opt (str.to_re ".")))))) (re.opt (str.to_re "/")) (re.opt (re.++ (str.to_re "?") (re.union (re.range "a" "z") (str.to_re "+") (str.to_re "&") (str.to_re "$") (str.to_re "_") (str.to_re ".") (str.to_re "-")) (re.* (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re ";") (str.to_re ":") (str.to_re "@") (str.to_re "&") (str.to_re "%") (str.to_re "=") (str.to_re "+") (str.to_re "/") (str.to_re "$") (str.to_re "_") (str.to_re ".") (str.to_re "-"))))) (re.opt (re.++ (str.to_re "#") (re.union (re.range "a" "z") (str.to_re "_") (str.to_re ".") (str.to_re "-")) (re.* (re.union (re.range "a" "z") (re.range "0" "9") (str.to_re "+") (str.to_re "$") (str.to_re "_") (str.to_re ".") (str.to_re "-"))))) (str.to_re "/i\u{0a}") ((_ re.loop 3 3) (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (str.to_re "."))) ((_ re.loop 1 3) (re.range "0" "9"))))))
; Toolbar.*www\x2Ewebcruiser\x2Ecc\w+www\x2Etopadwarereviews\x2Ecom
(assert (not (str.in_re X (re.++ (str.to_re "Toolbar") (re.* re.allchar) (str.to_re "www.webcruiser.cc") (re.+ (re.union (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (str.to_re "www.topadwarereviews.com\u{0a}")))))
; Login\d+dll\x3FHOST\x3Acontains
(assert (str.in_re X (re.++ (str.to_re "Login") (re.+ (re.range "0" "9")) (str.to_re "dll?HOST:contains\u{0a}"))))
; [\w-]+@([\w-]+\.)+[\w-]+
(assert (not (str.in_re X (re.++ (re.+ (re.union (str.to_re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (str.to_re "@") (re.+ (re.++ (re.+ (re.union (str.to_re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (str.to_re "."))) (re.+ (re.union (str.to_re "-") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (str.to_re "\u{0a}")))))
; Toolbar\dcount\x2Eyok\x2EcomweatherHost\x3AUser-Agent\x3A
(assert (not (str.in_re X (re.++ (str.to_re "Toolbar") (re.range "0" "9") (str.to_re "count.yok.comweatherHost:User-Agent:\u{0a}")))))
(assert (> (str.len X) 9))
(check-sat)
