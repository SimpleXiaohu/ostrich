(set-logic QF_SLIA)
(set-option :produce-models true)
(declare-const X String)
; /[^\u{0d}\u{0a}\u{09}\u{20}-\u{7e}]{4}/P
(assert (not (str.in_re X (re.++ (str.to_re "/") ((_ re.loop 4 4) (re.union (str.to_re "\u{0d}") (str.to_re "\u{0a}") (str.to_re "\u{09}") (re.range " " "~"))) (str.to_re "/P\u{0a}")))))
; /\u{2e}dcr([\?\u{5c}\u{2f}]|$)/smiU
(assert (str.in_re X (re.++ (str.to_re "/.dcr") (re.union (str.to_re "?") (str.to_re "\u{5c}") (str.to_re "/")) (str.to_re "/smiU\u{0a}"))))
; (http):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+(\\.[\\w\\-_]+)(\\/)([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#]+)(\\/)((\\d{8}-)|(\\d{9}-)|(\\d{10}-)|(\\d{11}-))+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?+html^])?
(assert (str.in_re X (re.++ (str.to_re "http:\u{5c}/\u{5c}/") (re.+ (re.union (str.to_re "\u{5c}") (str.to_re "w") (re.range "\u{5c}" "_"))) (re.+ (re.++ (str.to_re "\u{5c}") re.allchar (re.+ (re.union (str.to_re "\u{5c}") (str.to_re "w") (re.range "\u{5c}" "_"))))) (str.to_re "\u{5c}/\u{5c}/") (re.+ (re.union (re.++ (str.to_re "\u{5c}") ((_ re.loop 8 8) (str.to_re "d")) (str.to_re "-")) (re.++ (str.to_re "\u{5c}") ((_ re.loop 9 9) (str.to_re "d")) (str.to_re "-")) (re.++ (str.to_re "\u{5c}") ((_ re.loop 10 10) (str.to_re "d")) (str.to_re "-")) (re.++ (str.to_re "\u{5c}") ((_ re.loop 11 11) (str.to_re "d")) (str.to_re "-")))) (re.opt (re.++ (re.* (re.union (str.to_re "\u{5c}") (str.to_re "w") (re.range "\u{5c}" "\u{5c}") (str.to_re ".") (str.to_re ",") (str.to_re "@") (str.to_re "?") (str.to_re "^") (str.to_re "=") (str.to_re "%") (str.to_re "&") (str.to_re ":") (str.to_re "/") (str.to_re "~") (str.to_re "+") (str.to_re "#"))) (re.union (str.to_re "\u{5c}") (str.to_re "w") (re.range "\u{5c}" "\u{5c}") (str.to_re "@") (str.to_re "?") (str.to_re "+") (str.to_re "h") (str.to_re "t") (str.to_re "m") (str.to_re "l") (str.to_re "^")))) (str.to_re "\u{0a}\u{5c}") re.allchar (re.+ (re.union (str.to_re "\u{5c}") (str.to_re "w") (re.range "\u{5c}" "_"))) (re.* (re.union (str.to_re "\u{5c}") (str.to_re "w") (re.range "\u{5c}" "\u{5c}") (str.to_re ".") (str.to_re ",") (str.to_re "@") (str.to_re "?") (str.to_re "^") (str.to_re "=") (str.to_re "%") (str.to_re "&") (str.to_re ":") (str.to_re "/") (str.to_re "~") (str.to_re "+") (str.to_re "#"))) (re.+ (re.union (str.to_re "\u{5c}") (str.to_re "w") (re.range "\u{5c}" "\u{5c}") (str.to_re "@") (str.to_re "?") (str.to_re "^") (str.to_re "=") (str.to_re "%") (str.to_re "&") (str.to_re "/") (str.to_re "~") (str.to_re "+") (str.to_re "#"))))))
; ^\d{4}(\/|-)([0][1-9]|[1][0-2])(\/|-)([0][1-9]|[1-2][0-9]|[3][0-1])$
(assert (not (str.in_re X (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.union (str.to_re "/") (str.to_re "-")) (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "2"))) (re.union (str.to_re "/") (str.to_re "-")) (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (re.range "1" "2") (re.range "0" "9")) (re.++ (str.to_re "3") (re.range "0" "1"))) (str.to_re "\u{0a}")))))
; href\s*=\s*\"((\/)([i])(\/)+([\w\-\.,@?^=%&:/~\+#]*[\w\-\@?^=%&/~\+#]+)*)\"
(assert (str.in_re X (re.++ (str.to_re "href") (re.* (re.union (str.to_re " ") (str.to_re "\u{09}") (str.to_re "\u{0a}") (str.to_re "\u{0c}") (str.to_re "\u{0d}"))) (str.to_re "=") (re.* (re.union (str.to_re " ") (str.to_re "\u{09}") (str.to_re "\u{0a}") (str.to_re "\u{0c}") (str.to_re "\u{0d}"))) (str.to_re "\u{22}\u{22}\u{0a}/i") (re.+ (str.to_re "/")) (re.* (re.++ (re.* (re.union (str.to_re "-") (str.to_re ".") (str.to_re ",") (str.to_re "@") (str.to_re "?") (str.to_re "^") (str.to_re "=") (str.to_re "%") (str.to_re "&") (str.to_re ":") (str.to_re "/") (str.to_re "~") (str.to_re "+") (str.to_re "#") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))) (re.+ (re.union (str.to_re "-") (str.to_re "@") (str.to_re "?") (str.to_re "^") (str.to_re "=") (str.to_re "%") (str.to_re "&") (str.to_re "/") (str.to_re "~") (str.to_re "+") (str.to_re "#") (re.range "0" "9") (re.range "A" "Z") (re.range "a" "z") (str.to_re "_"))))))))
(assert (> (str.len X) 9))
(check-sat)
