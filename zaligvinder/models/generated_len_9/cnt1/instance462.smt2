;test regex ^RESULT PREPARED [0-9a-f]{32} \[\[ks, tbl, col, :varchar\]\]$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (re.++ (re.++ (str.to_re "") (re.++ (str.to_re "R") (re.++ (str.to_re "E") (re.++ (str.to_re "S") (re.++ (str.to_re "U") (re.++ (str.to_re "L") (re.++ (str.to_re "T") (re.++ (str.to_re " ") (re.++ (str.to_re "P") (re.++ (str.to_re "R") (re.++ (str.to_re "E") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "R") (re.++ (str.to_re "E") (re.++ (str.to_re "D") (re.++ (str.to_re " ") (re.++ ((_ re.loop 32 32) (re.union (re.range "0" "9") (re.range "a" "f"))) (re.++ (str.to_re " ") (re.++ (str.to_re "[") (re.++ (str.to_re "[") (re.++ (str.to_re "k") (str.to_re "s"))))))))))))))))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "t") (re.++ (str.to_re "b") (str.to_re "l")))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "c") (re.++ (str.to_re "o") (str.to_re "l")))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re ":") (re.++ (str.to_re "v") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ (str.to_re "]") (str.to_re "]"))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)