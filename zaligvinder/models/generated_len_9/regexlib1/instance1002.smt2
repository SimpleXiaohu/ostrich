;test regex ^(0[1-9]|[12][0-9]|3[01])[\s\.\-/](J(anuary|uly|an|AN)|M(arch|ar|AR|ay|AY)|A(ugust|ug|UG)|(O(ctober|ct|CT)|(D(ecember|ec|EC))))[\s\.\-/][1-9][0-9]{3}|(0[1-9]|[12][0-9]|30)[\s\.\-/](A(pril|pr|PR)|J(une|un|UN)|S(eptember|ep|EP)|N(ovember|ov|OV))[\s\.\-/][1-9][0-9]{3}|(0[1-9]|1[0-9]|2[0-8])[\s\.\-/]F(ebruary|eb|EB)[\s\.\-/][1-9][0-9]{3}|29[\s\.\-/]F(ebruary|eb|EB)[\s\.\-/]((0[48]|[2468][048]|[13579][26])00|[0-9]{2}(0[48]|[2468][048]|[13579][26]))$
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.++ (str.to_re "") (re.++ (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "12") (re.range "0" "9"))) (re.++ (str.to_re "3") (str.to_re "01"))) (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.++ (re.union (re.union (re.union (re.++ (str.to_re "J") (re.union (re.union (re.union (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "u") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (str.to_re "y")))))) (re.++ (str.to_re "u") (re.++ (str.to_re "l") (str.to_re "y")))) (re.++ (str.to_re "a") (str.to_re "n"))) (re.++ (str.to_re "A") (str.to_re "N")))) (re.++ (str.to_re "M") (re.union (re.union (re.union (re.union (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ (str.to_re "c") (str.to_re "h")))) (re.++ (str.to_re "a") (str.to_re "r"))) (re.++ (str.to_re "A") (str.to_re "R"))) (re.++ (str.to_re "a") (str.to_re "y"))) (re.++ (str.to_re "A") (str.to_re "Y"))))) (re.++ (str.to_re "A") (re.union (re.union (re.++ (str.to_re "u") (re.++ (str.to_re "g") (re.++ (str.to_re "u") (re.++ (str.to_re "s") (str.to_re "t"))))) (re.++ (str.to_re "u") (str.to_re "g"))) (re.++ (str.to_re "U") (str.to_re "G"))))) (re.union (re.++ (str.to_re "O") (re.union (re.union (re.++ (str.to_re "c") (re.++ (str.to_re "t") (re.++ (str.to_re "o") (re.++ (str.to_re "b") (re.++ (str.to_re "e") (str.to_re "r")))))) (re.++ (str.to_re "c") (str.to_re "t"))) (re.++ (str.to_re "C") (str.to_re "T")))) (re.++ (str.to_re "D") (re.union (re.union (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (re.++ (str.to_re "m") (re.++ (str.to_re "b") (re.++ (str.to_re "e") (str.to_re "r"))))))) (re.++ (str.to_re "e") (str.to_re "c"))) (re.++ (str.to_re "E") (str.to_re "C")))))) (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.++ (re.range "1" "9") ((_ re.loop 3 3) (re.range "0" "9")))))))) (re.++ (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "12") (re.range "0" "9"))) (str.to_re "30")) (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.++ (re.union (re.union (re.union (re.++ (str.to_re "A") (re.union (re.union (re.++ (str.to_re "p") (re.++ (str.to_re "r") (re.++ (str.to_re "i") (str.to_re "l")))) (re.++ (str.to_re "p") (str.to_re "r"))) (re.++ (str.to_re "P") (str.to_re "R")))) (re.++ (str.to_re "J") (re.union (re.union (re.++ (str.to_re "u") (re.++ (str.to_re "n") (str.to_re "e"))) (re.++ (str.to_re "u") (str.to_re "n"))) (re.++ (str.to_re "U") (str.to_re "N"))))) (re.++ (str.to_re "S") (re.union (re.union (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re "t") (re.++ (str.to_re "e") (re.++ (str.to_re "m") (re.++ (str.to_re "b") (re.++ (str.to_re "e") (str.to_re "r")))))))) (re.++ (str.to_re "e") (str.to_re "p"))) (re.++ (str.to_re "E") (str.to_re "P"))))) (re.++ (str.to_re "N") (re.union (re.union (re.++ (str.to_re "o") (re.++ (str.to_re "v") (re.++ (str.to_re "e") (re.++ (str.to_re "m") (re.++ (str.to_re "b") (re.++ (str.to_re "e") (str.to_re "r"))))))) (re.++ (str.to_re "o") (str.to_re "v"))) (re.++ (str.to_re "O") (str.to_re "V"))))) (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.++ (re.range "1" "9") ((_ re.loop 3 3) (re.range "0" "9")))))))) (re.++ (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "9"))) (re.++ (str.to_re "2") (re.range "0" "8"))) (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.++ (str.to_re "F") (re.++ (re.union (re.union (re.++ (str.to_re "e") (re.++ (str.to_re "b") (re.++ (str.to_re "r") (re.++ (str.to_re "u") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (str.to_re "y"))))))) (re.++ (str.to_re "e") (str.to_re "b"))) (re.++ (str.to_re "E") (str.to_re "B"))) (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.++ (re.range "1" "9") ((_ re.loop 3 3) (re.range "0" "9"))))))))) (re.++ (re.++ (str.to_re "29") (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.++ (str.to_re "F") (re.++ (re.union (re.union (re.++ (str.to_re "e") (re.++ (str.to_re "b") (re.++ (str.to_re "r") (re.++ (str.to_re "u") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (str.to_re "y"))))))) (re.++ (str.to_re "e") (str.to_re "b"))) (re.++ (str.to_re "E") (str.to_re "B"))) (re.++ (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (re.union (str.to_re "-") (str.to_re "/")))) (re.union (re.++ (re.union (re.union (re.++ (str.to_re "0") (str.to_re "48")) (re.++ (str.to_re "2468") (str.to_re "048"))) (re.++ (str.to_re "13579") (str.to_re "26"))) (str.to_re "00")) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.union (re.union (re.++ (str.to_re "0") (str.to_re "48")) (re.++ (str.to_re "2468") (str.to_re "048"))) (re.++ (str.to_re "13579") (str.to_re "26")))))))))) (str.to_re "")))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)