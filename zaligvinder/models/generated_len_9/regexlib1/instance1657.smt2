;test regex ^(?:-([0-9]{1,2})|([0-9]{4}))?(?:-?(?:([0-9]{2})?(?:-?([0-9]{2}))?|W([0-9]{2})(?:-?([1-7]))?|([0-9]{3})))?(?:T([0-9]{2})(?::?([0-9]{2})(?::?([0-9]{2}))?)?(?:[,\.]([0-9]+))?(?:(Z)|([+-])([0-9]{2})(?::?([0-9]{2}))?)?)?$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.opt (re.union (re.++ (str.to_re "-") ((_ re.loop 1 2) (re.range "0" "9"))) ((_ re.loop 4 4) (re.range "0" "9")))) (re.++ (re.opt (re.++ (re.opt (str.to_re "-")) (re.union (re.union (re.++ (re.opt ((_ re.loop 2 2) (re.range "0" "9"))) (re.opt (re.++ (re.opt (str.to_re "-")) ((_ re.loop 2 2) (re.range "0" "9"))))) (re.++ (str.to_re "W") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (re.++ (re.opt (str.to_re "-")) (re.range "1" "7")))))) ((_ re.loop 3 3) (re.range "0" "9"))))) (re.opt (re.++ (str.to_re "T") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (re.opt (re.++ (re.opt (str.to_re ":")) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (re.++ (re.opt (str.to_re ":")) ((_ re.loop 2 2) (re.range "0" "9"))))))) (re.++ (re.opt (re.++ (re.union (str.to_re ",") (str.to_re ".")) (re.+ (re.range "0" "9")))) (re.opt (re.union (str.to_re "Z") (re.++ (re.union (str.to_re "+") (str.to_re "-")) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.opt (re.++ (re.opt (str.to_re ":")) ((_ re.loop 2 2) (re.range "0" "9")))))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)