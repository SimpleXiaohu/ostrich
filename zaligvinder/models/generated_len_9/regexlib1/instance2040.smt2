;test regex ^(00[1-9]|0[1-9][0-9]|[1-7][0-9][0-9]|7[0-7][0-2]|77[0-2])(\d{6})(A|B([1-9]?|[ADGHJKLNPQRTWY])|C([1-9]|[A-Z])|D([1-9]?|[ACDGHJKLMNPQRSTVWXYZ])|E([1-9]?|[ABCDFGHJKM])|F([1-8])|J([1-4])|K([1-9]|[ABCDEFGHJLM])|T([ABCDEFGHJKLMNPQRSTUVWXYZ2]?)|M|W([1-9]?|[BCFGJRT]))$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.union (re.union (re.union (re.union (re.++ (str.to_re "00") (re.range "1" "9")) (re.++ (str.to_re "0") (re.++ (re.range "1" "9") (re.range "0" "9")))) (re.++ (re.range "1" "7") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.++ (str.to_re "7") (re.++ (re.range "0" "7") (re.range "0" "2")))) (re.++ (str.to_re "77") (re.range "0" "2"))) (re.++ ((_ re.loop 6 6) (re.range "0" "9")) (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (str.to_re "A") (re.++ (str.to_re "B") (re.union (re.opt (re.range "1" "9")) (re.union (str.to_re "A") (re.union (str.to_re "D") (re.union (str.to_re "G") (re.union (str.to_re "H") (re.union (str.to_re "J") (re.union (str.to_re "K") (re.union (str.to_re "L") (re.union (str.to_re "N") (re.union (str.to_re "P") (re.union (str.to_re "Q") (re.union (str.to_re "R") (re.union (str.to_re "T") (re.union (str.to_re "W") (str.to_re "Y"))))))))))))))))) (re.++ (str.to_re "C") (re.union (re.range "1" "9") (re.range "A" "Z")))) (re.++ (str.to_re "D") (re.union (re.opt (re.range "1" "9")) (re.union (str.to_re "A") (re.union (str.to_re "C") (re.union (str.to_re "D") (re.union (str.to_re "G") (re.union (str.to_re "H") (re.union (str.to_re "J") (re.union (str.to_re "K") (re.union (str.to_re "L") (re.union (str.to_re "M") (re.union (str.to_re "N") (re.union (str.to_re "P") (re.union (str.to_re "Q") (re.union (str.to_re "R") (re.union (str.to_re "S") (re.union (str.to_re "T") (re.union (str.to_re "V") (re.union (str.to_re "W") (re.union (str.to_re "X") (re.union (str.to_re "Y") (str.to_re "Z"))))))))))))))))))))))) (re.++ (str.to_re "E") (re.union (re.opt (re.range "1" "9")) (re.union (str.to_re "A") (re.union (str.to_re "B") (re.union (str.to_re "C") (re.union (str.to_re "D") (re.union (str.to_re "F") (re.union (str.to_re "G") (re.union (str.to_re "H") (re.union (str.to_re "J") (re.union (str.to_re "K") (str.to_re "M"))))))))))))) (re.++ (str.to_re "F") (re.range "1" "8"))) (re.++ (str.to_re "J") (re.range "1" "4"))) (re.++ (str.to_re "K") (re.union (re.range "1" "9") (re.union (str.to_re "A") (re.union (str.to_re "B") (re.union (str.to_re "C") (re.union (str.to_re "D") (re.union (str.to_re "E") (re.union (str.to_re "F") (re.union (str.to_re "G") (re.union (str.to_re "H") (re.union (str.to_re "J") (re.union (str.to_re "L") (str.to_re "M")))))))))))))) (re.++ (str.to_re "T") (re.opt (re.union (str.to_re "A") (re.union (str.to_re "B") (re.union (str.to_re "C") (re.union (str.to_re "D") (re.union (str.to_re "E") (re.union (str.to_re "F") (re.union (str.to_re "G") (re.union (str.to_re "H") (re.union (str.to_re "J") (re.union (str.to_re "K") (re.union (str.to_re "L") (re.union (str.to_re "M") (re.union (str.to_re "N") (re.union (str.to_re "P") (re.union (str.to_re "Q") (re.union (str.to_re "R") (re.union (str.to_re "S") (re.union (str.to_re "T") (re.union (str.to_re "U") (re.union (str.to_re "V") (re.union (str.to_re "W") (re.union (str.to_re "X") (re.union (str.to_re "Y") (re.union (str.to_re "Z") (str.to_re "2")))))))))))))))))))))))))))) (str.to_re "M")) (re.++ (str.to_re "W") (re.union (re.opt (re.range "1" "9")) (re.union (str.to_re "B") (re.union (str.to_re "C") (re.union (str.to_re "F") (re.union (str.to_re "G") (re.union (str.to_re "J") (re.union (str.to_re "R") (str.to_re "T"))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)