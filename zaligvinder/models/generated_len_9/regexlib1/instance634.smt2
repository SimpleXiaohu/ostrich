;test regex ^(((\(\d{3}\)|\d{3})( |-|\.))|(\(\d{3}\)|\d{3}))?\d{3}( |-|\.)?\d{4}(( |-|\.)?([Ee]xt|[Xx])[.]?( |-|\.)?\d{4})?$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.opt (re.union (re.++ (re.union (re.++ (str.to_re "(") (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (str.to_re ")"))) ((_ re.loop 3 3) (re.range "0" "9"))) (re.union (re.union (str.to_re " ") (str.to_re "-")) (str.to_re "."))) (re.union (re.++ (str.to_re "(") (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (str.to_re ")"))) ((_ re.loop 3 3) (re.range "0" "9"))))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ (re.opt (re.union (re.union (str.to_re " ") (str.to_re "-")) (str.to_re "."))) (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.opt (re.++ (re.opt (re.union (re.union (str.to_re " ") (str.to_re "-")) (str.to_re "."))) (re.++ (re.union (re.++ (re.union (str.to_re "E") (str.to_re "e")) (re.++ (str.to_re "x") (str.to_re "t"))) (re.union (str.to_re "X") (str.to_re "x"))) (re.++ (re.opt (str.to_re ".")) (re.++ (re.opt (re.union (re.union (str.to_re " ") (str.to_re "-")) (str.to_re "."))) ((_ re.loop 4 4) (re.range "0" "9")))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)