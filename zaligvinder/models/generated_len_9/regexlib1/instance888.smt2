;test regex ^((0[1-9]|1[0-9]|2[0-4])[0-59]\\d{7}(00[1-9]|[0-9][1-9][0-9]|[1-9][0-9][0-9]))|((0[1-9]|1[0-9]|2[0-4])6\\d{6}(000[1-9]|[0-9][0-9][1-9][0-9]|[0-9][1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]))$
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (str.to_re "") (re.++ (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "9"))) (re.++ (str.to_re "2") (re.range "0" "4"))) (re.++ (re.range "0" "59") (re.++ (str.to_re "\\") (re.++ ((_ re.loop 7 7) (str.to_re "d")) (re.union (re.union (re.++ (str.to_re "00") (re.range "1" "9")) (re.++ (re.range "0" "9") (re.++ (re.range "1" "9") (re.range "0" "9")))) (re.++ (re.range "1" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))))))) (re.++ (re.++ (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "9"))) (re.++ (str.to_re "2") (re.range "0" "4"))) (re.++ (str.to_re "6") (re.++ (str.to_re "\\") (re.++ ((_ re.loop 6 6) (str.to_re "d")) (re.union (re.union (re.union (re.++ (str.to_re "000") (re.range "1" "9")) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "1" "9") (re.range "0" "9"))))) (re.++ (re.range "0" "9") (re.++ (re.range "1" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))) (re.++ (re.range "1" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))))))))) (str.to_re "")))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)