;test regex (^|\s)(00[1-9]|0[1-9]0|0[1-9][1-9]|[1-6]\d{2}|7[0-6]\d|77[0-2])(-?|[\. ])([1-9]0|0[1-9]|[1-9][1-9])\3(\d{3}[1-9]|[1-9]\d{3}|\d[1-9]\d{2}|\d{2}[1-9]\d)($|\s|[;:,!\.\?])
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (str.to_re "") (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "00") (re.range "1" "9")) (re.++ (str.to_re "0") (re.++ (re.range "1" "9") (str.to_re "0")))) (re.++ (str.to_re "0") (re.++ (re.range "1" "9") (re.range "1" "9")))) (re.++ (re.range "1" "6") ((_ re.loop 2 2) (re.range "0" "9")))) (re.++ (str.to_re "7") (re.++ (re.range "0" "6") (re.range "0" "9")))) (re.++ (str.to_re "77") (re.range "0" "2"))) (re.++ (re.union (re.opt (str.to_re "-")) (re.union (str.to_re ".") (str.to_re " "))) (re.++ (re.union (re.union (re.++ (re.range "1" "9") (str.to_re "0")) (re.++ (str.to_re "0") (re.range "1" "9"))) (re.++ (re.range "1" "9") (re.range "1" "9"))) (re.++ (_ re.reference 3) (re.++ (re.union (re.union (re.union (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.range "1" "9")) (re.++ (re.range "1" "9") ((_ re.loop 3 3) (re.range "0" "9")))) (re.++ (re.range "0" "9") (re.++ (re.range "1" "9") ((_ re.loop 2 2) (re.range "0" "9"))))) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (re.range "1" "9") (re.range "0" "9")))) (re.union (re.union (str.to_re "") (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.union (str.to_re ";") (re.union (str.to_re ":") (re.union (str.to_re ",") (re.union (str.to_re "!") (re.union (str.to_re ".") (str.to_re "?")))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)