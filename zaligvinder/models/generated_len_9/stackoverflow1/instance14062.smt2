;test regex ((http|https)\:\/\/)?(([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3})\/?)|((http|https)\:\/\/)?(([a-z0-9-]+\.)([a-z0-9-]+\.)?([a-z]+)\/?)
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (re.opt (re.++ (re.union (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (str.to_re "p")))) (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "p") (str.to_re "s")))))) (re.++ (str.to_re ":") (re.++ (str.to_re "/") (str.to_re "/"))))) (re.++ (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (str.to_re ".")) (re.++ (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (str.to_re ".")) (re.++ (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (str.to_re ".")) (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (re.opt (str.to_re "/"))))))) (re.++ (re.opt (re.++ (re.union (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (str.to_re "p")))) (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "p") (str.to_re "s")))))) (re.++ (str.to_re ":") (re.++ (str.to_re "/") (str.to_re "/"))))) (re.++ (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "0" "9") (str.to_re "-")))) (str.to_re ".")) (re.++ (re.opt (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "0" "9") (str.to_re "-")))) (str.to_re "."))) (re.++ (re.+ (re.range "a" "z")) (re.opt (str.to_re "/")))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)