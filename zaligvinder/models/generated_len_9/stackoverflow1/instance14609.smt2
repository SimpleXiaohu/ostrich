;test regex Regex.Replace("asdf=123", "(.*?=)\d{3}","$1bbbcccddd")
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "R") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "R") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (re.++ (re.++ (re.++ (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "a") (re.++ (str.to_re "s") (re.++ (str.to_re "d") (re.++ (str.to_re "f") (re.++ (str.to_re "=") (re.++ (str.to_re "123") (str.to_re "\u{22}")))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (re.++ (re.*? (re.diff re.allchar (str.to_re "\n"))) (str.to_re "=")) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (str.to_re "\u{22}"))))))) (re.++ (str.to_re ",") (str.to_re "\u{22}"))) (re.++ (str.to_re "") (re.++ (str.to_re "1") (re.++ (str.to_re "b") (re.++ (str.to_re "b") (re.++ (str.to_re "b") (re.++ (str.to_re "c") (re.++ (str.to_re "c") (re.++ (str.to_re "c") (re.++ (str.to_re "d") (re.++ (str.to_re "d") (re.++ (str.to_re "d") (str.to_re "\u{22}"))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)