;test regex SELECT INITCAP(RTRIM(REGEXP_replace(name, '(^.+) [0-9\\.]{1,}%.*', '\\1'))) AS name,
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "S") (re.++ (str.to_re "E") (re.++ (str.to_re "L") (re.++ (str.to_re "E") (re.++ (str.to_re "C") (re.++ (str.to_re "T") (re.++ (str.to_re " ") (re.++ (str.to_re "I") (re.++ (str.to_re "N") (re.++ (str.to_re "I") (re.++ (str.to_re "T") (re.++ (str.to_re "C") (re.++ (str.to_re "A") (re.++ (str.to_re "P") (re.++ (re.++ (str.to_re "R") (re.++ (str.to_re "T") (re.++ (str.to_re "R") (re.++ (str.to_re "I") (re.++ (str.to_re "M") (re.++ (str.to_re "R") (re.++ (str.to_re "E") (re.++ (str.to_re "G") (re.++ (str.to_re "E") (re.++ (str.to_re "X") (re.++ (str.to_re "P") (re.++ (str.to_re "_") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (re.++ (re.++ (re.++ (str.to_re "n") (re.++ (str.to_re "a") (re.++ (str.to_re "m") (str.to_re "e")))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (re.++ (str.to_re "") (re.+ (re.diff re.allchar (str.to_re "\n")))) (re.++ (str.to_re " ") (re.++ (re.++ (re.* (re.union (re.range "0" "9") (re.union (str.to_re "\\") (str.to_re ".")))) ((_ re.loop 1 1) (re.union (re.range "0" "9") (re.union (str.to_re "\\") (str.to_re "."))))) (re.++ (str.to_re "%") (re.++ (re.* (re.diff re.allchar (str.to_re "\n"))) (str.to_re "\u{27}")))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "\\") (re.++ (str.to_re "1") (str.to_re "\u{27}")))))))))))))))))))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "A") (re.++ (str.to_re "S") (re.++ (str.to_re " ") (re.++ (str.to_re "n") (re.++ (str.to_re "a") (re.++ (str.to_re "m") (str.to_re "e"))))))))))))))))))))))) (str.to_re ","))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)