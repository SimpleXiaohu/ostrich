;test regex (?:0|[1-9]\d*+),[1-9]\d*+(?:<b><i>;</i></b>(?:0|[1-9]\d*+)<b><i>,</i></b>[1-9]\d*+)<b><i>{3}</i></b>
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (str.to_re "0") (re.++ (re.range "1" "9") (re.+ (re.* (re.range "0" "9"))))) (re.++ (str.to_re ",") (re.++ (re.range "1" "9") (re.++ (re.+ (re.* (re.range "0" "9"))) (re.++ (re.++ (re.++ (str.to_re "<") (re.++ (str.to_re "b") (re.++ (str.to_re ">") (re.++ (str.to_re "<") (re.++ (str.to_re "i") (re.++ (str.to_re ">") (re.++ (str.to_re ";") (re.++ (str.to_re "<") (re.++ (str.to_re "/") (re.++ (str.to_re "i") (re.++ (str.to_re ">") (re.++ (str.to_re "<") (re.++ (str.to_re "/") (re.++ (str.to_re "b") (re.++ (str.to_re ">") (re.++ (re.union (str.to_re "0") (re.++ (re.range "1" "9") (re.+ (re.* (re.range "0" "9"))))) (re.++ (str.to_re "<") (re.++ (str.to_re "b") (re.++ (str.to_re ">") (re.++ (str.to_re "<") (re.++ (str.to_re "i") (str.to_re ">")))))))))))))))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "<") (re.++ (str.to_re "/") (re.++ (str.to_re "i") (re.++ (str.to_re ">") (re.++ (str.to_re "<") (re.++ (str.to_re "/") (re.++ (str.to_re "b") (re.++ (str.to_re ">") (re.++ (re.range "1" "9") (re.+ (re.* (re.range "0" "9")))))))))))))) (re.++ (str.to_re "<") (re.++ (str.to_re "b") (re.++ (str.to_re ">") (re.++ (str.to_re "<") (re.++ (str.to_re "i") (re.++ ((_ re.loop 3 3) (str.to_re ">")) (re.++ (str.to_re "<") (re.++ (str.to_re "/") (re.++ (str.to_re "i") (re.++ (str.to_re ">") (re.++ (str.to_re "<") (re.++ (str.to_re "/") (re.++ (str.to_re "b") (str.to_re ">")))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)