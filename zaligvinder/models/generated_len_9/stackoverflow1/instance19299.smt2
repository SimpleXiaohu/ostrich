;test regex ^(((0[13-9]|1[012])[-/]?(0[1-9]|[12][0-9]|30)|(0[13578]|1[02])[-/]?31|02[-/]?(0[1-9]|1[0-9]|2[0-8]))[-/]?[0-9]{4}|02[-/]?29[-/]?([0-9]{2}(([2468][048]|[02468][48])|[13579][26])|([13579][26]|[02468][048]|0[0-9]|1[0-6])00))$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.union (re.++ (re.union (re.union (re.++ (re.union (re.++ (str.to_re "0") (re.range "13" "9")) (re.++ (str.to_re "1") (str.to_re "012"))) (re.++ (re.opt (re.union (str.to_re "-") (str.to_re "/"))) (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "12") (re.range "0" "9"))) (str.to_re "30")))) (re.++ (re.union (re.++ (str.to_re "0") (str.to_re "13578")) (re.++ (str.to_re "1") (str.to_re "02"))) (re.++ (re.opt (re.union (str.to_re "-") (str.to_re "/"))) (str.to_re "31")))) (re.++ (str.to_re "02") (re.++ (re.opt (re.union (str.to_re "-") (str.to_re "/"))) (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "9"))) (re.++ (str.to_re "2") (re.range "0" "8")))))) (re.++ (re.opt (re.union (str.to_re "-") (str.to_re "/"))) ((_ re.loop 4 4) (re.range "0" "9")))) (re.++ (str.to_re "02") (re.++ (re.opt (re.union (str.to_re "-") (str.to_re "/"))) (re.++ (str.to_re "29") (re.++ (re.opt (re.union (str.to_re "-") (str.to_re "/"))) (re.union (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.union (re.union (re.++ (str.to_re "2468") (str.to_re "048")) (re.++ (str.to_re "02468") (str.to_re "48"))) (re.++ (str.to_re "13579") (str.to_re "26")))) (re.++ (re.union (re.union (re.union (re.++ (str.to_re "13579") (str.to_re "26")) (re.++ (str.to_re "02468") (str.to_re "048"))) (re.++ (str.to_re "0") (re.range "0" "9"))) (re.++ (str.to_re "1") (re.range "0" "6"))) (str.to_re "00"))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)