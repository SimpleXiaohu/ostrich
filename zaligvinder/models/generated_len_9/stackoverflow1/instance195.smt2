;test regex ^(?:0|(?:\+|00) ?31 ?)(?:(?:[1-9] ?(?:[0-9] ?){8})|(?:6 ?-? ?[1-9] ?(?:[0-9] ?){7})|(?:[1,2,3,4,5,7,8,9]\d ?-? ?[1-9] ?(?:[0-9] ?){6})|(?:[1,2,3,4,5,7,8,9]\d{2} ?-? ?[1-9] ?(?:[0-9] ?){5}))$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.union (str.to_re "0") (re.++ (re.union (str.to_re "+") (str.to_re "00")) (re.++ (re.opt (str.to_re " ")) (re.++ (str.to_re "31") (re.opt (str.to_re " ")))))) (re.union (re.union (re.union (re.++ (re.range "1" "9") (re.++ (re.opt (str.to_re " ")) ((_ re.loop 8 8) (re.++ (re.range "0" "9") (re.opt (str.to_re " ")))))) (re.++ (str.to_re "6") (re.++ (re.opt (str.to_re " ")) (re.++ (re.opt (str.to_re "-")) (re.++ (re.opt (str.to_re " ")) (re.++ (re.range "1" "9") (re.++ (re.opt (str.to_re " ")) ((_ re.loop 7 7) (re.++ (re.range "0" "9") (re.opt (str.to_re " "))))))))))) (re.++ (re.union (str.to_re "1") (re.union (str.to_re ",") (re.union (str.to_re "2") (re.union (str.to_re ",") (re.union (str.to_re "3") (re.union (str.to_re ",") (re.union (str.to_re "4") (re.union (str.to_re ",") (re.union (str.to_re "5") (re.union (str.to_re ",") (re.union (str.to_re "7") (re.union (str.to_re ",") (re.union (str.to_re "8") (re.union (str.to_re ",") (str.to_re "9"))))))))))))))) (re.++ (re.range "0" "9") (re.++ (re.opt (str.to_re " ")) (re.++ (re.opt (str.to_re "-")) (re.++ (re.opt (str.to_re " ")) (re.++ (re.range "1" "9") (re.++ (re.opt (str.to_re " ")) ((_ re.loop 6 6) (re.++ (re.range "0" "9") (re.opt (str.to_re " ")))))))))))) (re.++ (re.union (str.to_re "1") (re.union (str.to_re ",") (re.union (str.to_re "2") (re.union (str.to_re ",") (re.union (str.to_re "3") (re.union (str.to_re ",") (re.union (str.to_re "4") (re.union (str.to_re ",") (re.union (str.to_re "5") (re.union (str.to_re ",") (re.union (str.to_re "7") (re.union (str.to_re ",") (re.union (str.to_re "8") (re.union (str.to_re ",") (str.to_re "9"))))))))))))))) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (re.opt (str.to_re " ")) (re.++ (re.opt (str.to_re "-")) (re.++ (re.opt (str.to_re " ")) (re.++ (re.range "1" "9") (re.++ (re.opt (str.to_re " ")) ((_ re.loop 5 5) (re.++ (re.range "0" "9") (re.opt (str.to_re " ")))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)