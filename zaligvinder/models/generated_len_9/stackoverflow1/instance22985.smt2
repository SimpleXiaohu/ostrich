;test regex ^\[Date\]\.\[Hierarchy\]\.\[Year\]\.&\[\d{4}\]\.&\[Q1\]\.&\[[A-Z-a-z]{3}\]$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (str.to_re "[") (re.++ (str.to_re "D") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "e") (re.++ (str.to_re "]") (re.++ (str.to_re ".") (re.++ (str.to_re "[") (re.++ (str.to_re "H") (re.++ (str.to_re "i") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "y") (re.++ (str.to_re "]") (re.++ (str.to_re ".") (re.++ (str.to_re "[") (re.++ (str.to_re "Y") (re.++ (str.to_re "e") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ (str.to_re "]") (re.++ (str.to_re ".") (re.++ (str.to_re "&") (re.++ (str.to_re "[") (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (str.to_re "]") (re.++ (str.to_re ".") (re.++ (str.to_re "&") (re.++ (str.to_re "[") (re.++ (str.to_re "Q") (re.++ (str.to_re "1") (re.++ (str.to_re "]") (re.++ (str.to_re ".") (re.++ (str.to_re "&") (re.++ (str.to_re "[") (re.++ ((_ re.loop 3 3) (re.union (re.range "A" "Z") (re.union (str.to_re "-") (re.range "a" "z")))) (str.to_re "]")))))))))))))))))))))))))))))))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)