;test regex echo "21/1/2016" | sed -E 's|/([1-9])/|/0\1/|; s|^([1-9]/)|0\1|; s|([0-9]{2})/([0-9]{1,2})/([0-9]{4})|\3-\2-\1T00:00:00.008Z|'
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "21") (re.++ (str.to_re "/") (re.++ (str.to_re "1") (re.++ (str.to_re "/") (re.++ (str.to_re "2016") (re.++ (str.to_re "\u{22}") (str.to_re " "))))))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "s") (re.++ (str.to_re "e") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "E") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (str.to_re "s"))))))))))) (re.++ (str.to_re "/") (re.++ (re.range "1" "9") (str.to_re "/")))) (re.++ (str.to_re "/") (re.++ (str.to_re "0") (re.++ (_ re.reference 1) (str.to_re "/"))))) (re.++ (str.to_re ";") (re.++ (str.to_re " ") (str.to_re "s")))) (re.++ (str.to_re "") (re.++ (re.range "1" "9") (str.to_re "/")))) (re.++ (str.to_re "0") (_ re.reference 1))) (re.++ (str.to_re ";") (re.++ (str.to_re " ") (str.to_re "s")))) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re "/") (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.++ (str.to_re "/") ((_ re.loop 4 4) (re.range "0" "9"))))))) (re.++ (_ re.reference 3) (re.++ (str.to_re "-") (re.++ (_ re.reference 2) (re.++ (str.to_re "-") (re.++ (_ re.reference 1) (re.++ (str.to_re "T") (re.++ (str.to_re "00") (re.++ (str.to_re ":") (re.++ (str.to_re "00") (re.++ (str.to_re ":") (re.++ (str.to_re "00") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "008") (str.to_re "Z"))))))))))))))) (str.to_re "\u{27}"))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)