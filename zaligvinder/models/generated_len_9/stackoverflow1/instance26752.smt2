;test regex "(?:(?:[a-zA-Z0-9][a-zA-Z0-9-]*+\\.)++([a-zA-Z]{2,}+)\\s*+,\\s*+\\d++\\s*+,\\s*+\\d++(\r?+\n)?+)++"
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "\u{22}") (re.++ (re.+ (re.+ (re.++ (re.++ (re.++ (re.+ (re.+ (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.++ (re.+ (re.* (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "-")))))) (re.++ (str.to_re "\\") (re.diff re.allchar (str.to_re "\n"))))))) (re.++ (re.+ (re.++ (re.* (re.union (re.range "a" "z") (re.range "A" "Z"))) ((_ re.loop 2 2) (re.union (re.range "a" "z") (re.range "A" "Z"))))) (re.++ (str.to_re "\\") (re.+ (re.* (str.to_re "s")))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\\") (re.++ (re.+ (re.* (str.to_re "s"))) (re.++ (str.to_re "\\") (re.++ (re.+ (re.+ (str.to_re "d"))) (re.++ (str.to_re "\\") (re.+ (re.* (str.to_re "s")))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re "\\") (re.++ (re.+ (re.* (str.to_re "s"))) (re.++ (str.to_re "\\") (re.++ (re.+ (re.+ (str.to_re "d"))) (re.+ (re.opt (re.++ (re.+ (re.opt (str.to_re "\u{0d}"))) (str.to_re "\u{0a}")))))))))))) (str.to_re "\u{22}")))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)