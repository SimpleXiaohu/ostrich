;test regex sudo tcpdump -A -nn -s 0 'tcp dst port 9200 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)' -i lo | grep -v "[0-9]{2}[:][0-9]{2}[:][0-9]{2}\.[0-9]*[ ][I][P][ ][0-9]{1,3}\.[0    -9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]*[ ][\>].*"
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (str.to_re "s") (re.++ (str.to_re "u") (re.++ (str.to_re "d") (re.++ (str.to_re "o") (re.++ (str.to_re " ") (re.++ (str.to_re "t") (re.++ (str.to_re "c") (re.++ (str.to_re "p") (re.++ (str.to_re "d") (re.++ (str.to_re "u") (re.++ (str.to_re "m") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "A") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "n") (re.++ (str.to_re "n") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "s") (re.++ (str.to_re " ") (re.++ (str.to_re "0") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "t") (re.++ (str.to_re "c") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "d") (re.++ (str.to_re "s") (re.++ (str.to_re "t") (re.++ (str.to_re " ") (re.++ (str.to_re "p") (re.++ (str.to_re "o") (re.++ (str.to_re "r") (re.++ (str.to_re "t") (re.++ (str.to_re " ") (re.++ (str.to_re "9200") (re.++ (str.to_re " ") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (re.++ (re.++ (re.++ (re.++ (str.to_re "i") (re.++ (str.to_re "p") (re.++ (re.union (str.to_re "2") (re.union (str.to_re ":") (str.to_re "2"))) (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re " ") (re.++ (re.++ (str.to_re "i") (re.++ (str.to_re "p") (re.++ (str.to_re "0") (re.++ (str.to_re "&") (re.++ (str.to_re "0") (re.++ (str.to_re "x") (str.to_re "f"))))))) (re.++ (str.to_re "<") (re.++ (str.to_re "<") (str.to_re "2")))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re " ") (re.++ (re.++ (str.to_re "t") (re.++ (str.to_re "c") (re.++ (str.to_re "p") (re.++ (str.to_re "12") (re.++ (str.to_re "&") (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ (str.to_re "f") (str.to_re "0"))))))))) (re.++ (str.to_re ">") (re.++ (str.to_re ">") (str.to_re "2")))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "!") (re.++ (str.to_re "=") (re.++ (str.to_re " ") (str.to_re "0")))))) (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "i") (re.++ (str.to_re " ") (re.++ (str.to_re "l") (re.++ (str.to_re "o") (str.to_re " ")))))))))))))))))))))))))))))))))))))))))))))))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "v") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re ":") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re ":") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re ".") (re.++ (re.* (re.range "0" "9")) (re.++ (str.to_re " ") (re.++ (str.to_re "I") (re.++ (str.to_re "P") (re.++ (str.to_re " ") (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (re.++ (str.to_re ".") (re.++ ((_ re.loop 1 3) (re.union (str.to_re "0") (re.union (str.to_re " ") (re.union (str.to_re " ") (re.union (str.to_re " ") (re.range " " "9")))))) (re.++ (str.to_re ".") (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (re.++ (str.to_re ".") (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (re.++ (str.to_re ".") (re.++ (re.* (re.range "0" "9")) (re.++ (str.to_re " ") (re.++ (str.to_re ">") (re.++ (re.* (re.diff re.allchar (str.to_re "\n"))) (str.to_re "\u{22}")))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)