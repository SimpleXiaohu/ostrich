;test regex (Armadale|Fremantle|Butler|Mandurah|Midland|Thornlie)[^\d\n]+2[0-9]{4}[^\d\n]+$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "A") (re.++ (str.to_re "r") (re.++ (str.to_re "m") (re.++ (str.to_re "a") (re.++ (str.to_re "d") (re.++ (str.to_re "a") (re.++ (str.to_re "l") (str.to_re "e")))))))) (re.++ (str.to_re "F") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "m") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "t") (re.++ (str.to_re "l") (str.to_re "e")))))))))) (re.++ (str.to_re "B") (re.++ (str.to_re "u") (re.++ (str.to_re "t") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (str.to_re "r"))))))) (re.++ (str.to_re "M") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "d") (re.++ (str.to_re "u") (re.++ (str.to_re "r") (re.++ (str.to_re "a") (str.to_re "h"))))))))) (re.++ (str.to_re "M") (re.++ (str.to_re "i") (re.++ (str.to_re "d") (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (str.to_re "d")))))))) (re.++ (str.to_re "T") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re "r") (re.++ (str.to_re "n") (re.++ (str.to_re "l") (re.++ (str.to_re "i") (str.to_re "e"))))))))) (re.++ (re.+ (re.inter (re.diff re.allchar (re.range "0" "9")) (re.diff re.allchar (str.to_re "\u{0a}")))) (re.++ (str.to_re "2") (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.+ (re.inter (re.diff re.allchar (re.range "0" "9")) (re.diff re.allchar (str.to_re "\u{0a}")))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)