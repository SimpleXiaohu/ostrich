;test regex SELECT unnest(regexp_matches('4-0001-1234 4.0001.12344  4-0-0-0-1-1234', '4(?:[\s/.-]*0){3}(?:[\s/.-]*[12])(?:[\s/.-]*\d){4}', 'g'));
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "S") (re.++ (str.to_re "E") (re.++ (str.to_re "L") (re.++ (str.to_re "E") (re.++ (str.to_re "C") (re.++ (str.to_re "T") (re.++ (str.to_re " ") (re.++ (str.to_re "u") (re.++ (str.to_re "n") (re.++ (str.to_re "n") (re.++ (str.to_re "e") (re.++ (str.to_re "s") (re.++ (str.to_re "t") (re.++ (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (re.++ (str.to_re "p") (re.++ (str.to_re "_") (re.++ (str.to_re "m") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "e") (re.++ (str.to_re "s") (re.++ (re.++ (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "4") (re.++ (str.to_re "-") (re.++ (str.to_re "0001") (re.++ (str.to_re "-") (re.++ (str.to_re "1234") (re.++ (str.to_re " ") (re.++ (str.to_re "4") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "0001") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "12344") (re.++ (str.to_re " ") (re.++ (str.to_re " ") (re.++ (str.to_re "4") (re.++ (str.to_re "-") (re.++ (str.to_re "0") (re.++ (str.to_re "-") (re.++ (str.to_re "0") (re.++ (str.to_re "-") (re.++ (str.to_re "0") (re.++ (str.to_re "-") (re.++ (str.to_re "1") (re.++ (str.to_re "-") (re.++ (str.to_re "1234") (str.to_re "\u{27}")))))))))))))))))))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "4") (re.++ ((_ re.loop 3 3) (re.++ (re.* (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re "/") (re.union (str.to_re ".") (str.to_re "-"))))) (str.to_re "0"))) (re.++ (re.++ (re.* (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re "/") (re.union (str.to_re ".") (str.to_re "-"))))) (str.to_re "12")) (re.++ ((_ re.loop 4 4) (re.++ (re.* (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re "/") (re.union (str.to_re ".") (str.to_re "-"))))) (re.range "0" "9"))) (str.to_re "\u{27}"))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "g") (str.to_re "\u{27}")))))))))))))))))))) (str.to_re ";")))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)