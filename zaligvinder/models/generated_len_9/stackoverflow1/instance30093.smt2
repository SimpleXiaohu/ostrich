;test regex echo "0x4e46436b|0x6669746f|0x74616369|0x416e6f69|0x624f796e|0x7463656a"|perl -pe 's/0x([\da-f]{2}){4}/0x\4\3\2\1/g'
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ (str.to_re "4") (re.++ (str.to_re "e") (re.++ (str.to_re "46436") (str.to_re "b")))))))))))) (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ (str.to_re "6669746") (str.to_re "f"))))) (re.++ (str.to_re "0") (re.++ (str.to_re "x") (str.to_re "74616369")))) (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ (str.to_re "416") (re.++ (str.to_re "e") (re.++ (str.to_re "6") (re.++ (str.to_re "f") (str.to_re "69")))))))) (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ (str.to_re "624") (re.++ (str.to_re "f") (re.++ (str.to_re "796") (str.to_re "e"))))))) (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ (str.to_re "7463656") (re.++ (str.to_re "a") (str.to_re "\u{22}")))))) (re.++ (str.to_re "p") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "l") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "p") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ ((_ re.loop 4 4) ((_ re.loop 2 2) (re.union (re.range "0" "9") (re.range "a" "f")))) (re.++ (str.to_re "/") (re.++ (str.to_re "0") (re.++ (str.to_re "x") (re.++ (_ re.reference 4) (re.++ (_ re.reference 3) (re.++ (_ re.reference 2) (re.++ (_ re.reference 1) (re.++ (str.to_re "/") (re.++ (str.to_re "g") (str.to_re "\u{27}"))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)