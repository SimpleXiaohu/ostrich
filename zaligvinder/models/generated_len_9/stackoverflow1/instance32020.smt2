;test regex sed -r 's/^(.{4})(.{2})(.{2}) (.{2})(.{2})(.{2})000/\1-\2-\3 \4:\5:\6/;s/,0$//' input.csv
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (re.++ (str.to_re "s") (re.++ (str.to_re "e") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "r") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "s") (str.to_re "/")))))))))) (re.++ (str.to_re "") (re.++ ((_ re.loop 4 4) (re.diff re.allchar (str.to_re "\n"))) (re.++ ((_ re.loop 2 2) (re.diff re.allchar (str.to_re "\n"))) (re.++ ((_ re.loop 2 2) (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re " ") (re.++ ((_ re.loop 2 2) (re.diff re.allchar (str.to_re "\n"))) (re.++ ((_ re.loop 2 2) (re.diff re.allchar (str.to_re "\n"))) (re.++ ((_ re.loop 2 2) (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re "000") (re.++ (str.to_re "/") (re.++ (_ re.reference 1) (re.++ (str.to_re "-") (re.++ (_ re.reference 2) (re.++ (str.to_re "-") (re.++ (_ re.reference 3) (re.++ (str.to_re " ") (re.++ (_ re.reference 4) (re.++ (str.to_re ":") (re.++ (_ re.reference 5) (re.++ (str.to_re ":") (re.++ (_ re.reference 6) (re.++ (str.to_re "/") (re.++ (str.to_re ";") (re.++ (str.to_re "s") (str.to_re "/")))))))))))))))))))))))))) (re.++ (str.to_re ",") (str.to_re "0"))) (re.++ (str.to_re "") (re.++ (str.to_re "/") (re.++ (str.to_re "/") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (re.++ (str.to_re "p") (re.++ (str.to_re "u") (re.++ (str.to_re "t") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "c") (re.++ (str.to_re "s") (str.to_re "v")))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)