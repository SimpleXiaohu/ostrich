;test regex select substring(substring(substring('P:\pgdfecol\71698384737978\ASOCIADOS\8010625\8010625_02_04_20110111.ZIP' from '([^\\]*(\.ZIP|zip))') from '([^_]*_){2}') from '[0-9]{2}')
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "s") (re.++ (str.to_re "e") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "t") (re.++ (str.to_re " ") (re.++ (str.to_re "s") (re.++ (str.to_re "u") (re.++ (str.to_re "b") (re.++ (str.to_re "s") (re.++ (str.to_re "t") (re.++ (str.to_re "r") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (re.++ (str.to_re "g") (re.++ (str.to_re "s") (re.++ (str.to_re "u") (re.++ (str.to_re "b") (re.++ (str.to_re "s") (re.++ (str.to_re "t") (re.++ (str.to_re "r") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (re.++ (str.to_re "g") (re.++ (re.++ (str.to_re "s") (re.++ (str.to_re "u") (re.++ (str.to_re "b") (re.++ (str.to_re "s") (re.++ (str.to_re "t") (re.++ (str.to_re "r") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (re.++ (str.to_re "g") (re.++ (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "P") (re.++ (str.to_re ":") (re.++ (str.to_re "p") (re.++ (str.to_re "g") (re.++ (str.to_re "d") (re.++ (str.to_re "f") (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "o") (re.++ (str.to_re "l") (re.++ (_ re.reference 71698384737978) (re.++ (str.to_re "A") (re.++ (str.to_re "S") (re.++ (str.to_re "O") (re.++ (str.to_re "C") (re.++ (str.to_re "I") (re.++ (str.to_re "A") (re.++ (str.to_re "D") (re.++ (str.to_re "O") (re.++ (str.to_re "S") (re.++ (_ re.reference 8010625) (re.++ (_ re.reference 8010625) (re.++ (str.to_re "_") (re.++ (str.to_re "02") (re.++ (str.to_re "_") (re.++ (str.to_re "04") (re.++ (str.to_re "_") (re.++ (str.to_re "20110111") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "Z") (re.++ (str.to_re "I") (re.++ (str.to_re "P") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "f") (re.++ (str.to_re "r") (re.++ (str.to_re "o") (re.++ (str.to_re "m") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (re.++ (re.* (re.diff re.allchar (str.to_re "\\"))) (re.union (re.++ (str.to_re ".") (re.++ (str.to_re "Z") (re.++ (str.to_re "I") (str.to_re "P")))) (re.++ (str.to_re "z") (re.++ (str.to_re "i") (str.to_re "p"))))) (str.to_re "\u{27}"))))))))))))))))))))))))))))))))))))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "f") (re.++ (str.to_re "r") (re.++ (str.to_re "o") (re.++ (str.to_re "m") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ ((_ re.loop 2 2) (re.++ (re.* (re.diff re.allchar (str.to_re "_"))) (str.to_re "_"))) (str.to_re "\u{27}"))))))))))))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "f") (re.++ (str.to_re "r") (re.++ (str.to_re "o") (re.++ (str.to_re "m") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (str.to_re "\u{27}")))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)