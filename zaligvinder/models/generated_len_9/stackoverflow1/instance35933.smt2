;test regex (SUNDAY|MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY)\R(\d{4})-([0-9]|0[1-9]|[1-2][0-9])-([0-9]|0[1-9]|[1-2][0-9]|3[0-1])\R(.*?)\R(.*?)\R\R
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "S") (re.++ (str.to_re "U") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ (str.to_re "A") (str.to_re "Y")))))) (re.++ (str.to_re "M") (re.++ (str.to_re "O") (re.++ (str.to_re "N") (re.++ (str.to_re "D") (re.++ (str.to_re "A") (str.to_re "Y"))))))) (re.++ (str.to_re "T") (re.++ (str.to_re "U") (re.++ (str.to_re "E") (re.++ (str.to_re "S") (re.++ (str.to_re "D") (re.++ (str.to_re "A") (str.to_re "Y")))))))) (re.++ (str.to_re "W") (re.++ (str.to_re "E") (re.++ (str.to_re "D") (re.++ (str.to_re "N") (re.++ (str.to_re "E") (re.++ (str.to_re "S") (re.++ (str.to_re "D") (re.++ (str.to_re "A") (str.to_re "Y")))))))))) (re.++ (str.to_re "T") (re.++ (str.to_re "H") (re.++ (str.to_re "U") (re.++ (str.to_re "R") (re.++ (str.to_re "S") (re.++ (str.to_re "D") (re.++ (str.to_re "A") (str.to_re "Y"))))))))) (re.++ (str.to_re "F") (re.++ (str.to_re "R") (re.++ (str.to_re "I") (re.++ (str.to_re "D") (re.++ (str.to_re "A") (str.to_re "Y"))))))) (re.++ (str.to_re "S") (re.++ (str.to_re "A") (re.++ (str.to_re "T") (re.++ (str.to_re "U") (re.++ (str.to_re "R") (re.++ (str.to_re "D") (re.++ (str.to_re "A") (str.to_re "Y"))))))))) (re.++ (str.to_re "R") (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (str.to_re "-") (re.++ (re.union (re.union (re.range "0" "9") (re.++ (str.to_re "0") (re.range "1" "9"))) (re.++ (re.range "1" "2") (re.range "0" "9"))) (re.++ (str.to_re "-") (re.++ (re.union (re.union (re.union (re.range "0" "9") (re.++ (str.to_re "0") (re.range "1" "9"))) (re.++ (re.range "1" "2") (re.range "0" "9"))) (re.++ (str.to_re "3") (re.range "0" "1"))) (re.++ (str.to_re "R") (re.++ (re.*? (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re "R") (re.++ (re.*? (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re "R") (str.to_re "R")))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)