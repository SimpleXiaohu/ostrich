;test regex /(?:(\d{4})([\-\/.])([0-3]?\d)\2([0-3]?\d)|([0-3]?\d)([\-\/.])([0-3]?\d)\6(\d{4}))(?:\s+([012]?\d)([:hap])([0-5]\d))?/i
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "/") (re.++ (re.union (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (re.union (str.to_re "-") (re.union (str.to_re "/") (str.to_re "."))) (re.++ (re.++ (re.opt (re.range "0" "3")) (re.range "0" "9")) (re.++ (_ re.reference 2) (re.++ (re.opt (re.range "0" "3")) (re.range "0" "9")))))) (re.++ (re.++ (re.opt (re.range "0" "3")) (re.range "0" "9")) (re.++ (re.union (str.to_re "-") (re.union (str.to_re "/") (str.to_re "."))) (re.++ (re.++ (re.opt (re.range "0" "3")) (re.range "0" "9")) (re.++ (_ re.reference 6) ((_ re.loop 4 4) (re.range "0" "9"))))))) (re.++ (re.opt (re.++ (re.+ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.++ (re.opt (str.to_re "012")) (re.range "0" "9")) (re.++ (re.union (str.to_re ":") (re.union (str.to_re "h") (re.union (str.to_re "a") (str.to_re "p")))) (re.++ (re.range "0" "5") (re.range "0" "9")))))) (re.++ (str.to_re "/") (str.to_re "i")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)