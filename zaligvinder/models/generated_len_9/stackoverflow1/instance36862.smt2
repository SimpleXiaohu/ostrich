;test regex ([*A-Za-z]:Dut-[a-zA-Z]{1}#\sshow stats\s(gx|gy|s11|s12|s5|s1u)|[\r])
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (re.union (str.to_re "*") (re.union (re.range "A" "Z") (re.range "a" "z"))) (re.++ (str.to_re ":") (re.++ (str.to_re "D") (re.++ (str.to_re "u") (re.++ (str.to_re "t") (re.++ (str.to_re "-") (re.++ ((_ re.loop 1 1) (re.union (re.range "a" "z") (re.range "A" "Z"))) (re.++ (str.to_re "#") (re.++ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.++ (str.to_re "s") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re "w") (re.++ (str.to_re " ") (re.++ (str.to_re "s") (re.++ (str.to_re "t") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "s") (re.++ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "g") (str.to_re "x")) (re.++ (str.to_re "g") (str.to_re "y"))) (re.++ (str.to_re "s") (str.to_re "11"))) (re.++ (str.to_re "s") (str.to_re "12"))) (re.++ (str.to_re "s") (str.to_re "5"))) (re.++ (str.to_re "s") (re.++ (str.to_re "1") (str.to_re "u")))))))))))))))))))))))) (str.to_re "\u{0d}"))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)