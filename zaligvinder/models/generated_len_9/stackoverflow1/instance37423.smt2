;test regex (addr|Mask):([0-1]{1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]|[0-9]{1,2}).([0-1]{1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]|[0-9]{1,2}).([0-1]{1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]|[0-9]{1,2}).([0-1]{1}[0-9]{1,2}|2[0-4][0-9]|25[0-5]|[0-9]{1,2})
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (re.++ (str.to_re "a") (re.++ (str.to_re "d") (re.++ (str.to_re "d") (str.to_re "r")))) (re.++ (str.to_re "M") (re.++ (str.to_re "a") (re.++ (str.to_re "s") (str.to_re "k"))))) (re.++ (str.to_re ":") (re.++ (re.union (re.union (re.union (re.++ ((_ re.loop 1 1) (re.range "0" "1")) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (str.to_re "2") (re.++ (re.range "0" "4") (re.range "0" "9")))) (re.++ (str.to_re "25") (re.range "0" "5"))) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.union (re.union (re.union (re.++ ((_ re.loop 1 1) (re.range "0" "1")) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (str.to_re "2") (re.++ (re.range "0" "4") (re.range "0" "9")))) (re.++ (str.to_re "25") (re.range "0" "5"))) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.union (re.union (re.union (re.++ ((_ re.loop 1 1) (re.range "0" "1")) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (str.to_re "2") (re.++ (re.range "0" "4") (re.range "0" "9")))) (re.++ (str.to_re "25") (re.range "0" "5"))) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.union (re.union (re.union (re.++ ((_ re.loop 1 1) (re.range "0" "1")) ((_ re.loop 1 2) (re.range "0" "9"))) (re.++ (str.to_re "2") (re.++ (re.range "0" "4") (re.range "0" "9")))) (re.++ (str.to_re "25") (re.range "0" "5"))) ((_ re.loop 1 2) (re.range "0" "9")))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)