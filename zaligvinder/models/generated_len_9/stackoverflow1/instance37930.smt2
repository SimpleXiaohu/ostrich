;test regex define("PATTERN", "|^['0-9a-zA-Z\\\/\[\]\(\)\=\>\,\'\~\-\^\@\$\%\*\&\?\:\;\_\.\\+\|\^\@\%\s" . '"' . "]{0,50}$|");
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "d") (re.++ (str.to_re "e") (re.++ (str.to_re "f") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (re.++ (str.to_re "e") (re.++ (re.union (re.union (re.++ (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "P") (re.++ (str.to_re "A") (re.++ (str.to_re "T") (re.++ (str.to_re "T") (re.++ (str.to_re "E") (re.++ (str.to_re "R") (re.++ (str.to_re "N") (str.to_re "\u{22}"))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (str.to_re "\u{22}")))) (re.++ (re.++ (str.to_re "") ((_ re.loop 0 50) (re.union (str.to_re "\u{27}") (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (str.to_re "\\") (re.union (str.to_re "/") (re.union (str.to_re "[") (re.union (str.to_re "]") (re.union (str.to_re "(") (re.union (str.to_re ")") (re.union (str.to_re "=") (re.union (str.to_re ">") (re.union (str.to_re ",") (re.union (str.to_re "\u{27}") (re.union (str.to_re "~") (re.union (str.to_re "-") (re.union (str.to_re "^") (re.union (str.to_re "@") (re.union (str.to_re "$") (re.union (str.to_re "%") (re.union (str.to_re "*") (re.union (str.to_re "&") (re.union (str.to_re "?") (re.union (str.to_re ":") (re.union (str.to_re ";") (re.union (str.to_re "_") (re.union (str.to_re ".") (re.union (str.to_re "\\") (re.union (str.to_re "+") (re.union (str.to_re "|") (re.union (str.to_re "^") (re.union (str.to_re "@") (re.union (str.to_re "%") (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re "\u{22}") (re.union (str.to_re " ") (re.union (str.to_re ".") (re.union (str.to_re " ") (re.union (str.to_re "\u{27}") (re.union (str.to_re "\u{22}") (re.union (str.to_re "\u{27}") (re.union (str.to_re " ") (re.union (str.to_re ".") (re.union (str.to_re " ") (str.to_re "\u{22}"))))))))))))))))))))))))))))))))))))))))))))))) (str.to_re ""))) (str.to_re "\u{22}")) (str.to_re ";"))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)