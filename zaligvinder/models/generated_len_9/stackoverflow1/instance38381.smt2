;test regex replace(/<\/{0,1}!(font|h\d|p|hr|pre|blockquote|ol|ul|...).*?>/ig, "");
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (re.++ (re.++ (re.++ (str.to_re "/") (re.++ (str.to_re "<") (re.++ ((_ re.loop 0 1) (str.to_re "/")) (re.++ (str.to_re "!") (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "f") (re.++ (str.to_re "o") (re.++ (str.to_re "n") (str.to_re "t")))) (re.++ (str.to_re "h") (re.range "0" "9"))) (str.to_re "p")) (re.++ (str.to_re "h") (str.to_re "r"))) (re.++ (str.to_re "p") (re.++ (str.to_re "r") (str.to_re "e")))) (re.++ (str.to_re "b") (re.++ (str.to_re "l") (re.++ (str.to_re "o") (re.++ (str.to_re "c") (re.++ (str.to_re "k") (re.++ (str.to_re "q") (re.++ (str.to_re "u") (re.++ (str.to_re "o") (re.++ (str.to_re "t") (str.to_re "e"))))))))))) (re.++ (str.to_re "o") (str.to_re "l"))) (re.++ (str.to_re "u") (str.to_re "l"))) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.diff re.allchar (str.to_re "\n"))))) (re.++ (re.*? (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re ">") (re.++ (str.to_re "/") (re.++ (str.to_re "i") (str.to_re "g")))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (str.to_re "\u{22}"))))) (str.to_re ";")))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)