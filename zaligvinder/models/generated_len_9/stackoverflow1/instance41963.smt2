;test regex sed -r 's/([^_]+)_([^-]+)-([^-]+)-([^_]+)_([^.]+)/xyz_20\4-\2-\3_0\5/;s/0([0-9]{3})\./\1./' <<<'abc_03-24-15_12.jpg'
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "s") (re.++ (str.to_re "e") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "r") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (re.+ (re.diff re.allchar (str.to_re "_"))) (re.++ (str.to_re "_") (re.++ (re.+ (re.diff re.allchar (str.to_re "-"))) (re.++ (str.to_re "-") (re.++ (re.+ (re.diff re.allchar (str.to_re "-"))) (re.++ (str.to_re "-") (re.++ (re.+ (re.diff re.allchar (str.to_re "_"))) (re.++ (str.to_re "_") (re.++ (re.+ (re.diff re.allchar (str.to_re "."))) (re.++ (str.to_re "/") (re.++ (str.to_re "x") (re.++ (str.to_re "y") (re.++ (str.to_re "z") (re.++ (str.to_re "_") (re.++ (str.to_re "20") (re.++ (_ re.reference 4) (re.++ (str.to_re "-") (re.++ (_ re.reference 2) (re.++ (str.to_re "-") (re.++ (_ re.reference 3) (re.++ (str.to_re "_") (re.++ (str.to_re "0") (re.++ (_ re.reference 5) (re.++ (str.to_re "/") (re.++ (str.to_re ";") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (str.to_re "0") (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ (str.to_re ".") (re.++ (str.to_re "/") (re.++ (_ re.reference 1) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "/") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "<") (re.++ (str.to_re "<") (re.++ (str.to_re "<") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "a") (re.++ (str.to_re "b") (re.++ (str.to_re "c") (re.++ (str.to_re "_") (re.++ (str.to_re "03") (re.++ (str.to_re "-") (re.++ (str.to_re "24") (re.++ (str.to_re "-") (re.++ (str.to_re "15") (re.++ (str.to_re "_") (re.++ (str.to_re "12") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "j") (re.++ (str.to_re "p") (re.++ (str.to_re "g") (str.to_re "\u{27}"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)