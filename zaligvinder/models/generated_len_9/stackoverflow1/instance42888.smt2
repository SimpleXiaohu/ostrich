;test regex (|$)?[0-9][0-9]{0,5}[0-9,k]?(-| - | to )?((|$)?[0-9][0-9][0,5,k]?)? ?(ph|pw|pa| per|per)? ?(hour|annum|week|month)?
(declare-const X String)
(assert (str.in_re X (re.++ (re.opt (re.union (str.to_re "") (re.++ (str.to_re "") (str.to_re "")))) (re.++ (re.range "0" "9") (re.++ ((_ re.loop 0 5) (re.range "0" "9")) (re.++ (re.opt (re.union (re.range "0" "9") (re.union (str.to_re ",") (str.to_re "k")))) (re.++ (re.opt (re.union (re.union (str.to_re "-") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (str.to_re " ")))) (re.++ (str.to_re " ") (re.++ (str.to_re "t") (re.++ (str.to_re "o") (str.to_re " ")))))) (re.++ (re.opt (re.++ (re.opt (re.union (str.to_re "") (re.++ (str.to_re "") (str.to_re "")))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.opt (re.union (str.to_re "0") (re.union (str.to_re ",") (re.union (str.to_re "5") (re.union (str.to_re ",") (str.to_re "k")))))))))) (re.++ (re.opt (str.to_re " ")) (re.++ (re.opt (re.union (re.union (re.union (re.union (re.++ (str.to_re "p") (str.to_re "h")) (re.++ (str.to_re "p") (str.to_re "w"))) (re.++ (str.to_re "p") (str.to_re "a"))) (re.++ (str.to_re " ") (re.++ (str.to_re "p") (re.++ (str.to_re "e") (str.to_re "r"))))) (re.++ (str.to_re "p") (re.++ (str.to_re "e") (str.to_re "r"))))) (re.++ (re.opt (str.to_re " ")) (re.opt (re.union (re.union (re.union (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re "u") (str.to_re "r")))) (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "n") (re.++ (str.to_re "u") (str.to_re "m")))))) (re.++ (str.to_re "w") (re.++ (str.to_re "e") (re.++ (str.to_re "e") (str.to_re "k"))))) (re.++ (str.to_re "m") (re.++ (str.to_re "o") (re.++ (str.to_re "n") (re.++ (str.to_re "t") (str.to_re "h"))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)