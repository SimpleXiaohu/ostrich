;test regex ^([a-zA-Z0-9]|[&#x00C0;-&#x00D6;&#x00D8;-&#x00F6;&#x00F8;-&#x00FF;]){1,20}$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") ((_ re.loop 1 20) (re.union (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9"))) (re.union (str.to_re "&") (re.union (str.to_re "#") (re.union (str.to_re "x") (re.union (str.to_re "00") (re.union (str.to_re "C") (re.union (str.to_re "0") (re.union (re.range ";" "&") (re.union (str.to_re "#") (re.union (str.to_re "x") (re.union (str.to_re "00") (re.union (str.to_re "D") (re.union (str.to_re "6") (re.union (str.to_re ";") (re.union (str.to_re "&") (re.union (str.to_re "#") (re.union (str.to_re "x") (re.union (str.to_re "00") (re.union (str.to_re "D") (re.union (str.to_re "8") (re.union (re.range ";" "&") (re.union (str.to_re "#") (re.union (str.to_re "x") (re.union (str.to_re "00") (re.union (str.to_re "F") (re.union (str.to_re "6") (re.union (str.to_re ";") (re.union (str.to_re "&") (re.union (str.to_re "#") (re.union (str.to_re "x") (re.union (str.to_re "00") (re.union (str.to_re "F") (re.union (str.to_re "8") (re.union (re.range ";" "&") (re.union (str.to_re "#") (re.union (str.to_re "x") (re.union (str.to_re "00") (re.union (str.to_re "F") (re.union (str.to_re "F") (str.to_re ";")))))))))))))))))))))))))))))))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)