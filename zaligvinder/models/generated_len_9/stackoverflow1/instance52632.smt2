;test regex ^(?:(?:Mon|Tues|Wednes|Thurs|Fri|Satur|Sun)days,\s*)+\d{1,2}:\d\d [ap]\.m\.(?:-\d{1,2}:\d\d [ap]\.m\.)?$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.++ (re.+ (re.++ (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "M") (re.++ (str.to_re "o") (str.to_re "n"))) (re.++ (str.to_re "T") (re.++ (str.to_re "u") (re.++ (str.to_re "e") (str.to_re "s"))))) (re.++ (str.to_re "W") (re.++ (str.to_re "e") (re.++ (str.to_re "d") (re.++ (str.to_re "n") (re.++ (str.to_re "e") (str.to_re "s"))))))) (re.++ (str.to_re "T") (re.++ (str.to_re "h") (re.++ (str.to_re "u") (re.++ (str.to_re "r") (str.to_re "s")))))) (re.++ (str.to_re "F") (re.++ (str.to_re "r") (str.to_re "i")))) (re.++ (str.to_re "S") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "u") (str.to_re "r")))))) (re.++ (str.to_re "S") (re.++ (str.to_re "u") (str.to_re "n")))) (re.++ (str.to_re "d") (re.++ (str.to_re "a") (re.++ (str.to_re "y") (str.to_re "s"))))) (re.++ (str.to_re ",") (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))))))) (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.++ (str.to_re ":") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (str.to_re " ") (re.++ (re.union (str.to_re "a") (str.to_re "p")) (re.++ (str.to_re ".") (re.++ (str.to_re "m") (re.++ (str.to_re ".") (re.opt (re.++ (str.to_re "-") (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.++ (str.to_re ":") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (str.to_re " ") (re.++ (re.union (str.to_re "a") (str.to_re "p")) (re.++ (str.to_re ".") (re.++ (str.to_re "m") (str.to_re ".")))))))))))))))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)