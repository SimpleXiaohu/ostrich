;test regex '\d{2}\/\d{2}\/\d{2}\s\d{2}:\d{2}:\d{2},\d{9}','DD\/MM\/RR HH24:MI:SSXFF'
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (str.to_re "\u{27}") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re "/") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re "/") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re ":") (re.++ ((_ re.loop 2 2) (re.range "0" "9")) (re.++ (str.to_re ":") ((_ re.loop 2 2) (re.range "0" "9"))))))))))))) (re.++ (str.to_re ",") (re.++ ((_ re.loop 9 9) (re.range "0" "9")) (str.to_re "\u{27}")))) (re.++ (str.to_re ",") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "D") (re.++ (str.to_re "D") (re.++ (str.to_re "/") (re.++ (str.to_re "M") (re.++ (str.to_re "M") (re.++ (str.to_re "/") (re.++ (str.to_re "R") (re.++ (str.to_re "R") (re.++ (str.to_re " ") (re.++ (str.to_re "H") (re.++ (str.to_re "H") (re.++ (str.to_re "24") (re.++ (str.to_re ":") (re.++ (str.to_re "M") (re.++ (str.to_re "I") (re.++ (str.to_re ":") (re.++ (str.to_re "S") (re.++ (str.to_re "S") (re.++ (str.to_re "X") (re.++ (str.to_re "F") (re.++ (str.to_re "F") (str.to_re "\u{27}")))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)