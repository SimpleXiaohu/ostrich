;test regex mv "$f" $(sed -r 's/([^0-9]+)([0-9]{4})(.*)/echo "\1$((\2+1))\3"/e' <<< "$f")
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (str.to_re "m") (re.++ (str.to_re "v") (re.++ (str.to_re " ") (str.to_re "\u{22}")))) (re.++ (str.to_re "") (re.++ (str.to_re "f") (re.++ (str.to_re "\u{22}") (str.to_re " "))))) (re.++ (str.to_re "") (re.++ (re.++ (re.++ (str.to_re "s") (re.++ (str.to_re "e") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "r") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (re.+ (re.diff re.allchar (re.range "0" "9"))) (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (re.* (re.diff re.allchar (str.to_re "\n"))) (re.++ (str.to_re "/") (re.++ (str.to_re "e") (re.++ (str.to_re "c") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (_ re.reference 1))))))))))))))))))))) (re.++ (str.to_re "") (re.++ (re.++ (re.+ (_ re.reference 2)) (str.to_re "1")) (re.++ (_ re.reference 3) (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "/") (re.++ (str.to_re "e") (re.++ (str.to_re "\u{27}") (re.++ (str.to_re " ") (re.++ (str.to_re "<") (re.++ (str.to_re "<") (re.++ (str.to_re "<") (re.++ (str.to_re " ") (str.to_re "\u{22}")))))))))))))) (re.++ (str.to_re "") (re.++ (str.to_re "f") (str.to_re "\u{22}"))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)