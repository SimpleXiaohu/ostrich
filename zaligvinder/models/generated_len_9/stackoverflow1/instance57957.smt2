;test regex $htmlentity = "&(?:amp|apos|gt|lt|nbsp|quot|bull|hellip|[lr][ds]quo|[mn]dash|permil|\#[1-9][0-9]{1,3}|[A-Za-z][0-9A-Za-z]+);"
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "") (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "m") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.++ (str.to_re "n") (re.++ (str.to_re "t") (re.++ (str.to_re "i") (re.++ (str.to_re "t") (re.++ (str.to_re "y") (re.++ (str.to_re " ") (re.++ (str.to_re "=") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "&") (re.++ (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "a") (re.++ (str.to_re "m") (str.to_re "p"))) (re.++ (str.to_re "a") (re.++ (str.to_re "p") (re.++ (str.to_re "o") (str.to_re "s"))))) (re.++ (str.to_re "g") (str.to_re "t"))) (re.++ (str.to_re "l") (str.to_re "t"))) (re.++ (str.to_re "n") (re.++ (str.to_re "b") (re.++ (str.to_re "s") (str.to_re "p"))))) (re.++ (str.to_re "q") (re.++ (str.to_re "u") (re.++ (str.to_re "o") (str.to_re "t"))))) (re.++ (str.to_re "b") (re.++ (str.to_re "u") (re.++ (str.to_re "l") (str.to_re "l"))))) (re.++ (str.to_re "h") (re.++ (str.to_re "e") (re.++ (str.to_re "l") (re.++ (str.to_re "l") (re.++ (str.to_re "i") (str.to_re "p"))))))) (re.++ (re.union (str.to_re "l") (str.to_re "r")) (re.++ (re.union (str.to_re "d") (str.to_re "s")) (re.++ (str.to_re "q") (re.++ (str.to_re "u") (str.to_re "o")))))) (re.++ (re.union (str.to_re "m") (str.to_re "n")) (re.++ (str.to_re "d") (re.++ (str.to_re "a") (re.++ (str.to_re "s") (str.to_re "h")))))) (re.++ (str.to_re "p") (re.++ (str.to_re "e") (re.++ (str.to_re "r") (re.++ (str.to_re "m") (re.++ (str.to_re "i") (str.to_re "l"))))))) (re.++ (str.to_re "#") (re.++ (re.range "1" "9") ((_ re.loop 1 3) (re.range "0" "9"))))) (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.+ (re.union (re.range "0" "9") (re.union (re.range "A" "Z") (re.range "a" "z")))))) (re.++ (str.to_re ";") (str.to_re "\u{22}")))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)