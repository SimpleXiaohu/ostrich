;test regex @"\\([bBdDfnreasStvwWnAZG\\]|x[A-Z0-9]{2}|u[A-Z0-9]{4}|\d{1,3}|k<\w+>)"
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "@") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re "\\") (re.++ (re.union (re.union (re.union (re.union (re.union (str.to_re "b") (re.union (str.to_re "B") (re.union (str.to_re "d") (re.union (str.to_re "D") (re.union (str.to_re "f") (re.union (str.to_re "n") (re.union (str.to_re "r") (re.union (str.to_re "e") (re.union (str.to_re "a") (re.union (str.to_re "s") (re.union (str.to_re "S") (re.union (str.to_re "t") (re.union (str.to_re "v") (re.union (str.to_re "w") (re.union (str.to_re "W") (re.union (str.to_re "n") (re.union (str.to_re "A") (re.union (str.to_re "Z") (re.union (str.to_re "G") (str.to_re "\\")))))))))))))))))))) (re.++ (str.to_re "x") ((_ re.loop 2 2) (re.union (re.range "A" "Z") (re.range "0" "9"))))) (re.++ (str.to_re "u") ((_ re.loop 4 4) (re.union (re.range "A" "Z") (re.range "0" "9"))))) ((_ re.loop 1 3) (re.range "0" "9"))) (re.++ (str.to_re "k") (re.++ (str.to_re "<") (re.++ (re.+ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_"))))) (str.to_re ">"))))) (str.to_re "\u{22}")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)