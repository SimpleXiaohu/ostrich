;test regex (pnr|(P|p)[ _.:,!"'-/$](N|n)[ _.:,!"'-/$](R|r))+[ _.:,!"'-/$]+[0-9]{3}[ _.:,!"'-/$]+[0-9]{7}
(declare-const X String)
(assert (str.in_re X (re.++ (re.+ (re.union (re.++ (str.to_re "p") (re.++ (str.to_re "n") (str.to_re "r"))) (re.++ (re.union (str.to_re "P") (str.to_re "p")) (re.++ (re.union (str.to_re " ") (re.union (str.to_re "_") (re.union (str.to_re ".") (re.union (str.to_re ":") (re.union (str.to_re ",") (re.union (str.to_re "!") (re.union (str.to_re "\u{22}") (re.union (re.range "\u{27}" "/") (str.to_re "$"))))))))) (re.++ (re.union (str.to_re "N") (str.to_re "n")) (re.++ (re.union (str.to_re " ") (re.union (str.to_re "_") (re.union (str.to_re ".") (re.union (str.to_re ":") (re.union (str.to_re ",") (re.union (str.to_re "!") (re.union (str.to_re "\u{22}") (re.union (re.range "\u{27}" "/") (str.to_re "$"))))))))) (re.union (str.to_re "R") (str.to_re "r")))))))) (re.++ (re.+ (re.union (str.to_re " ") (re.union (str.to_re "_") (re.union (str.to_re ".") (re.union (str.to_re ":") (re.union (str.to_re ",") (re.union (str.to_re "!") (re.union (str.to_re "\u{22}") (re.union (re.range "\u{27}" "/") (str.to_re "$")))))))))) (re.++ ((_ re.loop 3 3) (re.range "0" "9")) (re.++ (re.+ (re.union (str.to_re " ") (re.union (str.to_re "_") (re.union (str.to_re ".") (re.union (str.to_re ":") (re.union (str.to_re ",") (re.union (str.to_re "!") (re.union (str.to_re "\u{22}") (re.union (re.range "\u{27}" "/") (str.to_re "$")))))))))) ((_ re.loop 7 7) (re.range "0" "9"))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)