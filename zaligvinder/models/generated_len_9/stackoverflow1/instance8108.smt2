;test regex ..[V|v|pri|Pri|Od|od|Do|do|Z|z|na|Na|Nad|nad][ ][A-Z]{0,10}
(declare-const X String)
(assert (str.in_re X (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (re.union (str.to_re "V") (re.union (str.to_re "|") (re.union (str.to_re "v") (re.union (str.to_re "|") (re.union (str.to_re "p") (re.union (str.to_re "r") (re.union (str.to_re "i") (re.union (str.to_re "|") (re.union (str.to_re "P") (re.union (str.to_re "r") (re.union (str.to_re "i") (re.union (str.to_re "|") (re.union (str.to_re "O") (re.union (str.to_re "d") (re.union (str.to_re "|") (re.union (str.to_re "o") (re.union (str.to_re "d") (re.union (str.to_re "|") (re.union (str.to_re "D") (re.union (str.to_re "o") (re.union (str.to_re "|") (re.union (str.to_re "d") (re.union (str.to_re "o") (re.union (str.to_re "|") (re.union (str.to_re "Z") (re.union (str.to_re "|") (re.union (str.to_re "z") (re.union (str.to_re "|") (re.union (str.to_re "n") (re.union (str.to_re "a") (re.union (str.to_re "|") (re.union (str.to_re "N") (re.union (str.to_re "a") (re.union (str.to_re "|") (re.union (str.to_re "N") (re.union (str.to_re "a") (re.union (str.to_re "d") (re.union (str.to_re "|") (re.union (str.to_re "n") (re.union (str.to_re "a") (str.to_re "d"))))))))))))))))))))))))))))))))))))))))) (re.++ (str.to_re " ") ((_ re.loop 0 10) (re.range "A" "Z"))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)