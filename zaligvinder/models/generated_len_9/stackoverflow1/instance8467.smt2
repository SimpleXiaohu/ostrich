;test regex ".*(\r\r\n\t)(Hash)( )(is)[\t]{2}(:)( )[a-zA-Z0-9]{32}(\r\r\n\t)(It)( )(should)( )(be)[\t](:)( )[a-zA-Z0-9]{32}"
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "\u{22}") (re.++ (re.* (re.diff re.allchar (str.to_re "\n"))) (re.++ (re.++ (str.to_re "\u{0d}") (re.++ (str.to_re "\u{0d}") (re.++ (str.to_re "\u{0a}") (str.to_re "\u{09}")))) (re.++ (re.++ (str.to_re "H") (re.++ (str.to_re "a") (re.++ (str.to_re "s") (str.to_re "h")))) (re.++ (str.to_re " ") (re.++ (re.++ (str.to_re "i") (str.to_re "s")) (re.++ ((_ re.loop 2 2) (str.to_re "\u{09}")) (re.++ (str.to_re ":") (re.++ (str.to_re " ") (re.++ ((_ re.loop 32 32) (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (re.++ (re.++ (str.to_re "\u{0d}") (re.++ (str.to_re "\u{0d}") (re.++ (str.to_re "\u{0a}") (str.to_re "\u{09}")))) (re.++ (re.++ (str.to_re "I") (str.to_re "t")) (re.++ (str.to_re " ") (re.++ (re.++ (str.to_re "s") (re.++ (str.to_re "h") (re.++ (str.to_re "o") (re.++ (str.to_re "u") (re.++ (str.to_re "l") (str.to_re "d")))))) (re.++ (str.to_re " ") (re.++ (re.++ (str.to_re "b") (str.to_re "e")) (re.++ (str.to_re "\u{09}") (re.++ (str.to_re ":") (re.++ (str.to_re " ") (re.++ ((_ re.loop 32 32) (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.range "0" "9")))) (str.to_re "\u{22}")))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)