;test regex -?([_a-z]|[\240-\377]|([0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|[^\r\n\f0-9a-f]))([_a-z0-9-]|[\240-\377]|([0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|[^\r\n\f0-9a-f]))*
(declare-const X String)
(assert (str.in_re X (re.++ (re.opt (str.to_re "-")) (re.++ (re.union (re.union (re.union (str.to_re "_") (re.range "a" "z")) (re.union (_ re.reference 240) (re.union (str.to_re "-") (_ re.reference 377)))) (re.union (re.++ ((_ re.loop 1 6) (re.union (re.range "0" "9") (re.range "a" "f"))) (re.opt (re.union (re.++ (str.to_re "\u{0d}") (str.to_re "\u{0a}")) (re.union (str.to_re " ") (re.union (str.to_re "\u{09}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{0a}") (str.to_re "\u{0c}")))))))) (re.inter (re.diff re.allchar (str.to_re "\u{0d}")) (re.inter (re.diff re.allchar (str.to_re "\u{0a}")) (re.inter (re.diff re.allchar (str.to_re "\u{0c}")) (re.inter (re.diff re.allchar (re.range "0" "9")) (re.diff re.allchar (re.range "a" "f")))))))) (re.* (re.union (re.union (re.union (str.to_re "_") (re.union (re.range "a" "z") (re.union (re.range "0" "9") (str.to_re "-")))) (re.union (_ re.reference 240) (re.union (str.to_re "-") (_ re.reference 377)))) (re.union (re.++ ((_ re.loop 1 6) (re.union (re.range "0" "9") (re.range "a" "f"))) (re.opt (re.union (re.++ (str.to_re "\u{0d}") (str.to_re "\u{0a}")) (re.union (str.to_re " ") (re.union (str.to_re "\u{09}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{0a}") (str.to_re "\u{0c}")))))))) (re.inter (re.diff re.allchar (str.to_re "\u{0d}")) (re.inter (re.diff re.allchar (str.to_re "\u{0a}")) (re.inter (re.diff re.allchar (str.to_re "\u{0c}")) (re.inter (re.diff re.allchar (re.range "0" "9")) (re.diff re.allchar (re.range "a" "f")))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)