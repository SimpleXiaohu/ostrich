;test regex 100(\\n|\\r\\n)13(\\n|\\r\\n)150(\\n|\\r\\n)17((\\n|\\r\\n)205(\\n|\\r\\n)206((\\n|\\r\\n)209){1,7}((\\n|\\r\\n)300){1,4}((\\n|\\r\\n)107){0,1}){1,9999}(\\n|\\r\\n)109(\\n|\\r\\n)
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "100") (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (re.++ (str.to_re "13") (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (re.++ (str.to_re "150") (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (re.++ (str.to_re "17") (re.++ ((_ re.loop 1 9999) (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (re.++ (str.to_re "205") (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (re.++ (str.to_re "206") (re.++ ((_ re.loop 1 7) (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (str.to_re "209"))) (re.++ ((_ re.loop 1 4) (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (str.to_re "300"))) ((_ re.loop 0 1) (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (str.to_re "107")))))))))) (re.++ (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n"))))) (re.++ (str.to_re "109") (re.union (re.++ (str.to_re "\\") (str.to_re "n")) (re.++ (str.to_re "\\") (re.++ (str.to_re "r") (re.++ (str.to_re "\\") (str.to_re "n")))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 9 (str.len X)))
(check-sat)
(get-model)