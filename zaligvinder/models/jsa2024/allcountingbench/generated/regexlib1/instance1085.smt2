;test regex ^(\d{5}((|-)-\d{4})?)|([A-Za-z]\d[A-Za-z][\s\.\-]?(|-)\d[A-Za-z]\d)|[A-Za-z]{1,2}\d{1,2}[A-Za-z]? \d[A-Za-z]{2}$
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.++ (str.to_re "") (re.++ ((_ re.loop 5 5) (re.range "0" "9")) (re.opt (re.++ (re.union (str.to_re "") (re.++ (str.to_re "") (str.to_re "-"))) (re.++ (str.to_re "-") ((_ re.loop 4 4) (re.range "0" "9"))))))) (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.++ (re.range "0" "9") (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.++ (re.opt (re.union (re.union (str.to_re "\u{20}") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}")))))) (re.union (str.to_re ".") (str.to_re "-")))) (re.++ (re.union (str.to_re "") (re.++ (str.to_re "") (str.to_re "-"))) (re.++ (re.range "0" "9") (re.++ (re.union (re.range "A" "Z") (re.range "a" "z")) (re.range "0" "9"))))))))) (re.++ (re.++ ((_ re.loop 1 2) (re.union (re.range "A" "Z") (re.range "a" "z"))) (re.++ ((_ re.loop 1 2) (re.range "0" "9")) (re.++ (re.opt (re.union (re.range "A" "Z") (re.range "a" "z"))) (re.++ (str.to_re " ") (re.++ (re.range "0" "9") ((_ re.loop 2 2) (re.union (re.range "A" "Z") (re.range "a" "z")))))))) (str.to_re "")))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)