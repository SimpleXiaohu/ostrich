;test regex ((^[0-9]*).?((BIS)|(TER)|(QUATER))?)?((\W+)|(^))(([a-z]+.)*)([0-9]{5})?.(([a-z\&#39;&#39;]+.)*)$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.opt (re.++ (re.++ (str.to_re "") (re.* (re.range "0" "9"))) (re.++ (re.opt (re.diff re.allchar (str.to_re "\n"))) (re.opt (re.union (re.union (re.++ (str.to_re "B") (re.++ (str.to_re "I") (str.to_re "S"))) (re.++ (str.to_re "T") (re.++ (str.to_re "E") (str.to_re "R")))) (re.++ (str.to_re "Q") (re.++ (str.to_re "U") (re.++ (str.to_re "A") (re.++ (str.to_re "T") (re.++ (str.to_re "E") (str.to_re "R"))))))))))) (re.++ (re.union (re.+ (re.inter (re.diff re.allchar (re.range "a" "z")) (re.inter (re.diff re.allchar (re.range "A" "Z")) (re.inter (re.diff re.allchar (re.range "0" "9")) (re.diff re.allchar (str.to_re "_")))))) (str.to_re "")) (re.++ (re.* (re.++ (re.+ (re.range "a" "z")) (re.diff re.allchar (str.to_re "\n")))) (re.++ (re.opt ((_ re.loop 5 5) (re.range "0" "9"))) (re.++ (re.diff re.allchar (str.to_re "\n")) (re.* (re.++ (re.+ (re.union (re.range "a" "z") (re.union (str.to_re "&") (re.union (str.to_re "#") (re.union (str.to_re "39") (re.union (str.to_re ";") (re.union (str.to_re "&") (re.union (str.to_re "#") (re.union (str.to_re "39") (str.to_re ";")))))))))) (re.diff re.allchar (str.to_re "\n"))))))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)