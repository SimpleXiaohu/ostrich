;test regex uuidgen | grep -E "[A-F0-9]{8}-[A-F0-9]{4}-4[A-F0-9]{3}-[89AB][A-F0-9]{3}-[A-F0-9]{12}"
(declare-const X String)
(assert (str.in_re X (re.union (re.++ (str.to_re "u") (re.++ (str.to_re "u") (re.++ (str.to_re "i") (re.++ (str.to_re "d") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "n") (str.to_re " ")))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "g") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re "E") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ ((_ re.loop 8 8) (re.union (re.range "A" "F") (re.range "0" "9"))) (re.++ (str.to_re "-") (re.++ ((_ re.loop 4 4) (re.union (re.range "A" "F") (re.range "0" "9"))) (re.++ (str.to_re "-") (re.++ (str.to_re "4") (re.++ ((_ re.loop 3 3) (re.union (re.range "A" "F") (re.range "0" "9"))) (re.++ (str.to_re "-") (re.++ (re.union (str.to_re "89") (re.union (str.to_re "A") (str.to_re "B"))) (re.++ ((_ re.loop 3 3) (re.union (re.range "A" "F") (re.range "0" "9"))) (re.++ (str.to_re "-") (re.++ ((_ re.loop 12 12) (re.union (re.range "A" "F") (re.range "0" "9"))) (str.to_re "\u{22}")))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)