;test regex ^(1\.9\d*|[2-9]\.\d*|[2-9]\.?|1[0-9]\.\d*|1[0-9]\.?|2[0-8]\.\d*|29\.[0-9]|3[0-9]\.?|[3-9][0-9]|[1-4][0-9]{2}|5[0-4][0-9])$
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (str.to_re "") (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ (str.to_re "1") (re.++ (str.to_re ".") (re.++ (str.to_re "9") (re.* (re.range "0" "9"))))) (re.++ (re.range "2" "9") (re.++ (str.to_re ".") (re.* (re.range "0" "9"))))) (re.++ (re.range "2" "9") (re.opt (str.to_re ".")))) (re.++ (str.to_re "1") (re.++ (re.range "0" "9") (re.++ (str.to_re ".") (re.* (re.range "0" "9")))))) (re.++ (str.to_re "1") (re.++ (re.range "0" "9") (re.opt (str.to_re "."))))) (re.++ (str.to_re "2") (re.++ (re.range "0" "8") (re.++ (str.to_re ".") (re.* (re.range "0" "9")))))) (re.++ (str.to_re "29") (re.++ (str.to_re ".") (re.range "0" "9")))) (re.++ (str.to_re "3") (re.++ (re.range "0" "9") (re.opt (str.to_re "."))))) (re.++ (re.range "3" "9") (re.range "0" "9"))) (re.++ (re.range "1" "4") ((_ re.loop 2 2) (re.range "0" "9")))) (re.++ (str.to_re "5") (re.++ (re.range "0" "4") (re.range "0" "9"))))) (str.to_re ""))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)