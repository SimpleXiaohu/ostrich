;test regex (block|tower|building|wing)\s*[-]*\s*(\d* |[A-Za-z]{1,3})
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (re.union (re.union (re.++ (str.to_re "b") (re.++ (str.to_re "l") (re.++ (str.to_re "o") (re.++ (str.to_re "c") (str.to_re "k"))))) (re.++ (str.to_re "t") (re.++ (str.to_re "o") (re.++ (str.to_re "w") (re.++ (str.to_re "e") (str.to_re "r")))))) (re.++ (str.to_re "b") (re.++ (str.to_re "u") (re.++ (str.to_re "i") (re.++ (str.to_re "l") (re.++ (str.to_re "d") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (str.to_re "g"))))))))) (re.++ (str.to_re "w") (re.++ (str.to_re "i") (re.++ (str.to_re "n") (str.to_re "g"))))) (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.++ (re.* (str.to_re "-")) (re.++ (re.* (re.union (str.to_re " ") (re.union (str.to_re "\u{0b}") (re.union (str.to_re "\u{0a}") (re.union (str.to_re "\u{0d}") (re.union (str.to_re "\u{09}") (str.to_re "\u{0c}"))))))) (re.union (re.++ (re.* (re.range "0" "9")) (str.to_re " ")) ((_ re.loop 1 3) (re.union (re.range "A" "Z") (re.range "a" "z"))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)