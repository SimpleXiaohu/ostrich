;test regex (((\d{4})(0[13578]|10|12)(0[1-9]|[12][0-9]|3[01]))|((\d{4})(0[469]|11)(0[1-9]|[12][0-9]|30))|((\d{4})(02)(0[1-9]|1[0-9]|2[0-8]))|([0-9][0-9][02468]40229)|([0-9][0-9][02468]80229)|([0-9][0-9][13579]20229)|([0-9][0-9][13579]60229)|([0-9][0-9][02468]00229))
(declare-const X String)
(assert (str.in_re X (re.union (re.union (re.union (re.union (re.union (re.union (re.union (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (re.union (re.union (re.++ (str.to_re "0") (str.to_re "13578")) (str.to_re "10")) (str.to_re "12")) (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "12") (re.range "0" "9"))) (re.++ (str.to_re "3") (str.to_re "01"))))) (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (re.union (re.++ (str.to_re "0") (str.to_re "469")) (str.to_re "11")) (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "12") (re.range "0" "9"))) (str.to_re "30"))))) (re.++ ((_ re.loop 4 4) (re.range "0" "9")) (re.++ (str.to_re "02") (re.union (re.union (re.++ (str.to_re "0") (re.range "1" "9")) (re.++ (str.to_re "1") (re.range "0" "9"))) (re.++ (str.to_re "2") (re.range "0" "8")))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (str.to_re "02468") (str.to_re "40229"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (str.to_re "02468") (str.to_re "80229"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (str.to_re "13579") (str.to_re "20229"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (str.to_re "13579") (str.to_re "60229"))))) (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (str.to_re "02468") (str.to_re "00229")))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)