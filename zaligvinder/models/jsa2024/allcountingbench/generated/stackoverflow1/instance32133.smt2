;test regex ((?: http| https)://)?[.0-9a-z-]+\.[a-z]{2,6}(?::[0-9]{1,5}+)?(?:/[!$'()*+,._a-z-]++){0,9}(?:/[!$'()*+,._a-z-]*)?(?:\?[!$&'()*+,.=_a-z-]*)?
(declare-const X String)
(assert (str.in_re X (re.++ (re.opt (re.++ (re.union (re.++ (str.to_re " ") (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (str.to_re "p"))))) (re.++ (str.to_re " ") (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "t") (re.++ (str.to_re "p") (str.to_re "s"))))))) (re.++ (str.to_re ":") (re.++ (str.to_re "/") (str.to_re "/"))))) (re.++ (re.+ (re.union (str.to_re ".") (re.union (re.range "0" "9") (re.union (re.range "a" "z") (str.to_re "-"))))) (re.++ (str.to_re ".") (re.++ ((_ re.loop 2 6) (re.range "a" "z")) (re.++ (re.opt (re.++ (str.to_re ":") (re.+ ((_ re.loop 1 5) (re.range "0" "9"))))) (re.++ ((_ re.loop 0 9) (re.++ (str.to_re "/") (re.+ (re.+ (re.union (str.to_re "!") (re.union (str.to_re "$") (re.union (str.to_re "\u{27}") (re.union (str.to_re "(") (re.union (str.to_re ")") (re.union (str.to_re "*") (re.union (str.to_re "+") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "_") (re.union (re.range "a" "z") (str.to_re "-")))))))))))))))) (re.++ (re.opt (re.++ (str.to_re "/") (re.* (re.union (str.to_re "!") (re.union (str.to_re "$") (re.union (str.to_re "\u{27}") (re.union (str.to_re "(") (re.union (str.to_re ")") (re.union (str.to_re "*") (re.union (str.to_re "+") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "_") (re.union (re.range "a" "z") (str.to_re "-"))))))))))))))) (re.opt (re.++ (str.to_re "?") (re.* (re.union (str.to_re "!") (re.union (str.to_re "$") (re.union (str.to_re "&") (re.union (str.to_re "\u{27}") (re.union (str.to_re "(") (re.union (str.to_re ")") (re.union (str.to_re "*") (re.union (str.to_re "+") (re.union (str.to_re ",") (re.union (str.to_re ".") (re.union (str.to_re "=") (re.union (str.to_re "_") (re.union (re.range "a" "z") (str.to_re "-"))))))))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)