;test regex [Mon Nov 22 13:59:24 2010] [alert] [client 172.xx.xx.x] /Applications/MAMP/htdocs/myapp/.htaccess: RewriteRule: cannot compile regular expression '^([0-9]{6}+)/?$'
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (re.union (str.to_re "M") (re.union (str.to_re "o") (re.union (str.to_re "n") (re.union (str.to_re " ") (re.union (str.to_re "N") (re.union (str.to_re "o") (re.union (str.to_re "v") (re.union (str.to_re " ") (re.union (str.to_re "22") (re.union (str.to_re " ") (re.union (str.to_re "13") (re.union (str.to_re ":") (re.union (str.to_re "59") (re.union (str.to_re ":") (re.union (str.to_re "24") (re.union (str.to_re " ") (str.to_re "2010"))))))))))))))))) (re.++ (str.to_re " ") (re.++ (re.union (str.to_re "a") (re.union (str.to_re "l") (re.union (str.to_re "e") (re.union (str.to_re "r") (str.to_re "t"))))) (re.++ (str.to_re " ") (re.++ (re.union (str.to_re "c") (re.union (str.to_re "l") (re.union (str.to_re "i") (re.union (str.to_re "e") (re.union (str.to_re "n") (re.union (str.to_re "t") (re.union (str.to_re " ") (re.union (str.to_re "172") (re.union (str.to_re ".") (re.union (str.to_re "x") (re.union (str.to_re "x") (re.union (str.to_re ".") (re.union (str.to_re "x") (re.union (str.to_re "x") (re.union (str.to_re ".") (str.to_re "x")))))))))))))))) (re.++ (str.to_re " ") (re.++ (str.to_re "/") (re.++ (str.to_re "A") (re.++ (str.to_re "p") (re.++ (str.to_re "p") (re.++ (str.to_re "l") (re.++ (str.to_re "i") (re.++ (str.to_re "c") (re.++ (str.to_re "a") (re.++ (str.to_re "t") (re.++ (str.to_re "i") (re.++ (str.to_re "o") (re.++ (str.to_re "n") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (str.to_re "M") (re.++ (str.to_re "A") (re.++ (str.to_re "M") (re.++ (str.to_re "P") (re.++ (str.to_re "/") (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "d") (re.++ (str.to_re "o") (re.++ (str.to_re "c") (re.++ (str.to_re "s") (re.++ (str.to_re "/") (re.++ (str.to_re "m") (re.++ (str.to_re "y") (re.++ (str.to_re "a") (re.++ (str.to_re "p") (re.++ (str.to_re "p") (re.++ (str.to_re "/") (re.++ (re.diff re.allchar (str.to_re "\n")) (re.++ (str.to_re "h") (re.++ (str.to_re "t") (re.++ (str.to_re "a") (re.++ (str.to_re "c") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (re.++ (str.to_re "s") (re.++ (str.to_re "s") (re.++ (str.to_re ":") (re.++ (str.to_re " ") (re.++ (str.to_re "R") (re.++ (str.to_re "e") (re.++ (str.to_re "w") (re.++ (str.to_re "r") (re.++ (str.to_re "i") (re.++ (str.to_re "t") (re.++ (str.to_re "e") (re.++ (str.to_re "R") (re.++ (str.to_re "u") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.++ (str.to_re ":") (re.++ (str.to_re " ") (re.++ (str.to_re "c") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "n") (re.++ (str.to_re "o") (re.++ (str.to_re "t") (re.++ (str.to_re " ") (re.++ (str.to_re "c") (re.++ (str.to_re "o") (re.++ (str.to_re "m") (re.++ (str.to_re "p") (re.++ (str.to_re "i") (re.++ (str.to_re "l") (re.++ (str.to_re "e") (re.++ (str.to_re " ") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "u") (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "r") (re.++ (str.to_re " ") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (re.++ (str.to_re "p") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "s") (re.++ (str.to_re "s") (re.++ (str.to_re "i") (re.++ (str.to_re "o") (re.++ (str.to_re "n") (re.++ (str.to_re " ") (str.to_re "\u{27}"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (re.++ (str.to_re "") (re.++ (re.+ ((_ re.loop 6 6) (re.range "0" "9"))) (re.opt (str.to_re "/"))))) (re.++ (str.to_re "") (str.to_re "\u{27}")))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)