;test regex "1,2,3,4,5,6,7,8,9,10,11,12,13" and regex - "^([^,\r\n]*,){11}P".
(declare-const X String)
(assert (str.in_re X (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (re.++ (str.to_re "\u{22}") (str.to_re "1")) (re.++ (str.to_re ",") (str.to_re "2"))) (re.++ (str.to_re ",") (str.to_re "3"))) (re.++ (str.to_re ",") (str.to_re "4"))) (re.++ (str.to_re ",") (str.to_re "5"))) (re.++ (str.to_re ",") (str.to_re "6"))) (re.++ (str.to_re ",") (str.to_re "7"))) (re.++ (str.to_re ",") (str.to_re "8"))) (re.++ (str.to_re ",") (str.to_re "9"))) (re.++ (str.to_re ",") (str.to_re "10"))) (re.++ (str.to_re ",") (str.to_re "11"))) (re.++ (str.to_re ",") (str.to_re "12"))) (re.++ (str.to_re ",") (re.++ (str.to_re "13") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re " ") (re.++ (str.to_re "a") (re.++ (str.to_re "n") (re.++ (str.to_re "d") (re.++ (str.to_re " ") (re.++ (str.to_re "r") (re.++ (str.to_re "e") (re.++ (str.to_re "g") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (re.++ (str.to_re " ") (re.++ (str.to_re "-") (re.++ (str.to_re " ") (str.to_re "\u{22}")))))))))))))))))) (re.++ (str.to_re "") (re.++ ((_ re.loop 11 11) (re.++ (re.* (re.inter (re.diff re.allchar (str.to_re ",")) (re.inter (re.diff re.allchar (str.to_re "\u{0d}")) (re.diff re.allchar (str.to_re "\u{0a}"))))) (str.to_re ","))) (re.++ (str.to_re "P") (re.++ (str.to_re "\u{22}") (re.diff re.allchar (str.to_re "\n")))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)