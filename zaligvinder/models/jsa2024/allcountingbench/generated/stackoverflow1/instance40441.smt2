;test regex (?:To|Cc):(?:\h*<?\w[^@]*@\S+>?,?){2,}
(declare-const X String)
(assert (str.in_re X (re.++ (re.union (re.++ (str.to_re "T") (str.to_re "o")) (re.++ (str.to_re "C") (str.to_re "c"))) (re.++ (str.to_re ":") (re.++ (re.* (re.++ (re.++ (re.* (str.to_re "h")) (re.++ (re.opt (str.to_re "<")) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (re.++ (re.* (re.diff re.allchar (str.to_re "@"))) (re.++ (str.to_re "@") (re.++ (re.+ (re.inter (re.diff re.allchar (str.to_re "\u{20}")) (re.inter (re.diff re.allchar (str.to_re "\u{0a}")) (re.inter (re.diff re.allchar (str.to_re "\u{0b}")) (re.inter (re.diff re.allchar (str.to_re "\u{0d}")) (re.inter (re.diff re.allchar (str.to_re "\u{09}")) (re.diff re.allchar (str.to_re "\u{0c}")))))))) (re.opt (str.to_re ">")))))))) (re.opt (str.to_re ",")))) ((_ re.loop 2 2) (re.++ (re.++ (re.* (str.to_re "h")) (re.++ (re.opt (str.to_re "<")) (re.++ (re.union (re.range "a" "z") (re.union (re.range "A" "Z") (re.union (re.range "0" "9") (str.to_re "_")))) (re.++ (re.* (re.diff re.allchar (str.to_re "@"))) (re.++ (str.to_re "@") (re.++ (re.+ (re.inter (re.diff re.allchar (str.to_re "\u{20}")) (re.inter (re.diff re.allchar (str.to_re "\u{0a}")) (re.inter (re.diff re.allchar (str.to_re "\u{0b}")) (re.inter (re.diff re.allchar (str.to_re "\u{0d}")) (re.inter (re.diff re.allchar (str.to_re "\u{09}")) (re.diff re.allchar (str.to_re "\u{0c}")))))))) (re.opt (str.to_re ">")))))))) (re.opt (str.to_re ",")))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)