;test regex EU2 <- tm_map(EU, ReplaceText, "[0-9]{1,3}\n\n\f", " ")
(declare-const X String)
(assert (str.in_re X (re.++ (str.to_re "E") (re.++ (str.to_re "U") (re.++ (str.to_re "2") (re.++ (str.to_re " ") (re.++ (str.to_re "<") (re.++ (str.to_re "-") (re.++ (str.to_re " ") (re.++ (str.to_re "t") (re.++ (str.to_re "m") (re.++ (str.to_re "_") (re.++ (str.to_re "m") (re.++ (str.to_re "a") (re.++ (str.to_re "p") (re.++ (re.++ (re.++ (re.++ (str.to_re "E") (str.to_re "U")) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "R") (re.++ (str.to_re "e") (re.++ (str.to_re "p") (re.++ (str.to_re "l") (re.++ (str.to_re "a") (re.++ (str.to_re "c") (re.++ (str.to_re "e") (re.++ (str.to_re "T") (re.++ (str.to_re "e") (re.++ (str.to_re "x") (str.to_re "t")))))))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ ((_ re.loop 1 3) (re.range "0" "9")) (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "\u{0a}") (re.++ (str.to_re "\u{0c}") (str.to_re "\u{22}"))))))))) (re.++ (str.to_re ",") (re.++ (str.to_re " ") (re.++ (str.to_re "\u{22}") (re.++ (str.to_re " ") (str.to_re "\u{22}")))))))))))))))))))))
; sanitize danger characters:  < > ' " &
(assert (not (str.in_re X (re.++ re.all (re.union (str.to_re "\u{3c}") (str.to_re "\u{3e}") (str.to_re "\u{27}") (str.to_re "\u{22}") (str.to_re "\u{26}")) re.all))))
(assert (< 10 (str.len X)))
(check-sat)
(get-model)