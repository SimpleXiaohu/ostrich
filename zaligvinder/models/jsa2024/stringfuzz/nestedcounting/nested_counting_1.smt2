(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 1 9) (str.to_re "0+M")) (re.++ ((_ re.loop 1 14) (str.to_re "5")) (re.++ ((_ re.loop 3 19) (str.to_re "ot^")) ((_ re.loop 1 16) (str.to_re "0!")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 12) (str.to_re "k/,")) (re.++ ((_ re.loop 5 17) (str.to_re "M`i")) (re.++ ((_ re.loop 2 17) (str.to_re "[")) ((_ re.loop 1 9) (str.to_re "_")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 2 19) (str.to_re "iy!")) (re.++ ((_ re.loop 0 9) (str.to_re "5L")) (re.++ ((_ re.loop 5 9) (str.to_re "7a")) ((_ re.loop 3 20) (str.to_re "|$")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 4 15) (str.to_re "s")) (re.++ ((_ re.loop 1 13) (str.to_re "C-")) (re.++ ((_ re.loop 2 15) (str.to_re "S\u0022")) ((_ re.loop 3 13) (str.to_re "S")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
