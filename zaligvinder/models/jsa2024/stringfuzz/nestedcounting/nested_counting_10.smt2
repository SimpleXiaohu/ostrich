(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 15) (str.to_re "O%")) (re.++ ((_ re.loop 4 5) (str.to_re "l%")) (re.++ ((_ re.loop 4 17) (str.to_re "c")) ((_ re.loop 3 16) (str.to_re "inx")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 5) (str.to_re "O")) (re.++ ((_ re.loop 3 6) (str.to_re "IF4")) (re.++ ((_ re.loop 0 17) (str.to_re "g")) ((_ re.loop 0 19) (str.to_re "Z")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 6) (str.to_re "8u")) (re.++ ((_ re.loop 0 20) (str.to_re "O4s")) (re.++ ((_ re.loop 1 12) (str.to_re "^")) ((_ re.loop 2 16) (str.to_re "&>")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 4 6) (str.to_re "YkR")) (re.++ ((_ re.loop 3 13) (str.to_re ".n`")) (re.++ ((_ re.loop 0 13) (str.to_re "58k")) ((_ re.loop 5 11) (str.to_re "x")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
