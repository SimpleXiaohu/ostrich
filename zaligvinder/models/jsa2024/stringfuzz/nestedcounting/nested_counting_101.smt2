(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 19) (str.to_re "5g%")) (re.++ ((_ re.loop 3 9) (str.to_re "Tg")) (re.++ ((_ re.loop 0 10) (str.to_re "a#")) ((_ re.loop 1 11) (str.to_re "b")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 20) (str.to_re "KO")) (re.++ ((_ re.loop 3 16) (str.to_re "1O")) (re.++ ((_ re.loop 2 7) (str.to_re "Rr")) ((_ re.loop 5 17) (str.to_re "&16")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 18) (str.to_re "5;")) (re.++ ((_ re.loop 0 13) (str.to_re "iu@")) (re.++ ((_ re.loop 3 12) (str.to_re "g;")) ((_ re.loop 2 10) (str.to_re "[)")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 5 10) (str.to_re "eB}")) (re.++ ((_ re.loop 1 7) (str.to_re ":")) (re.++ ((_ re.loop 0 8) (str.to_re "$iK")) ((_ re.loop 2 10) (str.to_re "](")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
