(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 14) (str.to_re "|[Q")) (re.++ ((_ re.loop 1 10) (str.to_re "{T")) (re.++ ((_ re.loop 5 16) (str.to_re "XD")) ((_ re.loop 2 11) (str.to_re "p")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 5 9) (str.to_re "w-")) (re.++ ((_ re.loop 1 12) (str.to_re "h")) (re.++ ((_ re.loop 1 12) (str.to_re "]7F")) ((_ re.loop 3 10) (str.to_re "n;y")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 14) (str.to_re "z7D")) (re.++ ((_ re.loop 1 7) (str.to_re "N")) (re.++ ((_ re.loop 3 16) (str.to_re "l1*")) ((_ re.loop 0 15) (str.to_re "D")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 5 15) (str.to_re "l")) (re.++ ((_ re.loop 5 13) (str.to_re "u+")) (re.++ ((_ re.loop 1 11) (str.to_re "@l>")) ((_ re.loop 1 17) (str.to_re "L")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
