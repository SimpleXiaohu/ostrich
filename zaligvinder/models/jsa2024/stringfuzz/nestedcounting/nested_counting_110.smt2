(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 5) (str.to_re "6be")) (re.++ ((_ re.loop 3 10) (str.to_re "1A~")) (re.++ ((_ re.loop 1 5) (str.to_re "vx")) ((_ re.loop 1 13) (str.to_re "`")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 6) (str.to_re "\\x")) (re.++ ((_ re.loop 5 20) (str.to_re "Sg")) (re.++ ((_ re.loop 3 7) (str.to_re "MZ")) ((_ re.loop 0 5) (str.to_re "@9")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 2 19) (str.to_re "/60")) (re.++ ((_ re.loop 4 14) (str.to_re "kQ")) (re.++ ((_ re.loop 1 12) (str.to_re "aq")) ((_ re.loop 1 15) (str.to_re "/N")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 1 9) (str.to_re "LT")) (re.++ ((_ re.loop 3 7) (str.to_re "@]N")) (re.++ ((_ re.loop 5 17) (str.to_re "!")) ((_ re.loop 0 19) (str.to_re "!/Q")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
