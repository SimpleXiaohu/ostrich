(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 6) (str.to_re "k>J")) (re.++ ((_ re.loop 2 6) (str.to_re "=T>")) (re.++ ((_ re.loop 4 9) (str.to_re "3E")) ((_ re.loop 4 9) (str.to_re "[|z")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 5) (str.to_re "Bc")) (re.++ ((_ re.loop 2 14) (str.to_re ":I")) (re.++ ((_ re.loop 2 17) (str.to_re "*")) ((_ re.loop 4 9) (str.to_re "xC")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 5 6) (str.to_re "6X!")) (re.++ ((_ re.loop 5 6) (str.to_re "{Zw")) (re.++ ((_ re.loop 5 19) (str.to_re "eH")) ((_ re.loop 3 17) (str.to_re "X")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 0 15) (str.to_re "u!h")) (re.++ ((_ re.loop 0 18) (str.to_re "bR")) (re.++ ((_ re.loop 0 17) (str.to_re "s")) ((_ re.loop 0 8) (str.to_re "*")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
