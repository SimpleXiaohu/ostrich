(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 3 12) (str.to_re "8)C")) (re.++ ((_ re.loop 4 17) (str.to_re "T-")) (re.++ ((_ re.loop 3 15) (str.to_re "Px")) ((_ re.loop 1 16) (str.to_re "$>%")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 10) (str.to_re "M")) (re.++ ((_ re.loop 3 15) (str.to_re "/:")) (re.++ ((_ re.loop 3 14) (str.to_re "<<")) ((_ re.loop 2 12) (str.to_re "eB")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 15) (str.to_re "=`>")) (re.++ ((_ re.loop 1 9) (str.to_re "0Mp")) (re.++ ((_ re.loop 5 6) (str.to_re "T")) ((_ re.loop 5 19) (str.to_re ")")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 3 18) (str.to_re "!S+")) (re.++ ((_ re.loop 4 12) (str.to_re "x5")) (re.++ ((_ re.loop 2 9) (str.to_re "joJ")) ((_ re.loop 1 13) (str.to_re "'Hg")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
