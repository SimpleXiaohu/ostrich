(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 13) (str.to_re "l/r")) (re.++ ((_ re.loop 1 5) (str.to_re "z")) (re.++ ((_ re.loop 0 6) (str.to_re "R8h")) ((_ re.loop 2 18) (str.to_re "m")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 16) (str.to_re "h")) (re.++ ((_ re.loop 3 11) (str.to_re "g]")) (re.++ ((_ re.loop 2 13) (str.to_re "|j")) ((_ re.loop 0 14) (str.to_re "8")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 15) (str.to_re ",N")) (re.++ ((_ re.loop 4 6) (str.to_re "lS:")) (re.++ ((_ re.loop 5 5) (str.to_re "3")) ((_ re.loop 4 19) (str.to_re "|L|")))))) ((_ re.loop 1 1) (re.++ ((_ re.loop 1 8) (str.to_re "6")) (re.++ ((_ re.loop 0 18) (str.to_re "-y")) (re.++ ((_ re.loop 3 11) (str.to_re "|]")) ((_ re.loop 3 5) (str.to_re "K")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
