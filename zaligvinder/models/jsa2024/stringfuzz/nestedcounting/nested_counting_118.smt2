(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 5 9) (str.to_re "M$")) (re.++ ((_ re.loop 2 6) (str.to_re "f$")) (re.++ ((_ re.loop 1 7) (str.to_re "U")) ((_ re.loop 0 19) (str.to_re "6N:")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 7) (str.to_re "-X0")) (re.++ ((_ re.loop 2 20) (str.to_re "^s")) (re.++ ((_ re.loop 2 5) (str.to_re "ku")) ((_ re.loop 5 8) (str.to_re "_X")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 1 12) (str.to_re "CU")) (re.++ ((_ re.loop 4 9) (str.to_re "mlh")) (re.++ ((_ re.loop 1 11) (str.to_re "N28")) ((_ re.loop 1 7) (str.to_re "T")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 1 16) (str.to_re "]j")) (re.++ ((_ re.loop 2 8) (str.to_re "J[")) (re.++ ((_ re.loop 4 8) (str.to_re "LVo")) ((_ re.loop 3 10) (str.to_re "/E")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
