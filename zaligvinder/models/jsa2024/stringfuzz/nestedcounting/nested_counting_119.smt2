(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 18) (str.to_re "-n")) (re.++ ((_ re.loop 2 5) (str.to_re "e")) (re.++ ((_ re.loop 3 14) (str.to_re "hZ^")) ((_ re.loop 0 16) (str.to_re ";.")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 5) (str.to_re "n4d")) (re.++ ((_ re.loop 4 17) (str.to_re "bW(")) (re.++ ((_ re.loop 3 16) (str.to_re ":m")) ((_ re.loop 0 8) (str.to_re ".(U")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 14) (str.to_re "w{")) (re.++ ((_ re.loop 4 15) (str.to_re "#")) (re.++ ((_ re.loop 4 14) (str.to_re "V")) ((_ re.loop 4 12) (str.to_re "z-`")))))) ((_ re.loop 1 1) (re.++ ((_ re.loop 2 18) (str.to_re "ax.")) (re.++ ((_ re.loop 4 7) (str.to_re "MS")) (re.++ ((_ re.loop 1 10) (str.to_re ":*")) ((_ re.loop 4 13) (str.to_re "x")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
