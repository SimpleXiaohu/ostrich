(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 1 5) (str.to_re "2;{")) (re.++ ((_ re.loop 3 12) (str.to_re ")xf")) (re.++ ((_ re.loop 1 19) (str.to_re "XLU")) ((_ re.loop 2 10) (str.to_re "0")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 6) (str.to_re "1")) (re.++ ((_ re.loop 3 15) (str.to_re "\u0022zW")) (re.++ ((_ re.loop 2 9) (str.to_re "5")) ((_ re.loop 1 13) (str.to_re "xAd")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 9) (str.to_re "W/")) (re.++ ((_ re.loop 3 17) (str.to_re ")")) (re.++ ((_ re.loop 4 12) (str.to_re "k:B")) ((_ re.loop 1 16) (str.to_re "!6")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 0 7) (str.to_re "L(")) (re.++ ((_ re.loop 5 17) (str.to_re "-!Q")) (re.++ ((_ re.loop 1 20) (str.to_re "UI:")) ((_ re.loop 4 5) (str.to_re ".")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
