(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 1 20) (str.to_re "Mq")) (re.++ ((_ re.loop 2 7) (str.to_re "g")) (re.++ ((_ re.loop 0 11) (str.to_re "`")) ((_ re.loop 3 18) (str.to_re "-")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 7) (str.to_re "c")) (re.++ ((_ re.loop 4 14) (str.to_re "D")) (re.++ ((_ re.loop 5 19) (str.to_re "@0")) ((_ re.loop 0 12) (str.to_re "x")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 9) (str.to_re "q")) (re.++ ((_ re.loop 3 18) (str.to_re "W")) (re.++ ((_ re.loop 4 11) (str.to_re ".n_")) ((_ re.loop 4 16) (str.to_re ".e")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 3 8) (str.to_re "J#a")) (re.++ ((_ re.loop 0 14) (str.to_re "O")) (re.++ ((_ re.loop 1 18) (str.to_re ":+V")) ((_ re.loop 5 15) (str.to_re "xy<")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
