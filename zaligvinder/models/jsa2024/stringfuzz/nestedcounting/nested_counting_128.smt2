(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 8) (str.to_re "!")) (re.++ ((_ re.loop 0 10) (str.to_re "'{K")) (re.++ ((_ re.loop 1 20) (str.to_re "Jnw")) ((_ re.loop 0 19) (str.to_re "~s")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 6) (str.to_re "h")) (re.++ ((_ re.loop 4 19) (str.to_re "<20")) (re.++ ((_ re.loop 5 8) (str.to_re "UF!")) ((_ re.loop 1 13) (str.to_re "i")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 19) (str.to_re "^,")) (re.++ ((_ re.loop 3 13) (str.to_re "r_f")) (re.++ ((_ re.loop 1 15) (str.to_re "r5")) ((_ re.loop 4 17) (str.to_re "'")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 3 15) (str.to_re "$9`")) (re.++ ((_ re.loop 2 12) (str.to_re "T")) (re.++ ((_ re.loop 1 8) (str.to_re "g")) ((_ re.loop 5 6) (str.to_re "T:P")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
