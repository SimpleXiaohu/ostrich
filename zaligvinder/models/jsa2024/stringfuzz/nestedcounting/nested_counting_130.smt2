(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 6) (str.to_re "YO6")) (re.++ ((_ re.loop 4 6) (str.to_re "8(")) (re.++ ((_ re.loop 2 6) (str.to_re "a")) ((_ re.loop 5 15) (str.to_re "@")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 10) (str.to_re "e\\3")) (re.++ ((_ re.loop 5 10) (str.to_re "v")) (re.++ ((_ re.loop 2 19) (str.to_re "om")) ((_ re.loop 2 11) (str.to_re "{G.")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 5) (str.to_re "`4Z")) (re.++ ((_ re.loop 3 16) (str.to_re "+")) (re.++ ((_ re.loop 1 15) (str.to_re "+b")) ((_ re.loop 0 13) (str.to_re "ia0")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 1 12) (str.to_re "mGM")) (re.++ ((_ re.loop 4 7) (str.to_re "eM")) (re.++ ((_ re.loop 1 6) (str.to_re "k")) ((_ re.loop 0 12) (str.to_re "VL")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
