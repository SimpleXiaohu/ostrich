(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 5 19) (str.to_re "6/")) (re.++ ((_ re.loop 3 16) (str.to_re "x&")) (re.++ ((_ re.loop 4 19) (str.to_re "D`")) ((_ re.loop 0 5) (str.to_re "V")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 13) (str.to_re "/t")) (re.++ ((_ re.loop 2 9) (str.to_re "\u0022")) (re.++ ((_ re.loop 3 13) (str.to_re "[")) ((_ re.loop 1 13) (str.to_re "to")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 1 12) (str.to_re "5D")) (re.++ ((_ re.loop 1 8) (str.to_re "x>")) (re.++ ((_ re.loop 5 20) (str.to_re "DM(")) ((_ re.loop 4 5) (str.to_re "j@")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 2 17) (str.to_re "%s")) (re.++ ((_ re.loop 1 18) (str.to_re "N_C")) (re.++ ((_ re.loop 5 8) (str.to_re "8C|")) ((_ re.loop 5 7) (str.to_re "P*")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
