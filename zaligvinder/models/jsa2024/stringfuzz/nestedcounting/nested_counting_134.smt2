(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 5 18) (str.to_re "Dgt")) (re.++ ((_ re.loop 0 17) (str.to_re "kw")) (re.++ ((_ re.loop 0 9) (str.to_re "hlv")) ((_ re.loop 2 20) (str.to_re "QJ")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 4 9) (str.to_re "N@b")) (re.++ ((_ re.loop 5 9) (str.to_re "N<X")) (re.++ ((_ re.loop 5 14) (str.to_re "asP")) ((_ re.loop 5 19) (str.to_re "P!")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 17) (str.to_re "7")) (re.++ ((_ re.loop 2 11) (str.to_re "&`")) (re.++ ((_ re.loop 2 10) (str.to_re "Q?")) ((_ re.loop 5 7) (str.to_re "j4")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 1 5) (str.to_re "Bu*")) (re.++ ((_ re.loop 4 9) (str.to_re "G%")) (re.++ ((_ re.loop 1 18) (str.to_re "LJ")) ((_ re.loop 0 12) (str.to_re "-J+")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
