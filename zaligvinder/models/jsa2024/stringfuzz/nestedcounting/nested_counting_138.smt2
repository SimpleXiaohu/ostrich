(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 19) (str.to_re "$[N")) (re.++ ((_ re.loop 2 13) (str.to_re "4|")) (re.++ ((_ re.loop 0 13) (str.to_re "LP")) ((_ re.loop 1 17) (str.to_re "HMo")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 6) (str.to_re "J")) (re.++ ((_ re.loop 1 20) (str.to_re "Jk(")) (re.++ ((_ re.loop 0 7) (str.to_re ",Gj")) ((_ re.loop 4 17) (str.to_re "k")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 1 13) (str.to_re "2")) (re.++ ((_ re.loop 3 7) (str.to_re "}")) (re.++ ((_ re.loop 3 20) (str.to_re "@")) ((_ re.loop 5 16) (str.to_re "}")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 1 6) (str.to_re "m")) (re.++ ((_ re.loop 4 9) (str.to_re "S")) (re.++ ((_ re.loop 1 5) (str.to_re "p")) ((_ re.loop 3 5) (str.to_re "GOB")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
