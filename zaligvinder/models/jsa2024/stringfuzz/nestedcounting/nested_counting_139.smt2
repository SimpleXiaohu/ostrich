(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 20) (str.to_re "\u0022I")) (re.++ ((_ re.loop 4 6) (str.to_re "@F")) (re.++ ((_ re.loop 5 9) (str.to_re "EQ\\")) ((_ re.loop 1 8) (str.to_re "h")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 17) (str.to_re "!,D")) (re.++ ((_ re.loop 4 14) (str.to_re "?h")) (re.++ ((_ re.loop 2 11) (str.to_re "G")) ((_ re.loop 3 13) (str.to_re "_K")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 13) (str.to_re "n")) (re.++ ((_ re.loop 1 20) (str.to_re "+")) (re.++ ((_ re.loop 0 13) (str.to_re "L4")) ((_ re.loop 2 11) (str.to_re "9x")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 4 5) (str.to_re "M")) (re.++ ((_ re.loop 0 12) (str.to_re "E")) (re.++ ((_ re.loop 0 13) (str.to_re "t")) ((_ re.loop 1 15) (str.to_re "7")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
