(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 5) (str.to_re "MOW")) (re.++ ((_ re.loop 5 17) (str.to_re "rZ")) (re.++ ((_ re.loop 5 10) (str.to_re "+?e")) ((_ re.loop 1 14) (str.to_re "r")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 7) (str.to_re "@s3")) (re.++ ((_ re.loop 5 17) (str.to_re "KH")) (re.++ ((_ re.loop 2 14) (str.to_re "AaW")) ((_ re.loop 5 11) (str.to_re "b")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 5) (str.to_re "tZ:")) (re.++ ((_ re.loop 3 20) (str.to_re "bf")) (re.++ ((_ re.loop 4 18) (str.to_re "lq`")) ((_ re.loop 2 12) (str.to_re "xT>")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 0 19) (str.to_re "}")) (re.++ ((_ re.loop 0 5) (str.to_re "z")) (re.++ ((_ re.loop 4 6) (str.to_re "\u0022h")) ((_ re.loop 3 5) (str.to_re "-{")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
