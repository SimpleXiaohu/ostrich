(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 3 16) (str.to_re "|p\\")) (re.++ ((_ re.loop 0 20) (str.to_re "-q")) (re.++ ((_ re.loop 2 7) (str.to_re "Rq")) ((_ re.loop 4 10) (str.to_re "eN")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 15) (str.to_re "!7P")) (re.++ ((_ re.loop 0 14) (str.to_re "wPo")) (re.++ ((_ re.loop 3 18) (str.to_re "vQ@")) ((_ re.loop 1 11) (str.to_re "le")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 16) (str.to_re "88")) (re.++ ((_ re.loop 5 17) (str.to_re "xM")) (re.++ ((_ re.loop 5 9) (str.to_re "?<'")) ((_ re.loop 2 17) (str.to_re "hC")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 3 19) (str.to_re ">")) (re.++ ((_ re.loop 0 20) (str.to_re "k#")) (re.++ ((_ re.loop 0 17) (str.to_re "~")) ((_ re.loop 2 7) (str.to_re "fg=")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
