(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 1 13) (str.to_re "3")) (re.++ ((_ re.loop 3 19) (str.to_re "oN")) (re.++ ((_ re.loop 5 16) (str.to_re "-")) ((_ re.loop 2 19) (str.to_re "fy8")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 15) (str.to_re "7")) (re.++ ((_ re.loop 3 13) (str.to_re "U")) (re.++ ((_ re.loop 4 19) (str.to_re ",")) ((_ re.loop 1 13) (str.to_re "#")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 10) (str.to_re "4[")) (re.++ ((_ re.loop 1 14) (str.to_re "F=`")) (re.++ ((_ re.loop 3 16) (str.to_re "$_")) ((_ re.loop 4 14) (str.to_re "+<h")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 3 11) (str.to_re "V?")) (re.++ ((_ re.loop 0 16) (str.to_re "<>(")) (re.++ ((_ re.loop 5 8) (str.to_re "jb")) ((_ re.loop 4 12) (str.to_re "\\")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
