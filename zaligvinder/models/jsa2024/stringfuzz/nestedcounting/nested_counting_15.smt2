(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 7) (str.to_re "z,")) (re.++ ((_ re.loop 1 12) (str.to_re "V:O")) (re.++ ((_ re.loop 3 6) (str.to_re ")")) ((_ re.loop 0 11) (str.to_re "|")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 0 18) (str.to_re "%")) (re.++ ((_ re.loop 2 8) (str.to_re "1N'")) (re.++ ((_ re.loop 4 11) (str.to_re "Y")) ((_ re.loop 4 15) (str.to_re "K<")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 12) (str.to_re "~")) (re.++ ((_ re.loop 4 19) (str.to_re ".V")) (re.++ ((_ re.loop 4 16) (str.to_re "LH")) ((_ re.loop 2 13) (str.to_re "R#")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 4 10) (str.to_re "h")) (re.++ ((_ re.loop 5 19) (str.to_re "=]`")) (re.++ ((_ re.loop 1 6) (str.to_re "m_|")) ((_ re.loop 0 19) (str.to_re "K6")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
