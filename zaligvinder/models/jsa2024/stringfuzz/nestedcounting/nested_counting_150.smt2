(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 6) (str.to_re "P")) (re.++ ((_ re.loop 4 8) (str.to_re "Btf")) (re.++ ((_ re.loop 2 16) (str.to_re "V")) ((_ re.loop 1 19) (str.to_re ".cR")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 4 6) (str.to_re "$")) (re.++ ((_ re.loop 0 5) (str.to_re "#")) (re.++ ((_ re.loop 5 14) (str.to_re "(")) ((_ re.loop 1 11) (str.to_re "R@")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 5) (str.to_re "dz")) (re.++ ((_ re.loop 5 18) (str.to_re "zNy")) (re.++ ((_ re.loop 4 15) (str.to_re "Kd")) ((_ re.loop 5 13) (str.to_re "cX")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 4 17) (str.to_re "cT~")) (re.++ ((_ re.loop 4 20) (str.to_re "-4")) (re.++ ((_ re.loop 2 20) (str.to_re "hA")) ((_ re.loop 5 12) (str.to_re "v")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
