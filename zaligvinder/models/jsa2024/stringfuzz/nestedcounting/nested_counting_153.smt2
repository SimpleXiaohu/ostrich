(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 17) (str.to_re "W")) (re.++ ((_ re.loop 0 6) (str.to_re "PI")) (re.++ ((_ re.loop 0 13) (str.to_re "]")) ((_ re.loop 4 10) (str.to_re "#i,")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 9) (str.to_re "u")) (re.++ ((_ re.loop 4 18) (str.to_re "h")) (re.++ ((_ re.loop 4 9) (str.to_re "D>")) ((_ re.loop 5 19) (str.to_re "%")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 11) (str.to_re "{")) (re.++ ((_ re.loop 0 12) (str.to_re "l=S")) (re.++ ((_ re.loop 2 6) (str.to_re "&66")) ((_ re.loop 3 13) (str.to_re "o")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 1 13) (str.to_re "Q")) (re.++ ((_ re.loop 4 19) (str.to_re "m$)")) (re.++ ((_ re.loop 4 10) (str.to_re "5")) ((_ re.loop 2 11) (str.to_re "gVb")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
