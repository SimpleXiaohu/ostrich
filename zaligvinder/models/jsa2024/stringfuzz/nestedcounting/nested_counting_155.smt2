(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 3 20) (str.to_re "V")) (re.++ ((_ re.loop 4 11) (str.to_re "u")) (re.++ ((_ re.loop 4 11) (str.to_re "07")) ((_ re.loop 0 17) (str.to_re "E")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 8) (str.to_re "0ae")) (re.++ ((_ re.loop 4 14) (str.to_re "!}w")) (re.++ ((_ re.loop 4 10) (str.to_re "B")) ((_ re.loop 1 19) (str.to_re "L")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 9) (str.to_re "{d")) (re.++ ((_ re.loop 2 11) (str.to_re "`")) (re.++ ((_ re.loop 4 8) (str.to_re "x0")) ((_ re.loop 3 19) (str.to_re "2HE")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 1 19) (str.to_re "=\\")) (re.++ ((_ re.loop 5 20) (str.to_re "#p0")) (re.++ ((_ re.loop 4 5) (str.to_re "w@")) ((_ re.loop 3 10) (str.to_re "7?\\")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
