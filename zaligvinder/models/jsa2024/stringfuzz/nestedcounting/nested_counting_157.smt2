(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 5 12) (str.to_re "F3")) (re.++ ((_ re.loop 2 16) (str.to_re "r")) (re.++ ((_ re.loop 0 16) (str.to_re ",`v")) ((_ re.loop 1 16) (str.to_re ")r")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 6) (str.to_re ",E\u0022")) (re.++ ((_ re.loop 1 15) (str.to_re "-oM")) (re.++ ((_ re.loop 4 20) (str.to_re ",Od")) ((_ re.loop 4 10) (str.to_re "dmG")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 20) (str.to_re "R.")) (re.++ ((_ re.loop 5 14) (str.to_re "'V")) (re.++ ((_ re.loop 4 10) (str.to_re "e")) ((_ re.loop 1 19) (str.to_re "g_y")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 3 5) (str.to_re "n")) (re.++ ((_ re.loop 0 13) (str.to_re "C")) (re.++ ((_ re.loop 2 18) (str.to_re "c)a")) ((_ re.loop 2 13) (str.to_re ".&")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
