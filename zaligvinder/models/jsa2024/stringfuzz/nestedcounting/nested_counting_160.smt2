(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 6) (str.to_re "Q")) (re.++ ((_ re.loop 2 12) (str.to_re "\\H.")) (re.++ ((_ re.loop 3 8) (str.to_re "~")) ((_ re.loop 5 18) (str.to_re "<jH")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 6) (str.to_re "Sa")) (re.++ ((_ re.loop 0 20) (str.to_re "d")) (re.++ ((_ re.loop 4 11) (str.to_re "z")) ((_ re.loop 3 10) (str.to_re "0#e")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 1 16) (str.to_re "U1")) (re.++ ((_ re.loop 1 17) (str.to_re "%?")) (re.++ ((_ re.loop 4 6) (str.to_re "v")) ((_ re.loop 4 12) (str.to_re "8i?")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 4 13) (str.to_re "f")) (re.++ ((_ re.loop 5 15) (str.to_re "z[:")) (re.++ ((_ re.loop 5 8) (str.to_re ".P#")) ((_ re.loop 4 10) (str.to_re "Ra")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
