(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 16) (str.to_re "9_l")) (re.++ ((_ re.loop 0 17) (str.to_re "uo4")) (re.++ ((_ re.loop 1 12) (str.to_re "H?")) ((_ re.loop 3 8) (str.to_re "+")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 15) (str.to_re "1O")) (re.++ ((_ re.loop 4 9) (str.to_re "[")) (re.++ ((_ re.loop 5 5) (str.to_re "h_}")) ((_ re.loop 0 14) (str.to_re "-ho")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 10) (str.to_re "Uw")) (re.++ ((_ re.loop 1 18) (str.to_re "\\")) (re.++ ((_ re.loop 2 19) (str.to_re ",!d")) ((_ re.loop 2 16) (str.to_re "$w%")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 1 20) (str.to_re ",")) (re.++ ((_ re.loop 4 20) (str.to_re "^s")) (re.++ ((_ re.loop 1 13) (str.to_re "}dd")) ((_ re.loop 4 15) (str.to_re "qd")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
