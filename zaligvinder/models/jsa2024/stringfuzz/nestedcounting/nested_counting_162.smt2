(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 16) (str.to_re "O9")) (re.++ ((_ re.loop 0 14) (str.to_re "0+")) (re.++ ((_ re.loop 4 18) (str.to_re "t}.")) ((_ re.loop 2 18) (str.to_re "RQu")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 5) (str.to_re "\\m")) (re.++ ((_ re.loop 3 17) (str.to_re "G")) (re.++ ((_ re.loop 0 8) (str.to_re "?")) ((_ re.loop 2 8) (str.to_re "Y")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 9) (str.to_re "L=\\")) (re.++ ((_ re.loop 3 18) (str.to_re "D")) (re.++ ((_ re.loop 5 10) (str.to_re "YG-")) ((_ re.loop 4 16) (str.to_re "^Fp")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 5 15) (str.to_re "y5")) (re.++ ((_ re.loop 4 16) (str.to_re "u*J")) (re.++ ((_ re.loop 3 14) (str.to_re "Sw")) ((_ re.loop 1 8) (str.to_re "'8[")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
