(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 6) (str.to_re "T@5")) (re.++ ((_ re.loop 3 6) (str.to_re "}M")) (re.++ ((_ re.loop 4 11) (str.to_re "$~?")) ((_ re.loop 5 17) (str.to_re "2A")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 5 15) (str.to_re "[")) (re.++ ((_ re.loop 4 13) (str.to_re ")")) (re.++ ((_ re.loop 3 20) (str.to_re ":0")) ((_ re.loop 5 19) (str.to_re "~s")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 6) (str.to_re "}Wd")) (re.++ ((_ re.loop 4 8) (str.to_re "i<")) (re.++ ((_ re.loop 4 15) (str.to_re "f")) ((_ re.loop 4 15) (str.to_re "8$^")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 2 13) (str.to_re "#rk")) (re.++ ((_ re.loop 5 16) (str.to_re "^j")) (re.++ ((_ re.loop 1 20) (str.to_re ">x")) ((_ re.loop 2 10) (str.to_re "K>X")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
