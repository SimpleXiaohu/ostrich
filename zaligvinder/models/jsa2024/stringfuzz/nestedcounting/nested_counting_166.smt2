(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 17) (str.to_re ".")) (re.++ ((_ re.loop 0 5) (str.to_re "E")) (re.++ ((_ re.loop 1 5) (str.to_re "$")) ((_ re.loop 5 16) (str.to_re "%")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 12) (str.to_re "!)")) (re.++ ((_ re.loop 1 16) (str.to_re ",9")) (re.++ ((_ re.loop 4 6) (str.to_re "lbv")) ((_ re.loop 1 19) (str.to_re "DA,")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 6) (str.to_re "%RF")) (re.++ ((_ re.loop 2 11) (str.to_re "wYX")) (re.++ ((_ re.loop 2 6) (str.to_re "t")) ((_ re.loop 0 20) (str.to_re "a")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 2 8) (str.to_re "x")) (re.++ ((_ re.loop 0 7) (str.to_re "gp")) (re.++ ((_ re.loop 1 9) (str.to_re "t")) ((_ re.loop 3 10) (str.to_re "'A")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
