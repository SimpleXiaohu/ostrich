(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 5) (str.to_re "0+8")) (re.++ ((_ re.loop 0 6) (str.to_re "\\0w")) (re.++ ((_ re.loop 0 20) (str.to_re "IF")) ((_ re.loop 1 19) (str.to_re "m\\")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 15) (str.to_re "d")) (re.++ ((_ re.loop 4 7) (str.to_re "<")) (re.++ ((_ re.loop 3 14) (str.to_re "e*]")) ((_ re.loop 2 10) (str.to_re "%^")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 19) (str.to_re ",A")) (re.++ ((_ re.loop 0 19) (str.to_re "$)")) (re.++ ((_ re.loop 4 15) (str.to_re ">&\\")) ((_ re.loop 3 11) (str.to_re "-@x")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 3 6) (str.to_re "P")) (re.++ ((_ re.loop 3 16) (str.to_re "v")) (re.++ ((_ re.loop 3 18) (str.to_re "hB")) ((_ re.loop 4 10) (str.to_re "#")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
