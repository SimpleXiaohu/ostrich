(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 12) (str.to_re ")")) (re.++ ((_ re.loop 3 16) (str.to_re "X6R")) (re.++ ((_ re.loop 4 6) (str.to_re "g/")) ((_ re.loop 5 18) (str.to_re "-")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 12) (str.to_re "o5H")) (re.++ ((_ re.loop 4 13) (str.to_re "CO")) (re.++ ((_ re.loop 4 8) (str.to_re "Lp")) ((_ re.loop 1 9) (str.to_re "!")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 10) (str.to_re "DJ")) (re.++ ((_ re.loop 5 13) (str.to_re "T")) (re.++ ((_ re.loop 3 8) (str.to_re "Hc")) ((_ re.loop 4 17) (str.to_re "Nu")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 3 7) (str.to_re "K7E")) (re.++ ((_ re.loop 1 18) (str.to_re "|'\\")) (re.++ ((_ re.loop 4 13) (str.to_re "N9")) ((_ re.loop 3 13) (str.to_re "'SX")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
