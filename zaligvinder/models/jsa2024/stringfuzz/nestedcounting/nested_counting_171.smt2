(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 5 5) (str.to_re "UG,")) (re.++ ((_ re.loop 4 14) (str.to_re "\\Y")) (re.++ ((_ re.loop 5 19) (str.to_re "V")) ((_ re.loop 4 18) (str.to_re "1p0")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 11) (str.to_re "y")) (re.++ ((_ re.loop 3 8) (str.to_re "\u0022e")) (re.++ ((_ re.loop 0 7) (str.to_re "0h")) ((_ re.loop 3 10) (str.to_re "Z")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 10) (str.to_re ";.X")) (re.++ ((_ re.loop 0 10) (str.to_re "Q")) (re.++ ((_ re.loop 2 20) (str.to_re "{tI")) ((_ re.loop 0 5) (str.to_re "`D")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 5 16) (str.to_re "-k;")) (re.++ ((_ re.loop 0 9) (str.to_re "rYp")) (re.++ ((_ re.loop 2 12) (str.to_re "]>")) ((_ re.loop 2 6) (str.to_re "W")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
