(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 12) (str.to_re "PT")) (re.++ ((_ re.loop 0 8) (str.to_re ":")) (re.++ ((_ re.loop 2 17) (str.to_re "C<@")) ((_ re.loop 2 9) (str.to_re "Ld")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 16) (str.to_re "g/p")) (re.++ ((_ re.loop 5 19) (str.to_re "IC!")) (re.++ ((_ re.loop 2 14) (str.to_re "8")) ((_ re.loop 3 6) (str.to_re "X")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 18) (str.to_re "\u0022U")) (re.++ ((_ re.loop 3 6) (str.to_re "lb")) (re.++ ((_ re.loop 4 7) (str.to_re "c)")) ((_ re.loop 2 18) (str.to_re "M;")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 0 14) (str.to_re "z")) (re.++ ((_ re.loop 0 18) (str.to_re "Us")) (re.++ ((_ re.loop 2 9) (str.to_re "a")) ((_ re.loop 4 17) (str.to_re "\u0022")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
