(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 19) (str.to_re "_")) (re.++ ((_ re.loop 3 16) (str.to_re "wo")) (re.++ ((_ re.loop 2 17) (str.to_re "+u")) ((_ re.loop 0 5) (str.to_re "LM")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 2 12) (str.to_re "X")) (re.++ ((_ re.loop 0 15) (str.to_re "$IX")) (re.++ ((_ re.loop 3 6) (str.to_re "{")) ((_ re.loop 0 13) (str.to_re "WT")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 8) (str.to_re "Fo")) (re.++ ((_ re.loop 2 15) (str.to_re "e")) (re.++ ((_ re.loop 1 15) (str.to_re "V[s")) ((_ re.loop 0 12) (str.to_re ":")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 4 9) (str.to_re "|Hb")) (re.++ ((_ re.loop 4 11) (str.to_re ":")) (re.++ ((_ re.loop 3 11) (str.to_re "/|G")) ((_ re.loop 1 10) (str.to_re "XC")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
