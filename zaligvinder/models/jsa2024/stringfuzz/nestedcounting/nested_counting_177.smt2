(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 14) (str.to_re "Y")) (re.++ ((_ re.loop 4 10) (str.to_re "Lkx")) (re.++ ((_ re.loop 5 12) (str.to_re "t\\")) ((_ re.loop 2 5) (str.to_re "$\\")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 11) (str.to_re "M|")) (re.++ ((_ re.loop 4 5) (str.to_re "M&")) (re.++ ((_ re.loop 4 13) (str.to_re "a")) ((_ re.loop 1 10) (str.to_re "xi")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 20) (str.to_re "FrM")) (re.++ ((_ re.loop 5 15) (str.to_re "sa}")) (re.++ ((_ re.loop 5 18) (str.to_re ";f")) ((_ re.loop 1 20) (str.to_re "P")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 0 17) (str.to_re ",S")) (re.++ ((_ re.loop 3 16) (str.to_re "c*h")) (re.++ ((_ re.loop 1 18) (str.to_re "_8[")) ((_ re.loop 5 17) (str.to_re "N/=")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
