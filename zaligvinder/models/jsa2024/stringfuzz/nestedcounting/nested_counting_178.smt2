(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 7) (str.to_re "X1?")) (re.++ ((_ re.loop 4 16) (str.to_re ">")) (re.++ ((_ re.loop 3 8) (str.to_re "rY")) ((_ re.loop 5 6) (str.to_re "h")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 14) (str.to_re "RN")) (re.++ ((_ re.loop 1 12) (str.to_re "FQ\\")) (re.++ ((_ re.loop 2 20) (str.to_re "`")) ((_ re.loop 2 20) (str.to_re "I")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 0 5) (str.to_re "}+")) (re.++ ((_ re.loop 2 18) (str.to_re "m")) (re.++ ((_ re.loop 2 10) (str.to_re "ZM.")) ((_ re.loop 2 17) (str.to_re "S%")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 1 12) (str.to_re "n")) (re.++ ((_ re.loop 4 12) (str.to_re "`")) (re.++ ((_ re.loop 0 6) (str.to_re "?I")) ((_ re.loop 5 11) (str.to_re "nl")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
