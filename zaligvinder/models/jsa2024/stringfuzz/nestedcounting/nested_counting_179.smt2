(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 2 7) (str.to_re "q")) (re.++ ((_ re.loop 5 15) (str.to_re ";E\\")) (re.++ ((_ re.loop 4 11) (str.to_re "K")) ((_ re.loop 0 10) (str.to_re "F")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 12) (str.to_re "^le")) (re.++ ((_ re.loop 0 19) (str.to_re "nv")) (re.++ ((_ re.loop 1 5) (str.to_re "Xz")) ((_ re.loop 0 7) (str.to_re "t+")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 20) (str.to_re "m")) (re.++ ((_ re.loop 3 13) (str.to_re "j}")) (re.++ ((_ re.loop 1 6) (str.to_re "bH")) ((_ re.loop 5 19) (str.to_re "pc")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 1 20) (str.to_re "6:m")) (re.++ ((_ re.loop 1 7) (str.to_re ".G")) (re.++ ((_ re.loop 1 10) (str.to_re "g;B")) ((_ re.loop 5 14) (str.to_re "i>.")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
