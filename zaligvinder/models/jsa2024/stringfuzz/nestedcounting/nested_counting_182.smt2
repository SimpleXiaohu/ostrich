(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 5 18) (str.to_re "_Oa")) (re.++ ((_ re.loop 4 5) (str.to_re "MQ!")) (re.++ ((_ re.loop 0 9) (str.to_re ">")) ((_ re.loop 5 20) (str.to_re "I`")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 4 15) (str.to_re "mm")) (re.++ ((_ re.loop 0 6) (str.to_re "NR")) (re.++ ((_ re.loop 5 10) (str.to_re "f'")) ((_ re.loop 3 8) (str.to_re "4M7")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 7) (str.to_re "g\u0022E")) (re.++ ((_ re.loop 3 11) (str.to_re "b")) (re.++ ((_ re.loop 3 16) (str.to_re "bT0")) ((_ re.loop 4 16) (str.to_re "p")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 0 11) (str.to_re "\\")) (re.++ ((_ re.loop 1 10) (str.to_re "D")) (re.++ ((_ re.loop 0 9) (str.to_re "4]")) ((_ re.loop 0 20) (str.to_re "`B")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
