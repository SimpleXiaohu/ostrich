(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 14) (str.to_re "G")) (re.++ ((_ re.loop 2 7) (str.to_re "p6")) (re.++ ((_ re.loop 2 11) (str.to_re "r")) ((_ re.loop 4 7) (str.to_re "8dZ")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 20) (str.to_re "\\g")) (re.++ ((_ re.loop 4 6) (str.to_re "F%")) (re.++ ((_ re.loop 5 19) (str.to_re "b")) ((_ re.loop 4 19) (str.to_re "s&")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 7) (str.to_re "i")) (re.++ ((_ re.loop 4 6) (str.to_re "Ee+")) (re.++ ((_ re.loop 1 6) (str.to_re "|")) ((_ re.loop 2 7) (str.to_re "!A5")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 4 9) (str.to_re "=")) (re.++ ((_ re.loop 1 16) (str.to_re ".")) (re.++ ((_ re.loop 2 9) (str.to_re "*]+")) ((_ re.loop 1 5) (str.to_re "(Ql")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
