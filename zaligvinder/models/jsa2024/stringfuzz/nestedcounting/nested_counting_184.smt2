(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 5 13) (str.to_re "Hi:")) (re.++ ((_ re.loop 5 17) (str.to_re "[S")) (re.++ ((_ re.loop 1 19) (str.to_re "0")) ((_ re.loop 4 19) (str.to_re "89")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 17) (str.to_re "hO*")) (re.++ ((_ re.loop 1 14) (str.to_re "kQ")) (re.++ ((_ re.loop 4 14) (str.to_re "Dbd")) ((_ re.loop 4 13) (str.to_re "hq")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 17) (str.to_re "S")) (re.++ ((_ re.loop 3 15) (str.to_re "}#")) (re.++ ((_ re.loop 2 15) (str.to_re "B")) ((_ re.loop 4 5) (str.to_re ":a%")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 1 16) (str.to_re "8fI")) (re.++ ((_ re.loop 0 10) (str.to_re "P!")) (re.++ ((_ re.loop 3 5) (str.to_re "ji|")) ((_ re.loop 5 19) (str.to_re "Z@.")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
