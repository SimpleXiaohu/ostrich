(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 15) (str.to_re "@g%")) (re.++ ((_ re.loop 2 19) (str.to_re "?i")) (re.++ ((_ re.loop 2 13) (str.to_re "c")) ((_ re.loop 0 20) (str.to_re "\\G")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 6) (str.to_re "7")) (re.++ ((_ re.loop 1 8) (str.to_re "S&6")) (re.++ ((_ re.loop 3 11) (str.to_re "M")) ((_ re.loop 4 9) (str.to_re "5K")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 1 7) (str.to_re "x+=")) (re.++ ((_ re.loop 5 13) (str.to_re "Ik")) (re.++ ((_ re.loop 2 19) (str.to_re ",")) ((_ re.loop 1 16) (str.to_re "cB")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 5 16) (str.to_re ";")) (re.++ ((_ re.loop 0 5) (str.to_re "*1")) (re.++ ((_ re.loop 0 8) (str.to_re "[XO")) ((_ re.loop 2 15) (str.to_re "nm")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
