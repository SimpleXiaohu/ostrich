(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 13) (str.to_re "1%S")) (re.++ ((_ re.loop 5 15) (str.to_re "\u0022")) (re.++ ((_ re.loop 0 14) (str.to_re "Dg")) ((_ re.loop 1 17) (str.to_re "feg")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 6) (str.to_re "p7")) (re.++ ((_ re.loop 5 16) (str.to_re "/")) (re.++ ((_ re.loop 2 19) (str.to_re "GVC")) ((_ re.loop 4 7) (str.to_re "4x")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 11) (str.to_re "X")) (re.++ ((_ re.loop 0 14) (str.to_re "%W")) (re.++ ((_ re.loop 1 5) (str.to_re "){")) ((_ re.loop 0 18) (str.to_re "!B1")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 5 18) (str.to_re "Gs@")) (re.++ ((_ re.loop 2 16) (str.to_re "0")) (re.++ ((_ re.loop 1 17) (str.to_re "'4")) ((_ re.loop 2 20) (str.to_re "/kt")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
