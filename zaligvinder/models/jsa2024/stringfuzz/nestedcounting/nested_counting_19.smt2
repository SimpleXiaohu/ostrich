(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 12) (str.to_re "gxY")) (re.++ ((_ re.loop 3 14) (str.to_re "0U}")) (re.++ ((_ re.loop 3 12) (str.to_re "t")) ((_ re.loop 2 6) (str.to_re "+")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 7) (str.to_re "c")) (re.++ ((_ re.loop 0 7) (str.to_re "Yp")) (re.++ ((_ re.loop 2 13) (str.to_re "'")) ((_ re.loop 1 18) (str.to_re "U!")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 12) (str.to_re "@FP")) (re.++ ((_ re.loop 4 17) (str.to_re ";")) (re.++ ((_ re.loop 5 19) (str.to_re "R=")) ((_ re.loop 3 14) (str.to_re "|")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 1 15) (str.to_re "|")) (re.++ ((_ re.loop 3 16) (str.to_re "vA;")) (re.++ ((_ re.loop 0 15) (str.to_re "w0x")) ((_ re.loop 4 7) (str.to_re "AN!")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
