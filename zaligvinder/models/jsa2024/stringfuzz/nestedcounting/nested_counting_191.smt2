(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 4 12) (str.to_re "mi")) (re.++ ((_ re.loop 4 18) (str.to_re "s'h")) (re.++ ((_ re.loop 0 17) (str.to_re ".1")) ((_ re.loop 5 17) (str.to_re "0>")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 5) (str.to_re "D")) (re.++ ((_ re.loop 4 10) (str.to_re "S")) (re.++ ((_ re.loop 4 12) (str.to_re "N")) ((_ re.loop 0 12) (str.to_re "k~")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 16) (str.to_re "-")) (re.++ ((_ re.loop 4 6) (str.to_re "\u0022p~")) (re.++ ((_ re.loop 4 17) (str.to_re "$N")) ((_ re.loop 1 11) (str.to_re "#`")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 5 20) (str.to_re "R0.")) (re.++ ((_ re.loop 3 16) (str.to_re "'")) (re.++ ((_ re.loop 4 6) (str.to_re "gF")) ((_ re.loop 0 9) (str.to_re "y")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
