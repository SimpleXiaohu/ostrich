(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 6) (str.to_re "?t;")) (re.++ ((_ re.loop 1 14) (str.to_re "={B")) (re.++ ((_ re.loop 5 12) (str.to_re "v")) ((_ re.loop 0 8) (str.to_re "V`")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 11) (str.to_re "}5")) (re.++ ((_ re.loop 4 15) (str.to_re "f0")) (re.++ ((_ re.loop 1 15) (str.to_re "imT")) ((_ re.loop 3 14) (str.to_re ",")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 12) (str.to_re "h\\")) (re.++ ((_ re.loop 5 13) (str.to_re "o")) (re.++ ((_ re.loop 1 17) (str.to_re "7")) ((_ re.loop 2 7) (str.to_re "r9A")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 0 17) (str.to_re "8Z")) (re.++ ((_ re.loop 0 11) (str.to_re "[")) (re.++ ((_ re.loop 0 16) (str.to_re "}~")) ((_ re.loop 2 17) (str.to_re "8Z")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
