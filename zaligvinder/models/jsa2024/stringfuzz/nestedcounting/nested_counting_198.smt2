(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 11) (str.to_re "Zk")) (re.++ ((_ re.loop 3 14) (str.to_re "=x")) (re.++ ((_ re.loop 0 12) (str.to_re "?R%")) ((_ re.loop 1 14) (str.to_re "{")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 12) (str.to_re "$H4")) (re.++ ((_ re.loop 1 19) (str.to_re "X.")) (re.++ ((_ re.loop 3 16) (str.to_re "sa`")) ((_ re.loop 0 20) (str.to_re "u")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 5 9) (str.to_re "&")) (re.++ ((_ re.loop 2 11) (str.to_re "yk")) (re.++ ((_ re.loop 4 12) (str.to_re "@tY")) ((_ re.loop 4 19) (str.to_re "C")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 4 5) (str.to_re "lnE")) (re.++ ((_ re.loop 3 11) (str.to_re "m")) (re.++ ((_ re.loop 1 9) (str.to_re "Rv")) ((_ re.loop 2 15) (str.to_re "G")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
