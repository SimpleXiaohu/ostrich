(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 5 20) (str.to_re ">")) (re.++ ((_ re.loop 0 18) (str.to_re "Pqn")) (re.++ ((_ re.loop 5 13) (str.to_re "z5")) ((_ re.loop 5 10) (str.to_re "!4")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 13) (str.to_re "_(")) (re.++ ((_ re.loop 5 6) (str.to_re "bh`")) (re.++ ((_ re.loop 0 14) (str.to_re ",n")) ((_ re.loop 4 9) (str.to_re "?")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 5) (str.to_re "4")) (re.++ ((_ re.loop 5 10) (str.to_re "\u0022")) (re.++ ((_ re.loop 0 10) (str.to_re ":V")) ((_ re.loop 1 16) (str.to_re "~Bf")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 4 5) (str.to_re "(t")) (re.++ ((_ re.loop 2 6) (str.to_re "6a")) (re.++ ((_ re.loop 1 19) (str.to_re "@aV")) ((_ re.loop 4 13) (str.to_re "`")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
