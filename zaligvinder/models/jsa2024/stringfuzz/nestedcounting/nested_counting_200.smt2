(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 6) (str.to_re "4")) (re.++ ((_ re.loop 4 5) (str.to_re "dw")) (re.++ ((_ re.loop 3 18) (str.to_re "Bl{")) ((_ re.loop 1 20) (str.to_re "]7a")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 5 12) (str.to_re "5%Z")) (re.++ ((_ re.loop 0 16) (str.to_re "|t")) (re.++ ((_ re.loop 4 8) (str.to_re "/B")) ((_ re.loop 4 10) (str.to_re "n")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 16) (str.to_re "?76")) (re.++ ((_ re.loop 3 20) (str.to_re "z")) (re.++ ((_ re.loop 0 9) (str.to_re "B}")) ((_ re.loop 5 18) (str.to_re "fY3")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 2 7) (str.to_re "|")) (re.++ ((_ re.loop 0 6) (str.to_re "6")) (re.++ ((_ re.loop 1 6) (str.to_re "W.;")) ((_ re.loop 1 12) (str.to_re ",U")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
