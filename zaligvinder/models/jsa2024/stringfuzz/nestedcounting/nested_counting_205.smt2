(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 14) (str.to_re "g]}")) (re.++ ((_ re.loop 0 6) (str.to_re "m")) (re.++ ((_ re.loop 4 13) (str.to_re "%vW")) ((_ re.loop 4 9) (str.to_re "<c")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 13) (str.to_re "%")) (re.++ ((_ re.loop 1 13) (str.to_re "6|")) (re.++ ((_ re.loop 1 13) (str.to_re "A8")) ((_ re.loop 5 19) (str.to_re "$")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 20) (str.to_re "s")) (re.++ ((_ re.loop 5 13) (str.to_re ":")) (re.++ ((_ re.loop 5 16) (str.to_re "O")) ((_ re.loop 0 18) (str.to_re "}Pu")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 2 7) (str.to_re "m")) (re.++ ((_ re.loop 5 17) (str.to_re "4T")) (re.++ ((_ re.loop 4 6) (str.to_re "}")) ((_ re.loop 3 9) (str.to_re "-")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
