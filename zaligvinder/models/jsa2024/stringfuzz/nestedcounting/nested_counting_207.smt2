(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 3 14) (str.to_re "%v")) (re.++ ((_ re.loop 1 20) (str.to_re "\\")) (re.++ ((_ re.loop 1 15) (str.to_re "B5")) ((_ re.loop 1 9) (str.to_re "i")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 5) (str.to_re "wV")) (re.++ ((_ re.loop 5 18) (str.to_re "G.#")) (re.++ ((_ re.loop 0 20) (str.to_re "9")) ((_ re.loop 2 20) (str.to_re "^")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 14) (str.to_re "@z")) (re.++ ((_ re.loop 1 18) (str.to_re "UE>")) (re.++ ((_ re.loop 0 12) (str.to_re "%nt")) ((_ re.loop 4 20) (str.to_re "<%")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 0 20) (str.to_re "$")) (re.++ ((_ re.loop 5 10) (str.to_re "Xm")) (re.++ ((_ re.loop 2 9) (str.to_re "~,")) ((_ re.loop 5 5) (str.to_re "A")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
