(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 13) (str.to_re ".b^")) (re.++ ((_ re.loop 4 16) (str.to_re "LdV")) (re.++ ((_ re.loop 2 13) (str.to_re "/")) ((_ re.loop 4 5) (str.to_re "qfc")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 16) (str.to_re "%u")) (re.++ ((_ re.loop 2 14) (str.to_re ",")) (re.++ ((_ re.loop 2 11) (str.to_re "z2")) ((_ re.loop 0 9) (str.to_re "u")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 19) (str.to_re "I>L")) (re.++ ((_ re.loop 2 13) (str.to_re "e")) (re.++ ((_ re.loop 1 5) (str.to_re "Ava")) ((_ re.loop 0 14) (str.to_re "FSB")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 0 14) (str.to_re "%")) (re.++ ((_ re.loop 3 8) (str.to_re ">")) (re.++ ((_ re.loop 2 6) (str.to_re "7")) ((_ re.loop 0 19) (str.to_re "\\")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
