(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 14) (str.to_re "G/Y")) (re.++ ((_ re.loop 4 18) (str.to_re "{")) (re.++ ((_ re.loop 4 15) (str.to_re "9fL")) ((_ re.loop 2 12) (str.to_re ":Tz")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 14) (str.to_re ":9e")) (re.++ ((_ re.loop 4 19) (str.to_re "s(")) (re.++ ((_ re.loop 4 9) (str.to_re "m^z")) ((_ re.loop 4 9) (str.to_re ";4")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 5 15) (str.to_re "#D")) (re.++ ((_ re.loop 1 7) (str.to_re "n")) (re.++ ((_ re.loop 5 8) (str.to_re "T|")) ((_ re.loop 0 20) (str.to_re "YA")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 5 8) (str.to_re ";")) (re.++ ((_ re.loop 1 17) (str.to_re "B9")) (re.++ ((_ re.loop 5 16) (str.to_re ";\\i")) ((_ re.loop 3 5) (str.to_re ")a")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
