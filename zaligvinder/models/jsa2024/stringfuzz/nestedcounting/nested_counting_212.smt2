(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 18) (str.to_re "u*@")) (re.++ ((_ re.loop 4 17) (str.to_re "[hd")) (re.++ ((_ re.loop 1 6) (str.to_re "`I")) ((_ re.loop 0 15) (str.to_re "3U")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 17) (str.to_re "M#")) (re.++ ((_ re.loop 1 18) (str.to_re "O")) (re.++ ((_ re.loop 0 15) (str.to_re "gb")) ((_ re.loop 0 9) (str.to_re "?!=")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 6) (str.to_re "8")) (re.++ ((_ re.loop 3 6) (str.to_re ".H")) (re.++ ((_ re.loop 5 11) (str.to_re "!")) ((_ re.loop 5 12) (str.to_re "1\u0022")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 1 5) (str.to_re "Q")) (re.++ ((_ re.loop 5 9) (str.to_re "S")) (re.++ ((_ re.loop 5 12) (str.to_re "Min")) ((_ re.loop 1 11) (str.to_re "x")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
