(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 4 16) (str.to_re ";")) (re.++ ((_ re.loop 0 14) (str.to_re "[")) (re.++ ((_ re.loop 0 10) (str.to_re "q")) ((_ re.loop 0 20) (str.to_re "[")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 8) (str.to_re "_`<")) (re.++ ((_ re.loop 5 11) (str.to_re "QiC")) (re.++ ((_ re.loop 3 15) (str.to_re "#)")) ((_ re.loop 0 5) (str.to_re "d{I")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 13) (str.to_re "DS8")) (re.++ ((_ re.loop 5 17) (str.to_re "6%c")) (re.++ ((_ re.loop 4 9) (str.to_re "mt1")) ((_ re.loop 4 5) (str.to_re "H")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 2 14) (str.to_re "?f")) (re.++ ((_ re.loop 3 20) (str.to_re ":oi")) (re.++ ((_ re.loop 2 16) (str.to_re "p")) ((_ re.loop 0 6) (str.to_re "$'@")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
