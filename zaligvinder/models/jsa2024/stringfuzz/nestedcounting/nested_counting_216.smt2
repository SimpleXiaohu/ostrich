(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 20) (str.to_re "g*i")) (re.++ ((_ re.loop 5 11) (str.to_re "$")) (re.++ ((_ re.loop 2 20) (str.to_re "\\N")) ((_ re.loop 3 9) (str.to_re "s")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 7) (str.to_re "=8'")) (re.++ ((_ re.loop 5 6) (str.to_re "!")) (re.++ ((_ re.loop 1 16) (str.to_re "!")) ((_ re.loop 4 10) (str.to_re "f")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 19) (str.to_re "&")) (re.++ ((_ re.loop 2 6) (str.to_re "6")) (re.++ ((_ re.loop 4 7) (str.to_re "w9#")) ((_ re.loop 2 19) (str.to_re "2")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 0 16) (str.to_re "@Z")) (re.++ ((_ re.loop 5 13) (str.to_re "if")) (re.++ ((_ re.loop 1 16) (str.to_re "m")) ((_ re.loop 2 18) (str.to_re "c")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
