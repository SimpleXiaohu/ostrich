(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 6) (str.to_re "7<M")) (re.++ ((_ re.loop 3 7) (str.to_re "0is")) (re.++ ((_ re.loop 2 19) (str.to_re "_?w")) ((_ re.loop 5 19) (str.to_re "$")))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 5 16) (str.to_re "}(H")) (re.++ ((_ re.loop 0 7) (str.to_re ">")) (re.++ ((_ re.loop 3 19) (str.to_re "%S")) ((_ re.loop 0 20) (str.to_re "q@")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 9) (str.to_re "1US")) (re.++ ((_ re.loop 3 8) (str.to_re "EP")) (re.++ ((_ re.loop 5 14) (str.to_re "K")) ((_ re.loop 2 6) (str.to_re "!.")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 2 12) (str.to_re "ZV'")) (re.++ ((_ re.loop 1 16) (str.to_re "c")) (re.++ ((_ re.loop 2 18) (str.to_re "SZ/")) ((_ re.loop 5 15) (str.to_re "]gm")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
