(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 5) (str.to_re "e")) (re.++ ((_ re.loop 3 15) (str.to_re "PF")) (re.++ ((_ re.loop 1 16) (str.to_re "y")) ((_ re.loop 3 6) (str.to_re "[9")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 5) (str.to_re "s6l")) (re.++ ((_ re.loop 2 7) (str.to_re "@rL")) (re.++ ((_ re.loop 0 13) (str.to_re "&P")) ((_ re.loop 4 8) (str.to_re "$a{")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 16) (str.to_re "$")) (re.++ ((_ re.loop 0 7) (str.to_re "7xu")) (re.++ ((_ re.loop 4 11) (str.to_re "<+")) ((_ re.loop 3 5) (str.to_re ">")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 3 8) (str.to_re "luW")) (re.++ ((_ re.loop 4 19) (str.to_re "v")) (re.++ ((_ re.loop 3 17) (str.to_re "\u0022")) ((_ re.loop 1 16) (str.to_re "p4.")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
