(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 2 18) (str.to_re "z3")) (re.++ ((_ re.loop 3 16) (str.to_re "=X")) (re.++ ((_ re.loop 2 19) (str.to_re "|")) ((_ re.loop 3 16) (str.to_re "P")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 6) (str.to_re "Ce")) (re.++ ((_ re.loop 2 15) (str.to_re "DQ<")) (re.++ ((_ re.loop 2 16) (str.to_re "\u0022")) ((_ re.loop 1 14) (str.to_re "R")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 12) (str.to_re "KI#")) (re.++ ((_ re.loop 1 15) (str.to_re "g")) (re.++ ((_ re.loop 5 17) (str.to_re "r:")) ((_ re.loop 3 15) (str.to_re "0K.")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 1 16) (str.to_re "!l")) (re.++ ((_ re.loop 1 15) (str.to_re "e0o")) (re.++ ((_ re.loop 0 18) (str.to_re "17")) ((_ re.loop 2 18) (str.to_re "q")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
