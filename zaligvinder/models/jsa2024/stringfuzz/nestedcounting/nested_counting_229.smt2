(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 7) (str.to_re "T:")) (re.++ ((_ re.loop 0 9) (str.to_re "Z")) (re.++ ((_ re.loop 4 12) (str.to_re "KK")) ((_ re.loop 3 12) (str.to_re "ify")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 6) (str.to_re "X.")) (re.++ ((_ re.loop 5 9) (str.to_re "|)")) (re.++ ((_ re.loop 0 8) (str.to_re "FoV")) ((_ re.loop 5 15) (str.to_re "kTd")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 16) (str.to_re "M")) (re.++ ((_ re.loop 0 5) (str.to_re "v)+")) (re.++ ((_ re.loop 1 9) (str.to_re "Y")) ((_ re.loop 0 12) (str.to_re "HWN")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 4 19) (str.to_re "k")) (re.++ ((_ re.loop 4 16) (str.to_re "|")) (re.++ ((_ re.loop 5 16) (str.to_re "j??")) ((_ re.loop 2 12) (str.to_re "\u0022")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
