(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 18) (str.to_re "N")) (re.++ ((_ re.loop 4 16) (str.to_re "?>")) (re.++ ((_ re.loop 3 6) (str.to_re "d")) ((_ re.loop 2 7) (str.to_re "O1o")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 11) (str.to_re "Hs")) (re.++ ((_ re.loop 3 19) (str.to_re "ms/")) (re.++ ((_ re.loop 4 10) (str.to_re "Y")) ((_ re.loop 5 12) (str.to_re "#9")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 15) (str.to_re "fk")) (re.++ ((_ re.loop 3 5) (str.to_re "fg2")) (re.++ ((_ re.loop 4 11) (str.to_re "/")) ((_ re.loop 0 14) (str.to_re "r")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 4 19) (str.to_re "#gI")) (re.++ ((_ re.loop 3 17) (str.to_re "6~")) (re.++ ((_ re.loop 1 15) (str.to_re "2C")) ((_ re.loop 0 19) (str.to_re "\\wJ")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
