(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 20) (str.to_re "I'N")) (re.++ ((_ re.loop 0 20) (str.to_re "WW")) (re.++ ((_ re.loop 4 20) (str.to_re "5r")) ((_ re.loop 4 12) (str.to_re "@m")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 6) (str.to_re "<X")) (re.++ ((_ re.loop 5 17) (str.to_re "_dy")) (re.++ ((_ re.loop 1 15) (str.to_re "e^y")) ((_ re.loop 1 9) (str.to_re "J")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 10) (str.to_re "-1")) (re.++ ((_ re.loop 4 8) (str.to_re "eq)")) (re.++ ((_ re.loop 3 8) (str.to_re "CW")) ((_ re.loop 2 20) (str.to_re "#-e")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 1 5) (str.to_re ">=L")) (re.++ ((_ re.loop 1 18) (str.to_re ",")) (re.++ ((_ re.loop 3 17) (str.to_re "2")) ((_ re.loop 3 10) (str.to_re "@")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
