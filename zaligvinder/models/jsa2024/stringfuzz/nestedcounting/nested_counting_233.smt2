(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 5 10) (str.to_re "(")) (re.++ ((_ re.loop 5 19) (str.to_re "1U")) (re.++ ((_ re.loop 0 19) (str.to_re "*$")) ((_ re.loop 5 12) (str.to_re "|-")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 12) (str.to_re "W")) (re.++ ((_ re.loop 0 19) (str.to_re ">-")) (re.++ ((_ re.loop 1 11) (str.to_re "5pO")) ((_ re.loop 3 18) (str.to_re "Lj")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 14) (str.to_re "%'")) (re.++ ((_ re.loop 5 11) (str.to_re "4,")) (re.++ ((_ re.loop 1 10) (str.to_re "jq")) ((_ re.loop 0 8) (str.to_re "YqG")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 2 12) (str.to_re "a")) (re.++ ((_ re.loop 2 10) (str.to_re "Ge%")) (re.++ ((_ re.loop 2 7) (str.to_re "\\}T")) ((_ re.loop 0 7) (str.to_re "rf")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
