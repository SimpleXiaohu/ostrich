(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 20) (str.to_re "7X")) (re.++ ((_ re.loop 1 10) (str.to_re "}q]")) (re.++ ((_ re.loop 1 11) (str.to_re "#T%")) ((_ re.loop 1 13) (str.to_re "8$")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 5) (str.to_re "9")) (re.++ ((_ re.loop 1 8) (str.to_re ",")) (re.++ ((_ re.loop 4 19) (str.to_re "v")) ((_ re.loop 0 16) (str.to_re "$")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 10) (str.to_re "~u")) (re.++ ((_ re.loop 4 8) (str.to_re "s")) (re.++ ((_ re.loop 0 18) (str.to_re "?1l")) ((_ re.loop 1 14) (str.to_re "%o,")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 3 10) (str.to_re "=F~")) (re.++ ((_ re.loop 1 18) (str.to_re "tU3")) (re.++ ((_ re.loop 1 12) (str.to_re ">2t")) ((_ re.loop 5 6) (str.to_re "L")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
