(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 17) (str.to_re "T")) (re.++ ((_ re.loop 3 16) (str.to_re "oE")) (re.++ ((_ re.loop 1 14) (str.to_re ":2S")) ((_ re.loop 4 8) (str.to_re "u)")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 9) (str.to_re "bS")) (re.++ ((_ re.loop 0 17) (str.to_re "j")) (re.++ ((_ re.loop 5 11) (str.to_re "*I")) ((_ re.loop 3 6) (str.to_re "vI")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 5) (str.to_re "W")) (re.++ ((_ re.loop 1 9) (str.to_re "OH")) (re.++ ((_ re.loop 4 17) (str.to_re "8")) ((_ re.loop 4 17) (str.to_re "gb")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 5 19) (str.to_re "4")) (re.++ ((_ re.loop 2 12) (str.to_re "?/X")) (re.++ ((_ re.loop 0 14) (str.to_re "|i-")) ((_ re.loop 4 9) (str.to_re ".#V")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
