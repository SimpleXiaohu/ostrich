(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 11) (str.to_re "V")) (re.++ ((_ re.loop 2 10) (str.to_re "<v")) (re.++ ((_ re.loop 1 14) (str.to_re "`}Q")) ((_ re.loop 0 18) (str.to_re "g/")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 11) (str.to_re "5")) (re.++ ((_ re.loop 0 10) (str.to_re "N")) (re.++ ((_ re.loop 5 10) (str.to_re "&Zb")) ((_ re.loop 4 7) (str.to_re "m6(")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 16) (str.to_re "ME(")) (re.++ ((_ re.loop 5 12) (str.to_re "m")) (re.++ ((_ re.loop 1 11) (str.to_re "zZ}")) ((_ re.loop 5 19) (str.to_re "X")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 2 20) (str.to_re "`DC")) (re.++ ((_ re.loop 4 12) (str.to_re "9")) (re.++ ((_ re.loop 0 15) (str.to_re "qL@")) ((_ re.loop 5 10) (str.to_re "0")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
