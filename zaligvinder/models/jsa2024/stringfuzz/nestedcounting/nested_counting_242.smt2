(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 8) (str.to_re "=b{")) (re.++ ((_ re.loop 4 13) (str.to_re "n")) (re.++ ((_ re.loop 3 8) (str.to_re ",.4")) ((_ re.loop 0 19) (str.to_re "^")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 14) (str.to_re "(C8")) (re.++ ((_ re.loop 2 11) (str.to_re "ZJp")) (re.++ ((_ re.loop 1 10) (str.to_re "~x")) ((_ re.loop 2 6) (str.to_re "*!")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 10) (str.to_re "/")) (re.++ ((_ re.loop 1 9) (str.to_re "RN")) (re.++ ((_ re.loop 4 19) (str.to_re "0<c")) ((_ re.loop 3 13) (str.to_re "=")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 3 7) (str.to_re "[|k")) (re.++ ((_ re.loop 2 14) (str.to_re "XF,")) (re.++ ((_ re.loop 2 15) (str.to_re "]p")) ((_ re.loop 4 13) (str.to_re "Yf")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
