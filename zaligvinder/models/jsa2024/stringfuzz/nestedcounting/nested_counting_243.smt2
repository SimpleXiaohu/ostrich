(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 7) (str.to_re "lzl")) (re.++ ((_ re.loop 5 14) (str.to_re "mF")) (re.++ ((_ re.loop 3 9) (str.to_re "1.")) ((_ re.loop 4 14) (str.to_re ";")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 13) (str.to_re "A?@")) (re.++ ((_ re.loop 3 13) (str.to_re "-P}")) (re.++ ((_ re.loop 1 16) (str.to_re "AQ")) ((_ re.loop 1 5) (str.to_re "U")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 7) (str.to_re "YJM")) (re.++ ((_ re.loop 1 14) (str.to_re "r,")) (re.++ ((_ re.loop 5 13) (str.to_re "]N-")) ((_ re.loop 2 8) (str.to_re "$'")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 3 15) (str.to_re "gb")) (re.++ ((_ re.loop 5 17) (str.to_re "Kp}")) (re.++ ((_ re.loop 0 8) (str.to_re "G]]")) ((_ re.loop 4 10) (str.to_re "UUW")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
