(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 13) (str.to_re "EU")) (re.++ ((_ re.loop 5 20) (str.to_re "P$")) (re.++ ((_ re.loop 1 5) (str.to_re ";")) ((_ re.loop 0 19) (str.to_re ")")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 19) (str.to_re "2")) (re.++ ((_ re.loop 4 11) (str.to_re "t(R")) (re.++ ((_ re.loop 0 7) (str.to_re "B")) ((_ re.loop 3 16) (str.to_re "\\(5")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 7) (str.to_re "i")) (re.++ ((_ re.loop 4 18) (str.to_re "7")) (re.++ ((_ re.loop 3 10) (str.to_re "Ov")) ((_ re.loop 0 7) (str.to_re "`")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 2 6) (str.to_re "?")) (re.++ ((_ re.loop 3 17) (str.to_re "P")) (re.++ ((_ re.loop 5 7) (str.to_re "RW")) ((_ re.loop 2 8) (str.to_re "45")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
