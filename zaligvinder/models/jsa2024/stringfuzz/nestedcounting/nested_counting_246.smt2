(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 19) (str.to_re "X")) (re.++ ((_ re.loop 5 16) (str.to_re "1")) (re.++ ((_ re.loop 1 15) (str.to_re "+")) ((_ re.loop 5 19) (str.to_re "lP")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 1 14) (str.to_re "d%N")) (re.++ ((_ re.loop 5 18) (str.to_re ")\u00224")) (re.++ ((_ re.loop 3 17) (str.to_re "1")) ((_ re.loop 0 18) (str.to_re "c,")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 11) (str.to_re "9\u0022m")) (re.++ ((_ re.loop 2 15) (str.to_re "|5d")) (re.++ ((_ re.loop 5 16) (str.to_re "Gp*")) ((_ re.loop 1 19) (str.to_re ")=")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 1 11) (str.to_re "6")) (re.++ ((_ re.loop 4 13) (str.to_re "P")) (re.++ ((_ re.loop 5 10) (str.to_re "UsG")) ((_ re.loop 0 6) (str.to_re "j-,")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
