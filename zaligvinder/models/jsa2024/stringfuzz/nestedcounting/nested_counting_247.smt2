(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 9) (str.to_re "OYz")) (re.++ ((_ re.loop 0 6) (str.to_re "4L")) (re.++ ((_ re.loop 1 9) (str.to_re "E")) ((_ re.loop 3 12) (str.to_re "9\u0022")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 5 14) (str.to_re "qG")) (re.++ ((_ re.loop 1 12) (str.to_re "94")) (re.++ ((_ re.loop 2 14) (str.to_re "t%i")) ((_ re.loop 4 17) (str.to_re "F")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 5 5) (str.to_re "x%b")) (re.++ ((_ re.loop 5 17) (str.to_re "|G]")) (re.++ ((_ re.loop 1 13) (str.to_re "x")) ((_ re.loop 3 16) (str.to_re "Ke")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 0 19) (str.to_re "/")) (re.++ ((_ re.loop 3 15) (str.to_re "zpF")) (re.++ ((_ re.loop 4 16) (str.to_re "DP,")) ((_ re.loop 2 18) (str.to_re "w")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
