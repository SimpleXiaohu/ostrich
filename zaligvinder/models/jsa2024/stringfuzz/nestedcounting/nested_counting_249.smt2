(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 16) (str.to_re "\\/)")) (re.++ ((_ re.loop 2 9) (str.to_re "&pc")) (re.++ ((_ re.loop 5 12) (str.to_re "*KZ")) ((_ re.loop 4 15) (str.to_re "|+D")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 9) (str.to_re ".H")) (re.++ ((_ re.loop 3 14) (str.to_re "dq")) (re.++ ((_ re.loop 2 8) (str.to_re "R#")) ((_ re.loop 0 6) (str.to_re "k")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 1 19) (str.to_re "w")) (re.++ ((_ re.loop 1 13) (str.to_re "}")) (re.++ ((_ re.loop 4 12) (str.to_re "OM")) ((_ re.loop 0 5) (str.to_re "`")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 5 7) (str.to_re "a1'")) (re.++ ((_ re.loop 5 19) (str.to_re "0P")) (re.++ ((_ re.loop 3 5) (str.to_re "@!")) ((_ re.loop 4 18) (str.to_re "R*")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
