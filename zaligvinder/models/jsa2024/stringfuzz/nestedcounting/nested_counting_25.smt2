(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 16) (str.to_re "]")) (re.++ ((_ re.loop 3 6) (str.to_re "kR")) (re.++ ((_ re.loop 0 8) (str.to_re "A")) ((_ re.loop 2 10) (str.to_re "9")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 8) (str.to_re "$")) (re.++ ((_ re.loop 3 7) (str.to_re "A>u")) (re.++ ((_ re.loop 4 14) (str.to_re "/")) ((_ re.loop 2 12) (str.to_re "!")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 15) (str.to_re "D3")) (re.++ ((_ re.loop 0 5) (str.to_re ";q")) (re.++ ((_ re.loop 1 8) (str.to_re "@&j")) ((_ re.loop 0 17) (str.to_re "Ch")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 1 19) (str.to_re "{")) (re.++ ((_ re.loop 4 8) (str.to_re "*w")) (re.++ ((_ re.loop 0 15) (str.to_re "=N")) ((_ re.loop 3 17) (str.to_re "PzN")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
