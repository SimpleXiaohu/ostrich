(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 8) (str.to_re ".+3")) (re.++ ((_ re.loop 5 5) (str.to_re "zL")) (re.++ ((_ re.loop 2 14) (str.to_re "h")) ((_ re.loop 5 9) (str.to_re "kj|")))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 5 19) (str.to_re "Y")) (re.++ ((_ re.loop 0 20) (str.to_re "W(")) (re.++ ((_ re.loop 3 16) (str.to_re "^")) ((_ re.loop 1 15) (str.to_re "y")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 19) (str.to_re "LrP")) (re.++ ((_ re.loop 0 11) (str.to_re "oar")) (re.++ ((_ re.loop 1 15) (str.to_re "F")) ((_ re.loop 2 11) (str.to_re "!f,")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 4 6) (str.to_re "8")) (re.++ ((_ re.loop 5 6) (str.to_re "w&m")) (re.++ ((_ re.loop 1 6) (str.to_re "%")) ((_ re.loop 5 15) (str.to_re "dH")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
