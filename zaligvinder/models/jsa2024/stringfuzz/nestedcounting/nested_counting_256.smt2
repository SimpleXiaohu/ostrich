(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 8) (str.to_re "z}")) (re.++ ((_ re.loop 2 16) (str.to_re "?tG")) (re.++ ((_ re.loop 1 7) (str.to_re "($[")) ((_ re.loop 0 15) (str.to_re "h^|")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 1 8) (str.to_re "'#")) (re.++ ((_ re.loop 4 18) (str.to_re "o")) (re.++ ((_ re.loop 3 7) (str.to_re "Y<B")) ((_ re.loop 5 17) (str.to_re "/LI")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 15) (str.to_re "V.")) (re.++ ((_ re.loop 4 12) (str.to_re "V1")) (re.++ ((_ re.loop 2 10) (str.to_re "|T")) ((_ re.loop 4 9) (str.to_re "dWl")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 5 20) (str.to_re "\\[")) (re.++ ((_ re.loop 0 16) (str.to_re "A[c")) (re.++ ((_ re.loop 2 16) (str.to_re "D")) ((_ re.loop 5 17) (str.to_re "w")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
