(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 1 11) (str.to_re "d")) (re.++ ((_ re.loop 4 16) (str.to_re "T<")) (re.++ ((_ re.loop 4 15) (str.to_re "Z")) ((_ re.loop 4 15) (str.to_re "Ot")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 15) (str.to_re "wK")) (re.++ ((_ re.loop 3 9) (str.to_re "EA!")) (re.++ ((_ re.loop 2 15) (str.to_re "x")) ((_ re.loop 5 15) (str.to_re "m")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 11) (str.to_re "p-")) (re.++ ((_ re.loop 0 7) (str.to_re "3q}")) (re.++ ((_ re.loop 3 5) (str.to_re "GaS")) ((_ re.loop 1 12) (str.to_re "gcb")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 4 18) (str.to_re "u")) (re.++ ((_ re.loop 4 17) (str.to_re "1f&")) (re.++ ((_ re.loop 4 13) (str.to_re "F-")) ((_ re.loop 0 14) (str.to_re "O")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
