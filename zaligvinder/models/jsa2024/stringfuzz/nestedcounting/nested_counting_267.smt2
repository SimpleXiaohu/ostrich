(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 11) (str.to_re ".os")) (re.++ ((_ re.loop 0 12) (str.to_re "=")) (re.++ ((_ re.loop 1 10) (str.to_re "6NY")) ((_ re.loop 0 9) (str.to_re "B~c")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 19) (str.to_re "E!r")) (re.++ ((_ re.loop 1 13) (str.to_re "0")) (re.++ ((_ re.loop 0 6) (str.to_re "=G")) ((_ re.loop 3 6) (str.to_re "0t")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 14) (str.to_re "/c")) (re.++ ((_ re.loop 2 7) (str.to_re "3o")) (re.++ ((_ re.loop 1 9) (str.to_re "u'")) ((_ re.loop 2 13) (str.to_re "E")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 4 17) (str.to_re ",%b")) (re.++ ((_ re.loop 3 20) (str.to_re "u\\^")) (re.++ ((_ re.loop 1 5) (str.to_re "2")) ((_ re.loop 3 8) (str.to_re "Ni")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
