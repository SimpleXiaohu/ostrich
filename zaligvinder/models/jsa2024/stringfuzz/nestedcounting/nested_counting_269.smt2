(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 4 19) (str.to_re "/U`")) (re.++ ((_ re.loop 4 8) (str.to_re "K/[")) (re.++ ((_ re.loop 3 9) (str.to_re "<@")) ((_ re.loop 4 19) (str.to_re "hm")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 15) (str.to_re "+.]")) (re.++ ((_ re.loop 2 16) (str.to_re "Z%)")) (re.++ ((_ re.loop 0 7) (str.to_re "U")) ((_ re.loop 2 9) (str.to_re "M")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 7) (str.to_re ")y1")) (re.++ ((_ re.loop 0 11) (str.to_re "W")) (re.++ ((_ re.loop 4 9) (str.to_re "0(:")) ((_ re.loop 4 13) (str.to_re "p.")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 2 16) (str.to_re "k")) (re.++ ((_ re.loop 0 17) (str.to_re "x,")) (re.++ ((_ re.loop 3 20) (str.to_re "0a")) ((_ re.loop 2 16) (str.to_re "}")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
