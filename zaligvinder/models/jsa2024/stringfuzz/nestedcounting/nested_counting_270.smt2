(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 5) (str.to_re "b]")) (re.++ ((_ re.loop 4 9) (str.to_re "}")) (re.++ ((_ re.loop 5 19) (str.to_re "2#Z")) ((_ re.loop 1 16) (str.to_re "z;")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 4 9) (str.to_re "Q/")) (re.++ ((_ re.loop 1 17) (str.to_re "h`")) (re.++ ((_ re.loop 4 7) (str.to_re "$'|")) ((_ re.loop 5 19) (str.to_re "2")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 17) (str.to_re "W9o")) (re.++ ((_ re.loop 3 13) (str.to_re "7")) (re.++ ((_ re.loop 0 15) (str.to_re "()q")) ((_ re.loop 5 10) (str.to_re "}f<")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 2 13) (str.to_re "E")) (re.++ ((_ re.loop 1 9) (str.to_re "J`}")) (re.++ ((_ re.loop 1 17) (str.to_re "t")) ((_ re.loop 4 18) (str.to_re "O")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
