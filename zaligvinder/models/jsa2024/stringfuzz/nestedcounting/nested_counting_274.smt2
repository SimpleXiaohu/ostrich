(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 9) (str.to_re "|4]")) (re.++ ((_ re.loop 1 11) (str.to_re "1")) (re.++ ((_ re.loop 5 15) (str.to_re "E!")) ((_ re.loop 0 11) (str.to_re "vNV")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 11) (str.to_re "2sw")) (re.++ ((_ re.loop 1 14) (str.to_re "9ee")) (re.++ ((_ re.loop 3 16) (str.to_re "m")) ((_ re.loop 2 6) (str.to_re "eNk")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 9) (str.to_re "Y")) (re.++ ((_ re.loop 5 7) (str.to_re "_Bu")) (re.++ ((_ re.loop 1 12) (str.to_re "lS")) ((_ re.loop 0 13) (str.to_re ")7")))))) ((_ re.loop 0 1) (re.++ ((_ re.loop 0 15) (str.to_re "fo")) (re.++ ((_ re.loop 2 9) (str.to_re "d")) (re.++ ((_ re.loop 0 6) (str.to_re "5")) ((_ re.loop 3 13) (str.to_re "=DY")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
