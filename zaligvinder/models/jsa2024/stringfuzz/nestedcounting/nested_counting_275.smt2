(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 9) (str.to_re "_t")) (re.++ ((_ re.loop 1 10) (str.to_re "7q")) (re.++ ((_ re.loop 2 8) (str.to_re "1Y7")) ((_ re.loop 3 5) (str.to_re "K")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 5 17) (str.to_re "`<")) (re.++ ((_ re.loop 3 15) (str.to_re "z~c")) (re.++ ((_ re.loop 2 15) (str.to_re "~")) ((_ re.loop 4 14) (str.to_re "1c3")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 14) (str.to_re "BF")) (re.++ ((_ re.loop 4 9) (str.to_re "Nxc")) (re.++ ((_ re.loop 3 15) (str.to_re "u")) ((_ re.loop 5 10) (str.to_re "'")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 4 15) (str.to_re "+;")) (re.++ ((_ re.loop 5 7) (str.to_re "Huj")) (re.++ ((_ re.loop 1 10) (str.to_re "Tg")) ((_ re.loop 2 14) (str.to_re "e")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
