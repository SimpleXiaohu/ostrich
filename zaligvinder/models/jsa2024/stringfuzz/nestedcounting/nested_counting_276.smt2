(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 17) (str.to_re "0\\\u0022")) (re.++ ((_ re.loop 0 19) (str.to_re "I")) (re.++ ((_ re.loop 2 9) (str.to_re "0vI")) ((_ re.loop 4 13) (str.to_re "l<")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 11) (str.to_re "cu")) (re.++ ((_ re.loop 3 16) (str.to_re "YO.")) (re.++ ((_ re.loop 4 18) (str.to_re "JHz")) ((_ re.loop 0 19) (str.to_re "_bC")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 5 6) (str.to_re "j")) (re.++ ((_ re.loop 1 9) (str.to_re "w^[")) (re.++ ((_ re.loop 1 5) (str.to_re "x")) ((_ re.loop 3 20) (str.to_re "Nz*")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 4 18) (str.to_re "N<F")) (re.++ ((_ re.loop 0 14) (str.to_re "B")) (re.++ ((_ re.loop 5 5) (str.to_re ",,}")) ((_ re.loop 1 11) (str.to_re "bY")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
