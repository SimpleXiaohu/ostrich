(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 19) (str.to_re ":")) (re.++ ((_ re.loop 5 8) (str.to_re "u+P")) (re.++ ((_ re.loop 3 17) (str.to_re "Q;")) ((_ re.loop 4 12) (str.to_re "R+")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 8) (str.to_re "1M1")) (re.++ ((_ re.loop 3 10) (str.to_re "(")) (re.++ ((_ re.loop 4 11) (str.to_re "cG")) ((_ re.loop 4 5) (str.to_re "e9")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 11) (str.to_re "{k")) (re.++ ((_ re.loop 1 10) (str.to_re "0")) (re.++ ((_ re.loop 1 17) (str.to_re "x")) ((_ re.loop 2 18) (str.to_re "0S$")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 0 20) (str.to_re "vl")) (re.++ ((_ re.loop 5 18) (str.to_re "D%[")) (re.++ ((_ re.loop 4 19) (str.to_re "`+N")) ((_ re.loop 0 15) (str.to_re "o^")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
