(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 6) (str.to_re "Yn")) (re.++ ((_ re.loop 2 7) (str.to_re "U")) (re.++ ((_ re.loop 3 7) (str.to_re "b\u0022N")) ((_ re.loop 4 13) (str.to_re ",m@")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 11) (str.to_re "MMb")) (re.++ ((_ re.loop 3 19) (str.to_re "f")) (re.++ ((_ re.loop 0 16) (str.to_re "f")) ((_ re.loop 1 20) (str.to_re "kmG")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 17) (str.to_re ":j")) (re.++ ((_ re.loop 2 6) (str.to_re "o1o")) (re.++ ((_ re.loop 1 11) (str.to_re "I")) ((_ re.loop 1 18) (str.to_re "`P")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 5 8) (str.to_re "A}\\")) (re.++ ((_ re.loop 4 10) (str.to_re "T")) (re.++ ((_ re.loop 3 14) (str.to_re "Y")) ((_ re.loop 1 12) (str.to_re "T_")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
