(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 19) (str.to_re "hzM")) (re.++ ((_ re.loop 4 8) (str.to_re "}Zx")) (re.++ ((_ re.loop 4 12) (str.to_re "=:\u0022")) ((_ re.loop 0 11) (str.to_re "{$")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 16) (str.to_re "^")) (re.++ ((_ re.loop 5 11) (str.to_re "s")) (re.++ ((_ re.loop 5 6) (str.to_re ";")) ((_ re.loop 5 15) (str.to_re "L7")))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 1 18) (str.to_re "E")) (re.++ ((_ re.loop 2 7) (str.to_re "|o")) (re.++ ((_ re.loop 3 9) (str.to_re "3M")) ((_ re.loop 1 18) (str.to_re "M|")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 5 11) (str.to_re "2")) (re.++ ((_ re.loop 1 13) (str.to_re "9%")) (re.++ ((_ re.loop 0 6) (str.to_re "IN")) ((_ re.loop 2 15) (str.to_re "iw")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
