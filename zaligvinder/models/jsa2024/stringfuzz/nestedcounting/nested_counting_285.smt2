(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 18) (str.to_re "P:")) (re.++ ((_ re.loop 4 10) (str.to_re "{r@")) (re.++ ((_ re.loop 0 5) (str.to_re "|jk")) ((_ re.loop 4 17) (str.to_re ".h")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 16) (str.to_re "wO")) (re.++ ((_ re.loop 4 10) (str.to_re "E#s")) (re.++ ((_ re.loop 0 8) (str.to_re "e")) ((_ re.loop 0 9) (str.to_re "Dp")))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 2 7) (str.to_re "`T")) (re.++ ((_ re.loop 2 18) (str.to_re "<A")) (re.++ ((_ re.loop 1 18) (str.to_re ")z9")) ((_ re.loop 2 5) (str.to_re ")")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 4 18) (str.to_re "S")) (re.++ ((_ re.loop 3 18) (str.to_re "DM")) (re.++ ((_ re.loop 3 8) (str.to_re "5")) ((_ re.loop 4 13) (str.to_re "w")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
