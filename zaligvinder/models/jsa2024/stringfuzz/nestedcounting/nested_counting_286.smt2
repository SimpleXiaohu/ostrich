(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 9) (str.to_re "Ra")) (re.++ ((_ re.loop 4 15) (str.to_re "Y")) (re.++ ((_ re.loop 2 19) (str.to_re "&u^")) ((_ re.loop 2 10) (str.to_re "fWT")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 4 18) (str.to_re "-~")) (re.++ ((_ re.loop 1 11) (str.to_re "p")) (re.++ ((_ re.loop 5 14) (str.to_re "XEZ")) ((_ re.loop 2 16) (str.to_re "2XC")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 19) (str.to_re "g")) (re.++ ((_ re.loop 0 14) (str.to_re "3&")) (re.++ ((_ re.loop 3 12) (str.to_re "/")) ((_ re.loop 3 14) (str.to_re "=")))))) ((_ re.loop 1 1) (re.++ ((_ re.loop 4 17) (str.to_re "\u0022:l")) (re.++ ((_ re.loop 0 7) (str.to_re "_")) (re.++ ((_ re.loop 4 14) (str.to_re "{KI")) ((_ re.loop 1 7) (str.to_re "+oA")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
