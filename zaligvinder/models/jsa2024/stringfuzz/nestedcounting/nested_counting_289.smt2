(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 5 19) (str.to_re "'@\u0022")) (re.++ ((_ re.loop 5 15) (str.to_re "BX")) (re.++ ((_ re.loop 2 17) (str.to_re "Mml")) ((_ re.loop 0 19) (str.to_re "8r")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 14) (str.to_re "r")) (re.++ ((_ re.loop 4 19) (str.to_re "0=U")) (re.++ ((_ re.loop 4 17) (str.to_re "J")) ((_ re.loop 0 13) (str.to_re "L")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 14) (str.to_re "rmN")) (re.++ ((_ re.loop 5 10) (str.to_re "!")) (re.++ ((_ re.loop 0 6) (str.to_re "/")) ((_ re.loop 4 17) (str.to_re "U")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 3 5) (str.to_re "=;")) (re.++ ((_ re.loop 0 17) (str.to_re "^")) (re.++ ((_ re.loop 3 13) (str.to_re "o~")) ((_ re.loop 4 10) (str.to_re "?")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
