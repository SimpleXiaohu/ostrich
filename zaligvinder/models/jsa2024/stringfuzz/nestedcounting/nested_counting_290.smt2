(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 6) (str.to_re "+")) (re.++ ((_ re.loop 0 19) (str.to_re "E")) (re.++ ((_ re.loop 1 6) (str.to_re "q")) ((_ re.loop 4 8) (str.to_re "@=")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 20) (str.to_re "u")) (re.++ ((_ re.loop 5 5) (str.to_re "Mt")) (re.++ ((_ re.loop 2 15) (str.to_re "R")) ((_ re.loop 5 9) (str.to_re "'8|")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 15) (str.to_re "rhr")) (re.++ ((_ re.loop 0 15) (str.to_re "7*f")) (re.++ ((_ re.loop 3 9) (str.to_re "y")) ((_ re.loop 3 8) (str.to_re "^T")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 2 13) (str.to_re ">'")) (re.++ ((_ re.loop 0 5) (str.to_re "pr")) (re.++ ((_ re.loop 4 15) (str.to_re "@")) ((_ re.loop 3 20) (str.to_re "N)O")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
