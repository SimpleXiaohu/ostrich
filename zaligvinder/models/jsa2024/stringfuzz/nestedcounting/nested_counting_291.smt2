(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 17) (str.to_re "&+)")) (re.++ ((_ re.loop 3 5) (str.to_re "j")) (re.++ ((_ re.loop 0 8) (str.to_re "6[|")) ((_ re.loop 0 9) (str.to_re "|")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 1 13) (str.to_re "ka")) (re.++ ((_ re.loop 1 5) (str.to_re "^+}")) (re.++ ((_ re.loop 3 7) (str.to_re "FF")) ((_ re.loop 1 6) (str.to_re ".^")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 13) (str.to_re ">")) (re.++ ((_ re.loop 0 10) (str.to_re "q")) (re.++ ((_ re.loop 2 10) (str.to_re "U")) ((_ re.loop 2 8) (str.to_re "pAA")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 0 15) (str.to_re "=")) (re.++ ((_ re.loop 5 7) (str.to_re "&p")) (re.++ ((_ re.loop 1 11) (str.to_re "4'")) ((_ re.loop 1 13) (str.to_re ")o")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
