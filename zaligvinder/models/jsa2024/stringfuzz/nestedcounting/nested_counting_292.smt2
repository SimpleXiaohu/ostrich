(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 7) (str.to_re "TT")) (re.++ ((_ re.loop 2 8) (str.to_re "eR^")) (re.++ ((_ re.loop 5 18) (str.to_re "b.P")) ((_ re.loop 1 19) (str.to_re "D:B")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 14) (str.to_re "cG")) (re.++ ((_ re.loop 2 13) (str.to_re "z")) (re.++ ((_ re.loop 1 8) (str.to_re "(")) ((_ re.loop 0 11) (str.to_re "F")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 12) (str.to_re "3")) (re.++ ((_ re.loop 5 18) (str.to_re "R")) (re.++ ((_ re.loop 4 20) (str.to_re "8G")) ((_ re.loop 1 13) (str.to_re "r?")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 2 8) (str.to_re "h")) (re.++ ((_ re.loop 3 20) (str.to_re ">.")) (re.++ ((_ re.loop 5 17) (str.to_re "4")) ((_ re.loop 4 20) (str.to_re "v,u")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
