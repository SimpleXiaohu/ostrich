(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 8) (str.to_re "H0t")) (re.++ ((_ re.loop 4 13) (str.to_re "u")) (re.++ ((_ re.loop 1 10) (str.to_re "2")) ((_ re.loop 4 10) (str.to_re "9KP")))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 1 19) (str.to_re "1")) (re.++ ((_ re.loop 0 7) (str.to_re "8O")) (re.++ ((_ re.loop 2 8) (str.to_re "2,P")) ((_ re.loop 5 19) (str.to_re "a*>")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 0 12) (str.to_re "*")) (re.++ ((_ re.loop 0 8) (str.to_re "/Z")) (re.++ ((_ re.loop 2 17) (str.to_re "p%w")) ((_ re.loop 1 18) (str.to_re "BFH")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 4 9) (str.to_re "qz")) (re.++ ((_ re.loop 1 7) (str.to_re "I")) (re.++ ((_ re.loop 4 19) (str.to_re "']")) ((_ re.loop 1 17) (str.to_re ".")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
