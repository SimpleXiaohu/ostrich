(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 9) (str.to_re "TM")) (re.++ ((_ re.loop 0 14) (str.to_re "#")) (re.++ ((_ re.loop 1 5) (str.to_re "?")) ((_ re.loop 2 12) (str.to_re "j")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 5) (str.to_re "9")) (re.++ ((_ re.loop 1 16) (str.to_re "Rz")) (re.++ ((_ re.loop 4 7) (str.to_re "p_")) ((_ re.loop 2 16) (str.to_re "TS")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 2 7) (str.to_re "ebK")) (re.++ ((_ re.loop 4 13) (str.to_re "k}")) (re.++ ((_ re.loop 3 12) (str.to_re "1")) ((_ re.loop 5 11) (str.to_re "3")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 3 13) (str.to_re "1")) (re.++ ((_ re.loop 0 18) (str.to_re "F")) (re.++ ((_ re.loop 5 12) (str.to_re "wB")) ((_ re.loop 5 7) (str.to_re "7")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
