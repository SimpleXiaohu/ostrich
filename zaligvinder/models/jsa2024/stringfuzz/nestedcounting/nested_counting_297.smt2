(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 14) (str.to_re "D$")) (re.++ ((_ re.loop 1 7) (str.to_re "G")) (re.++ ((_ re.loop 1 11) (str.to_re "Xv")) ((_ re.loop 3 6) (str.to_re "IGl")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 4 6) (str.to_re "!vR")) (re.++ ((_ re.loop 5 19) (str.to_re ")n'")) (re.++ ((_ re.loop 5 18) (str.to_re "F")) ((_ re.loop 5 6) (str.to_re "D,<")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 8) (str.to_re "Bz")) (re.++ ((_ re.loop 1 17) (str.to_re "cM")) (re.++ ((_ re.loop 5 5) (str.to_re "\\")) ((_ re.loop 1 20) (str.to_re "}")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 2 17) (str.to_re "P-")) (re.++ ((_ re.loop 0 6) (str.to_re "Tj")) (re.++ ((_ re.loop 0 8) (str.to_re "5#F")) ((_ re.loop 3 7) (str.to_re "$g-")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
