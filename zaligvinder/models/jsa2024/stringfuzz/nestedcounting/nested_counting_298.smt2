(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 8) (str.to_re "{e")) (re.++ ((_ re.loop 2 12) (str.to_re "\\`E")) (re.++ ((_ re.loop 5 11) (str.to_re ",'}")) ((_ re.loop 4 18) (str.to_re "d")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 15) (str.to_re "_")) (re.++ ((_ re.loop 5 6) (str.to_re "x$")) (re.++ ((_ re.loop 0 6) (str.to_re "=;%")) ((_ re.loop 2 12) (str.to_re "C!")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 3 6) (str.to_re "j~")) (re.++ ((_ re.loop 5 7) (str.to_re "+2")) (re.++ ((_ re.loop 3 20) (str.to_re "fa")) ((_ re.loop 1 8) (str.to_re "P")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 1 20) (str.to_re "$")) (re.++ ((_ re.loop 1 8) (str.to_re "%]B")) (re.++ ((_ re.loop 5 12) (str.to_re "$dc")) ((_ re.loop 4 12) (str.to_re "!\u0022")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
