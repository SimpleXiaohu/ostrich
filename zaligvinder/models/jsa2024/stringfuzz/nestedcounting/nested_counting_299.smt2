(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 2 17) (str.to_re "4=.")) (re.++ ((_ re.loop 5 10) (str.to_re "ut")) (re.++ ((_ re.loop 5 9) (str.to_re "v")) ((_ re.loop 1 12) (str.to_re "{1\\")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 15) (str.to_re "j2A")) (re.++ ((_ re.loop 5 16) (str.to_re "Q%")) (re.++ ((_ re.loop 0 14) (str.to_re "5!)")) ((_ re.loop 3 12) (str.to_re "\u0022C")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 3 12) (str.to_re "D+7")) (re.++ ((_ re.loop 3 6) (str.to_re "wr=")) (re.++ ((_ re.loop 2 9) (str.to_re "7")) ((_ re.loop 4 12) (str.to_re "ccD")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 5 19) (str.to_re "LJ$")) (re.++ ((_ re.loop 3 16) (str.to_re "M'y")) (re.++ ((_ re.loop 3 17) (str.to_re "r2")) ((_ re.loop 3 17) (str.to_re "}\\")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
