(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 19) (str.to_re "$")) (re.++ ((_ re.loop 1 12) (str.to_re "`T")) (re.++ ((_ re.loop 5 15) (str.to_re "fp")) ((_ re.loop 4 19) (str.to_re "/`5")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 15) (str.to_re "@pd")) (re.++ ((_ re.loop 2 7) (str.to_re "q")) (re.++ ((_ re.loop 4 11) (str.to_re ")n")) ((_ re.loop 3 19) (str.to_re "[&;")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 12) (str.to_re "$")) (re.++ ((_ re.loop 1 5) (str.to_re ":p_")) (re.++ ((_ re.loop 2 17) (str.to_re "Y{")) ((_ re.loop 2 6) (str.to_re "x!U")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 1 7) (str.to_re "g{")) (re.++ ((_ re.loop 2 18) (str.to_re "4")) (re.++ ((_ re.loop 5 5) (str.to_re "~b")) ((_ re.loop 2 12) (str.to_re "Zyj")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
