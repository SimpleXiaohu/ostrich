(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 6) (str.to_re "<J")) (re.++ ((_ re.loop 2 9) (str.to_re "h")) (re.++ ((_ re.loop 2 20) (str.to_re "|")) ((_ re.loop 0 13) (str.to_re "9")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 17) (str.to_re "|o")) (re.++ ((_ re.loop 5 17) (str.to_re "ht")) (re.++ ((_ re.loop 3 10) (str.to_re "UK7")) ((_ re.loop 3 10) (str.to_re "p")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 20) (str.to_re "WQ")) (re.++ ((_ re.loop 5 11) (str.to_re "~N")) (re.++ ((_ re.loop 3 15) (str.to_re "Z^^")) ((_ re.loop 3 18) (str.to_re "9^")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 3 15) (str.to_re "Uk(")) (re.++ ((_ re.loop 0 10) (str.to_re "i?")) (re.++ ((_ re.loop 3 15) (str.to_re "vl")) ((_ re.loop 5 10) (str.to_re "jId")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
