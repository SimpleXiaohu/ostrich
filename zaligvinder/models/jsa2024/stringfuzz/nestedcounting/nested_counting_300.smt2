(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 11) (str.to_re "Kb:")) (re.++ ((_ re.loop 0 20) (str.to_re "+F>")) (re.++ ((_ re.loop 1 19) (str.to_re "HmL")) ((_ re.loop 4 5) (str.to_re "w(")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 17) (str.to_re "V>")) (re.++ ((_ re.loop 4 6) (str.to_re "J")) (re.++ ((_ re.loop 3 5) (str.to_re ":")) ((_ re.loop 1 15) (str.to_re "8")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 16) (str.to_re "jr")) (re.++ ((_ re.loop 2 18) (str.to_re "DL")) (re.++ ((_ re.loop 2 18) (str.to_re "4^")) ((_ re.loop 0 10) (str.to_re "6Bf")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 1 11) (str.to_re "Cz")) (re.++ ((_ re.loop 2 12) (str.to_re "7?")) (re.++ ((_ re.loop 3 17) (str.to_re "kJ'")) ((_ re.loop 1 6) (str.to_re "5")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
