(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 5) (str.to_re "j")) (re.++ ((_ re.loop 0 12) (str.to_re "5<A")) (re.++ ((_ re.loop 5 9) (str.to_re "l=^")) ((_ re.loop 1 14) (str.to_re "m")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 12) (str.to_re "E`=")) (re.++ ((_ re.loop 4 8) (str.to_re "\\FI")) (re.++ ((_ re.loop 1 11) (str.to_re "%X")) ((_ re.loop 0 11) (str.to_re "*=Z")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 12) (str.to_re "J!V")) (re.++ ((_ re.loop 4 12) (str.to_re ">")) (re.++ ((_ re.loop 0 9) (str.to_re "(r3")) ((_ re.loop 5 15) (str.to_re "\\g'")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 1 15) (str.to_re "ZS")) (re.++ ((_ re.loop 2 20) (str.to_re "m")) (re.++ ((_ re.loop 0 11) (str.to_re "T|")) ((_ re.loop 2 18) (str.to_re "6_i")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
