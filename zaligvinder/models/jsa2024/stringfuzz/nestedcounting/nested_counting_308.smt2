(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 9) (str.to_re "Kik")) (re.++ ((_ re.loop 0 15) (str.to_re "d")) (re.++ ((_ re.loop 4 11) (str.to_re "&")) ((_ re.loop 0 5) (str.to_re "M8C")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 7) (str.to_re "|")) (re.++ ((_ re.loop 3 12) (str.to_re "{")) (re.++ ((_ re.loop 4 19) (str.to_re "`")) ((_ re.loop 2 12) (str.to_re "+:+")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 3 12) (str.to_re "?e?")) (re.++ ((_ re.loop 1 19) (str.to_re "n%R")) (re.++ ((_ re.loop 1 14) (str.to_re "(NV")) ((_ re.loop 0 10) (str.to_re "A")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 3 18) (str.to_re ")")) (re.++ ((_ re.loop 2 17) (str.to_re "i$)")) (re.++ ((_ re.loop 4 8) (str.to_re "SH")) ((_ re.loop 5 13) (str.to_re "9")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
