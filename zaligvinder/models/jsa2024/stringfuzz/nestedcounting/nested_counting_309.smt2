(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 17) (str.to_re "D")) (re.++ ((_ re.loop 0 20) (str.to_re "v")) (re.++ ((_ re.loop 3 17) (str.to_re "m")) ((_ re.loop 5 6) (str.to_re "T")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 18) (str.to_re ";WN")) (re.++ ((_ re.loop 4 6) (str.to_re "a")) (re.++ ((_ re.loop 4 6) (str.to_re "XR")) ((_ re.loop 3 20) (str.to_re "}")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 5) (str.to_re "z")) (re.++ ((_ re.loop 1 8) (str.to_re "+")) (re.++ ((_ re.loop 2 9) (str.to_re ".")) ((_ re.loop 3 13) (str.to_re "!")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 0 16) (str.to_re "E")) (re.++ ((_ re.loop 1 7) (str.to_re "w")) (re.++ ((_ re.loop 5 19) (str.to_re "|5")) ((_ re.loop 4 8) (str.to_re "VY")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
