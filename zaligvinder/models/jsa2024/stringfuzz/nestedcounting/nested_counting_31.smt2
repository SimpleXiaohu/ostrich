(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 15) (str.to_re "q")) (re.++ ((_ re.loop 1 13) (str.to_re "Cl9")) (re.++ ((_ re.loop 1 6) (str.to_re "x")) ((_ re.loop 5 6) (str.to_re "-P&")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 9) (str.to_re "D")) (re.++ ((_ re.loop 2 18) (str.to_re "L")) (re.++ ((_ re.loop 4 12) (str.to_re "qj?")) ((_ re.loop 2 6) (str.to_re "s")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 1 18) (str.to_re "w")) (re.++ ((_ re.loop 0 20) (str.to_re ")J")) (re.++ ((_ re.loop 2 8) (str.to_re "(b]")) ((_ re.loop 2 10) (str.to_re "|")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 2 13) (str.to_re ")5")) (re.++ ((_ re.loop 0 19) (str.to_re "w")) (re.++ ((_ re.loop 3 9) (str.to_re "o")) ((_ re.loop 2 18) (str.to_re "z")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
