(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 19) (str.to_re "DO")) (re.++ ((_ re.loop 5 14) (str.to_re "&9~")) (re.++ ((_ re.loop 5 19) (str.to_re "+9")) ((_ re.loop 3 11) (str.to_re "+")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 13) (str.to_re "~")) (re.++ ((_ re.loop 5 19) (str.to_re "M")) (re.++ ((_ re.loop 2 15) (str.to_re "V")) ((_ re.loop 2 10) (str.to_re "]P")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 12) (str.to_re "9")) (re.++ ((_ re.loop 2 19) (str.to_re ",V")) (re.++ ((_ re.loop 5 16) (str.to_re "Z")) ((_ re.loop 1 13) (str.to_re "7qW")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 5 12) (str.to_re "peH")) (re.++ ((_ re.loop 1 7) (str.to_re "0")) (re.++ ((_ re.loop 4 15) (str.to_re "T")) ((_ re.loop 5 15) (str.to_re "`a")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
