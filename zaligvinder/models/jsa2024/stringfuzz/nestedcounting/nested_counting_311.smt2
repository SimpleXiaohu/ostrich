(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 10) (str.to_re "|")) (re.++ ((_ re.loop 2 19) (str.to_re "L")) (re.++ ((_ re.loop 0 6) (str.to_re "A;F")) ((_ re.loop 1 6) (str.to_re "[")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 16) (str.to_re "ii(")) (re.++ ((_ re.loop 1 9) (str.to_re "nR_")) (re.++ ((_ re.loop 5 11) (str.to_re "jAr")) ((_ re.loop 1 15) (str.to_re "Rs-")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 19) (str.to_re "W")) (re.++ ((_ re.loop 2 11) (str.to_re "K~")) (re.++ ((_ re.loop 3 6) (str.to_re "w0")) ((_ re.loop 0 19) (str.to_re "d")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 1 10) (str.to_re "^~")) (re.++ ((_ re.loop 1 8) (str.to_re "l!a")) (re.++ ((_ re.loop 3 8) (str.to_re "]U")) ((_ re.loop 5 17) (str.to_re "SC#")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
