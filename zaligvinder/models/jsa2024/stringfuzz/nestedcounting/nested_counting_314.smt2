(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 11) (str.to_re ",")) (re.++ ((_ re.loop 4 20) (str.to_re "K")) (re.++ ((_ re.loop 2 6) (str.to_re ".")) ((_ re.loop 2 13) (str.to_re "YL")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 19) (str.to_re ",.")) (re.++ ((_ re.loop 4 10) (str.to_re "NZ)")) (re.++ ((_ re.loop 3 19) (str.to_re "@")) ((_ re.loop 0 6) (str.to_re "u}")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 17) (str.to_re "qq")) (re.++ ((_ re.loop 5 18) (str.to_re "XsA")) (re.++ ((_ re.loop 2 12) (str.to_re "W7")) ((_ re.loop 1 10) (str.to_re "vh")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 5 10) (str.to_re "%a")) (re.++ ((_ re.loop 1 17) (str.to_re "Q\\r")) (re.++ ((_ re.loop 4 18) (str.to_re "z")) ((_ re.loop 3 13) (str.to_re "]4")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
