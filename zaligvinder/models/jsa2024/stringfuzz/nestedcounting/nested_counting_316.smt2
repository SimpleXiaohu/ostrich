(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 5) (str.to_re "R{")) (re.++ ((_ re.loop 2 7) (str.to_re "k/W")) (re.++ ((_ re.loop 3 16) (str.to_re "8}@")) ((_ re.loop 3 15) (str.to_re "FY")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 19) (str.to_re "X")) (re.++ ((_ re.loop 0 5) (str.to_re "zAT")) (re.++ ((_ re.loop 4 10) (str.to_re "cnE")) ((_ re.loop 0 12) (str.to_re "&")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 14) (str.to_re "=")) (re.++ ((_ re.loop 2 15) (str.to_re "D")) (re.++ ((_ re.loop 2 13) (str.to_re "rYZ")) ((_ re.loop 2 18) (str.to_re "}")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 5 18) (str.to_re "DKh")) (re.++ ((_ re.loop 0 14) (str.to_re "3")) (re.++ ((_ re.loop 2 13) (str.to_re "u")) ((_ re.loop 3 16) (str.to_re "a~")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
