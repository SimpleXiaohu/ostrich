(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 17) (str.to_re ">")) (re.++ ((_ re.loop 5 11) (str.to_re "~(")) (re.++ ((_ re.loop 1 13) (str.to_re "Zs")) ((_ re.loop 1 7) (str.to_re "cI")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 3 5) (str.to_re "c\u0022")) (re.++ ((_ re.loop 3 18) (str.to_re "6")) (re.++ ((_ re.loop 2 8) (str.to_re "e[")) ((_ re.loop 3 8) (str.to_re "yB")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 16) (str.to_re "Q")) (re.++ ((_ re.loop 3 19) (str.to_re "=")) (re.++ ((_ re.loop 4 5) (str.to_re "o_M")) ((_ re.loop 4 17) (str.to_re "3KP")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 4 15) (str.to_re "4V")) (re.++ ((_ re.loop 4 10) (str.to_re "`<e")) (re.++ ((_ re.loop 0 8) (str.to_re "j")) ((_ re.loop 0 17) (str.to_re "(1")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
