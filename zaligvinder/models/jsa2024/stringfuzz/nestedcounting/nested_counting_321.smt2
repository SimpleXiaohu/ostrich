(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 17) (str.to_re "X5U")) (re.++ ((_ re.loop 5 6) (str.to_re "Ly[")) (re.++ ((_ re.loop 2 10) (str.to_re "%")) ((_ re.loop 0 10) (str.to_re "'")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 18) (str.to_re "=FO")) (re.++ ((_ re.loop 1 10) (str.to_re "P")) (re.++ ((_ re.loop 2 20) (str.to_re "w%")) ((_ re.loop 0 6) (str.to_re "eV")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 14) (str.to_re "`+")) (re.++ ((_ re.loop 5 8) (str.to_re "v!w")) (re.++ ((_ re.loop 5 20) (str.to_re "6R")) ((_ re.loop 5 20) (str.to_re "|n")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 2 9) (str.to_re "tV}")) (re.++ ((_ re.loop 1 8) (str.to_re "\u0022{")) (re.++ ((_ re.loop 2 9) (str.to_re "l")) ((_ re.loop 4 10) (str.to_re "Nt")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
