(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 5) (str.to_re "k")) (re.++ ((_ re.loop 5 20) (str.to_re "i")) (re.++ ((_ re.loop 3 10) (str.to_re "OY[")) ((_ re.loop 3 6) (str.to_re "g[6")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 10) (str.to_re "6h!")) (re.++ ((_ re.loop 4 9) (str.to_re "d)")) (re.++ ((_ re.loop 3 7) (str.to_re "+!g")) ((_ re.loop 5 10) (str.to_re "GV^")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 5) (str.to_re "s>")) (re.++ ((_ re.loop 2 13) (str.to_re "FE")) (re.++ ((_ re.loop 0 14) (str.to_re "9ea")) ((_ re.loop 5 18) (str.to_re "E")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 4 17) (str.to_re "e")) (re.++ ((_ re.loop 4 15) (str.to_re "6@c")) (re.++ ((_ re.loop 5 13) (str.to_re "bR")) ((_ re.loop 1 8) (str.to_re "DR")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
