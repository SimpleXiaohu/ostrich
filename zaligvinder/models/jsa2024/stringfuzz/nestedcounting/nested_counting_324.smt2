(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 14) (str.to_re "Q")) (re.++ ((_ re.loop 2 7) (str.to_re "e")) (re.++ ((_ re.loop 1 18) (str.to_re "n(")) ((_ re.loop 2 9) (str.to_re "mYi")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 12) (str.to_re "o:")) (re.++ ((_ re.loop 1 14) (str.to_re "`Bs")) (re.++ ((_ re.loop 1 7) (str.to_re "TG")) ((_ re.loop 5 14) (str.to_re "PHx")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 18) (str.to_re "b.}")) (re.++ ((_ re.loop 5 14) (str.to_re "6")) (re.++ ((_ re.loop 1 5) (str.to_re "[-")) ((_ re.loop 4 15) (str.to_re "(4")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 4 7) (str.to_re "d+")) (re.++ ((_ re.loop 2 6) (str.to_re "9W+")) (re.++ ((_ re.loop 0 8) (str.to_re "|4g")) ((_ re.loop 0 11) (str.to_re "g")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
