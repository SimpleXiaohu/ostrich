(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 13) (str.to_re ".Mo")) (re.++ ((_ re.loop 0 12) (str.to_re ",&R")) (re.++ ((_ re.loop 2 8) (str.to_re "v)")) ((_ re.loop 5 16) (str.to_re "|")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 8) (str.to_re "u")) (re.++ ((_ re.loop 4 13) (str.to_re "as")) (re.++ ((_ re.loop 4 15) (str.to_re "b9")) ((_ re.loop 2 5) (str.to_re "?;")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 13) (str.to_re "@g")) (re.++ ((_ re.loop 1 13) (str.to_re "OxY")) (re.++ ((_ re.loop 4 6) (str.to_re "O")) ((_ re.loop 1 20) (str.to_re "'_")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 5 14) (str.to_re "f~")) (re.++ ((_ re.loop 1 14) (str.to_re "qn")) (re.++ ((_ re.loop 2 6) (str.to_re "v")) ((_ re.loop 2 6) (str.to_re "I")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
