(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 12) (str.to_re "{;[")) (re.++ ((_ re.loop 4 19) (str.to_re "i")) (re.++ ((_ re.loop 3 18) (str.to_re "-XU")) ((_ re.loop 5 20) (str.to_re "|&")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 18) (str.to_re "W")) (re.++ ((_ re.loop 3 18) (str.to_re ";i")) (re.++ ((_ re.loop 0 7) (str.to_re "C9")) ((_ re.loop 4 9) (str.to_re "wYd")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 17) (str.to_re "4b4")) (re.++ ((_ re.loop 5 20) (str.to_re "dc:")) (re.++ ((_ re.loop 1 20) (str.to_re "2")) ((_ re.loop 2 12) (str.to_re "/(")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 2 5) (str.to_re "*4{")) (re.++ ((_ re.loop 3 12) (str.to_re "LX")) (re.++ ((_ re.loop 4 12) (str.to_re "GrG")) ((_ re.loop 3 20) (str.to_re "jwP")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
