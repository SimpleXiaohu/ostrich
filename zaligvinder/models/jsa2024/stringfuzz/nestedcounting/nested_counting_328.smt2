(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 5) (str.to_re "_")) (re.++ ((_ re.loop 3 9) (str.to_re "G")) (re.++ ((_ re.loop 3 8) (str.to_re "De")) ((_ re.loop 4 14) (str.to_re "M:")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 20) (str.to_re "1P")) (re.++ ((_ re.loop 3 13) (str.to_re "G")) (re.++ ((_ re.loop 2 11) (str.to_re ">x")) ((_ re.loop 5 9) (str.to_re "4Fn")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 6) (str.to_re "x")) (re.++ ((_ re.loop 1 7) (str.to_re "k+$")) (re.++ ((_ re.loop 1 9) (str.to_re ".")) ((_ re.loop 1 16) (str.to_re "Y.&")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 5 7) (str.to_re ":")) (re.++ ((_ re.loop 5 7) (str.to_re "G")) (re.++ ((_ re.loop 0 18) (str.to_re "87")) ((_ re.loop 1 9) (str.to_re "i_")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
