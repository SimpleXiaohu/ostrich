(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 2 15) (str.to_re "MW*")) (re.++ ((_ re.loop 2 9) (str.to_re "^l")) (re.++ ((_ re.loop 3 13) (str.to_re "c~A")) ((_ re.loop 0 20) (str.to_re ">g")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 9) (str.to_re "$Pu")) (re.++ ((_ re.loop 2 15) (str.to_re "&<")) (re.++ ((_ re.loop 0 5) (str.to_re "m")) ((_ re.loop 5 18) (str.to_re "zG")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 9) (str.to_re "M@e")) (re.++ ((_ re.loop 1 7) (str.to_re "L")) (re.++ ((_ re.loop 4 7) (str.to_re "}f")) ((_ re.loop 5 6) (str.to_re "6")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 5 8) (str.to_re "jf")) (re.++ ((_ re.loop 3 20) (str.to_re "K7+")) (re.++ ((_ re.loop 3 18) (str.to_re "l_")) ((_ re.loop 5 7) (str.to_re "x")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
