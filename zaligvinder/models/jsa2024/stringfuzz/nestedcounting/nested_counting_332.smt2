(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 7) (str.to_re "h")) (re.++ ((_ re.loop 0 11) (str.to_re "I-k")) (re.++ ((_ re.loop 5 13) (str.to_re "1")) ((_ re.loop 5 14) (str.to_re "]oQ")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 15) (str.to_re "w")) (re.++ ((_ re.loop 2 11) (str.to_re ")+")) (re.++ ((_ re.loop 1 10) (str.to_re "5")) ((_ re.loop 5 16) (str.to_re "y1")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 0 14) (str.to_re "^l'")) (re.++ ((_ re.loop 4 13) (str.to_re "SX")) (re.++ ((_ re.loop 1 11) (str.to_re "0oK")) ((_ re.loop 2 7) (str.to_re "/?")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 4 13) (str.to_re "vm\u0022")) (re.++ ((_ re.loop 3 19) (str.to_re "@")) (re.++ ((_ re.loop 1 7) (str.to_re "R$k")) ((_ re.loop 4 5) (str.to_re "K3")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
