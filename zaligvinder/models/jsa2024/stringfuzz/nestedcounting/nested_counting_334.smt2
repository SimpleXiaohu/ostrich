(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 9) (str.to_re "U*")) (re.++ ((_ re.loop 1 17) (str.to_re "s")) (re.++ ((_ re.loop 2 20) (str.to_re "<A!")) ((_ re.loop 3 17) (str.to_re "Y}")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 20) (str.to_re "wL3")) (re.++ ((_ re.loop 2 10) (str.to_re "WA[")) (re.++ ((_ re.loop 3 18) (str.to_re "wAt")) ((_ re.loop 1 5) (str.to_re ";x")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 10) (str.to_re "jVM")) (re.++ ((_ re.loop 0 19) (str.to_re "V")) (re.++ ((_ re.loop 2 18) (str.to_re "as")) ((_ re.loop 3 8) (str.to_re "SQ}")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 0 11) (str.to_re "='V")) (re.++ ((_ re.loop 4 5) (str.to_re "b")) (re.++ ((_ re.loop 3 14) (str.to_re "(")) ((_ re.loop 2 9) (str.to_re "Q-Z")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
