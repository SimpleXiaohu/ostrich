(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 8) (str.to_re "U.N")) (re.++ ((_ re.loop 1 10) (str.to_re "\u0022")) (re.++ ((_ re.loop 2 17) (str.to_re "w8")) ((_ re.loop 5 11) (str.to_re ",f")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 15) (str.to_re "~'")) (re.++ ((_ re.loop 5 15) (str.to_re "s9z")) (re.++ ((_ re.loop 0 15) (str.to_re ">+")) ((_ re.loop 1 5) (str.to_re "H{_")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 16) (str.to_re "/'X")) (re.++ ((_ re.loop 1 18) (str.to_re "lt0")) (re.++ ((_ re.loop 1 19) (str.to_re "0")) ((_ re.loop 3 5) (str.to_re ".rJ")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 1 13) (str.to_re "w]")) (re.++ ((_ re.loop 0 16) (str.to_re "%")) (re.++ ((_ re.loop 2 5) (str.to_re "`EB")) ((_ re.loop 0 20) (str.to_re "J{q")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
