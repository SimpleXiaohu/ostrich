(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 19) (str.to_re "ES|")) (re.++ ((_ re.loop 5 19) (str.to_re "=:")) (re.++ ((_ re.loop 5 5) (str.to_re "_tm")) ((_ re.loop 2 6) (str.to_re "p")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 18) (str.to_re "Ph")) (re.++ ((_ re.loop 3 15) (str.to_re "@")) (re.++ ((_ re.loop 1 5) (str.to_re "y")) ((_ re.loop 2 5) (str.to_re "zN")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 6) (str.to_re "l&")) (re.++ ((_ re.loop 1 13) (str.to_re "oZ%")) (re.++ ((_ re.loop 0 19) (str.to_re "-t")) ((_ re.loop 2 5) (str.to_re "z2")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 2 12) (str.to_re "R")) (re.++ ((_ re.loop 3 14) (str.to_re "Ij")) (re.++ ((_ re.loop 5 20) (str.to_re "Nj")) ((_ re.loop 1 12) (str.to_re "q\\'")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
