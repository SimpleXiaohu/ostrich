(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 5) (str.to_re "+")) (re.++ ((_ re.loop 4 15) (str.to_re "Rt")) (re.++ ((_ re.loop 1 17) (str.to_re "y$d")) ((_ re.loop 0 16) (str.to_re "bd")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 14) (str.to_re "3")) (re.++ ((_ re.loop 0 7) (str.to_re "h-")) (re.++ ((_ re.loop 3 5) (str.to_re "k-")) ((_ re.loop 0 6) (str.to_re "9&")))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 0 18) (str.to_re "5o")) (re.++ ((_ re.loop 5 6) (str.to_re "0F")) (re.++ ((_ re.loop 0 17) (str.to_re "&a_")) ((_ re.loop 0 8) (str.to_re "e/Y")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 3 19) (str.to_re "vY")) (re.++ ((_ re.loop 1 5) (str.to_re "!h3")) (re.++ ((_ re.loop 0 7) (str.to_re "#+")) ((_ re.loop 4 9) (str.to_re "(")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
