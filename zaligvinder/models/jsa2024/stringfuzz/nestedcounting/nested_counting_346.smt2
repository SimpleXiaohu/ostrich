(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 10) (str.to_re "aH")) (re.++ ((_ re.loop 1 16) (str.to_re "{?d")) (re.++ ((_ re.loop 4 13) (str.to_re "+WC")) ((_ re.loop 5 18) (str.to_re "4J")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 6) (str.to_re "%w")) (re.++ ((_ re.loop 5 8) (str.to_re "b.")) (re.++ ((_ re.loop 4 17) (str.to_re "{$")) ((_ re.loop 5 14) (str.to_re ".")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 4 16) (str.to_re "#.")) (re.++ ((_ re.loop 0 7) (str.to_re "8")) (re.++ ((_ re.loop 0 10) (str.to_re ",")) ((_ re.loop 1 18) (str.to_re "~%$")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 5 7) (str.to_re "g")) (re.++ ((_ re.loop 4 15) (str.to_re "+")) (re.++ ((_ re.loop 0 6) (str.to_re "Et")) ((_ re.loop 3 12) (str.to_re "$1M")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
