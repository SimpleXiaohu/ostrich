(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 0 20) (str.to_re "GM4")) (re.++ ((_ re.loop 0 20) (str.to_re "%=\u0022")) (re.++ ((_ re.loop 1 20) (str.to_re "(")) ((_ re.loop 3 20) (str.to_re "~")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 10) (str.to_re "c,")) (re.++ ((_ re.loop 1 7) (str.to_re "L>")) (re.++ ((_ re.loop 4 16) (str.to_re "I)")) ((_ re.loop 3 19) (str.to_re ",|,")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 16) (str.to_re "u")) (re.++ ((_ re.loop 3 8) (str.to_re ".1")) (re.++ ((_ re.loop 5 15) (str.to_re ";`")) ((_ re.loop 3 9) (str.to_re "P")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 0 13) (str.to_re "^6G")) (re.++ ((_ re.loop 4 11) (str.to_re "$g;")) (re.++ ((_ re.loop 4 16) (str.to_re "p4L")) ((_ re.loop 3 10) (str.to_re "|\\")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
