(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 10) (str.to_re "Ab")) (re.++ ((_ re.loop 5 6) (str.to_re "Un^")) (re.++ ((_ re.loop 3 15) (str.to_re "*F")) ((_ re.loop 3 10) (str.to_re "*:")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 11) (str.to_re "M")) (re.++ ((_ re.loop 2 19) (str.to_re "LU")) (re.++ ((_ re.loop 2 8) (str.to_re "<")) ((_ re.loop 2 9) (str.to_re "g{<")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 10) (str.to_re "i)-")) (re.++ ((_ re.loop 5 20) (str.to_re "ATC")) (re.++ ((_ re.loop 5 10) (str.to_re "}")) ((_ re.loop 4 18) (str.to_re "r")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 4 5) (str.to_re "aI")) (re.++ ((_ re.loop 3 10) (str.to_re ":")) (re.++ ((_ re.loop 3 15) (str.to_re "*=^")) ((_ re.loop 5 11) (str.to_re "c=k")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
