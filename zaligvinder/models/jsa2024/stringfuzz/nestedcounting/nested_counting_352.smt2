(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 15) (str.to_re ",p")) (re.++ ((_ re.loop 1 9) (str.to_re "6")) (re.++ ((_ re.loop 2 9) (str.to_re "?")) ((_ re.loop 4 16) (str.to_re "g#")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 15) (str.to_re "5b")) (re.++ ((_ re.loop 3 11) (str.to_re "T")) (re.++ ((_ re.loop 5 18) (str.to_re ",[s")) ((_ re.loop 2 17) (str.to_re "=}D")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 12) (str.to_re ":")) (re.++ ((_ re.loop 0 15) (str.to_re "hG~")) (re.++ ((_ re.loop 1 19) (str.to_re "FE/")) ((_ re.loop 0 12) (str.to_re "3")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 5 5) (str.to_re "hkd")) (re.++ ((_ re.loop 3 12) (str.to_re "<")) (re.++ ((_ re.loop 2 17) (str.to_re "<")) ((_ re.loop 1 12) (str.to_re "t=")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
