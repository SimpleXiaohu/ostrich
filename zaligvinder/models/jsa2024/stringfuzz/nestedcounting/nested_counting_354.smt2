(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 3 7) (str.to_re "B")) (re.++ ((_ re.loop 3 12) (str.to_re "XS]")) (re.++ ((_ re.loop 3 11) (str.to_re "hb")) ((_ re.loop 3 12) (str.to_re "k,")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 12) (str.to_re "HcM")) (re.++ ((_ re.loop 2 6) (str.to_re "5~")) (re.++ ((_ re.loop 0 19) (str.to_re "\\")) ((_ re.loop 2 18) (str.to_re "WZ|")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 14) (str.to_re "PZ")) (re.++ ((_ re.loop 3 19) (str.to_re "~")) (re.++ ((_ re.loop 0 10) (str.to_re "x")) ((_ re.loop 4 8) (str.to_re ",z|")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 5 10) (str.to_re "ZKb")) (re.++ ((_ re.loop 5 13) (str.to_re "/")) (re.++ ((_ re.loop 3 17) (str.to_re "9t")) ((_ re.loop 4 8) (str.to_re ">0")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
