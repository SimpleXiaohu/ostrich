(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 10) (str.to_re "5")) (re.++ ((_ re.loop 2 15) (str.to_re "g;")) (re.++ ((_ re.loop 2 12) (str.to_re "X[i")) ((_ re.loop 0 7) (str.to_re "4}")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 8) (str.to_re ">")) (re.++ ((_ re.loop 1 10) (str.to_re "kv,")) (re.++ ((_ re.loop 5 10) (str.to_re "][7")) ((_ re.loop 4 10) (str.to_re "JH")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 10) (str.to_re "NH")) (re.++ ((_ re.loop 0 19) (str.to_re "VQ")) (re.++ ((_ re.loop 2 9) (str.to_re "A*$")) ((_ re.loop 4 11) (str.to_re "3,")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 4 15) (str.to_re "W")) (re.++ ((_ re.loop 4 17) (str.to_re "LK")) (re.++ ((_ re.loop 4 9) (str.to_re "?Qp")) ((_ re.loop 0 16) (str.to_re "rm")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
