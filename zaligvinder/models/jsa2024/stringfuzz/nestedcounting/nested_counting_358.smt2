(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 8) (str.to_re "RDC")) (re.++ ((_ re.loop 5 20) (str.to_re "[j")) (re.++ ((_ re.loop 3 5) (str.to_re ".#&")) ((_ re.loop 3 10) (str.to_re "~<")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 1 10) (str.to_re "[oK")) (re.++ ((_ re.loop 3 11) (str.to_re "D9")) (re.++ ((_ re.loop 5 13) (str.to_re "Kq")) ((_ re.loop 1 6) (str.to_re "x")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 12) (str.to_re "wGf")) (re.++ ((_ re.loop 4 6) (str.to_re "LZ'")) (re.++ ((_ re.loop 5 20) (str.to_re ".")) ((_ re.loop 3 8) (str.to_re "2N")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 5 14) (str.to_re "u4")) (re.++ ((_ re.loop 3 16) (str.to_re "r@")) (re.++ ((_ re.loop 5 17) (str.to_re "@2")) ((_ re.loop 5 8) (str.to_re ";Z")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
