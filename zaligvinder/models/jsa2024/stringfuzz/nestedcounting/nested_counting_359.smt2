(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 16) (str.to_re "kY")) (re.++ ((_ re.loop 4 9) (str.to_re "6r")) (re.++ ((_ re.loop 3 11) (str.to_re "\\yH")) ((_ re.loop 5 6) (str.to_re "Il")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 6) (str.to_re ":t")) (re.++ ((_ re.loop 5 10) (str.to_re "5B")) (re.++ ((_ re.loop 4 15) (str.to_re "~*?")) ((_ re.loop 4 10) (str.to_re "xs9")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 5 15) (str.to_re "?Yz")) (re.++ ((_ re.loop 3 9) (str.to_re "|--")) (re.++ ((_ re.loop 1 18) (str.to_re "F")) ((_ re.loop 4 15) (str.to_re "\\DI")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 2 20) (str.to_re "ij`")) (re.++ ((_ re.loop 2 17) (str.to_re "I!")) (re.++ ((_ re.loop 4 12) (str.to_re "<'")) ((_ re.loop 0 20) (str.to_re "7&d")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
