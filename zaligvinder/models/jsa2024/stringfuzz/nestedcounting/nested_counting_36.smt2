(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 12) (str.to_re "!")) (re.++ ((_ re.loop 3 17) (str.to_re "<")) (re.++ ((_ re.loop 3 13) (str.to_re "R99")) ((_ re.loop 5 15) (str.to_re "W")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 14) (str.to_re "WN")) (re.++ ((_ re.loop 1 6) (str.to_re "Lf")) (re.++ ((_ re.loop 2 14) (str.to_re "H")) ((_ re.loop 0 20) (str.to_re "5M")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 12) (str.to_re "Ny(")) (re.++ ((_ re.loop 5 12) (str.to_re "{e$")) (re.++ ((_ re.loop 0 8) (str.to_re "\\{(")) ((_ re.loop 0 7) (str.to_re "~P")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 0 15) (str.to_re "S=}")) (re.++ ((_ re.loop 5 16) (str.to_re "4")) (re.++ ((_ re.loop 3 10) (str.to_re "\\s5")) ((_ re.loop 5 5) (str.to_re "{i")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
