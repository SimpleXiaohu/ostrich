(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 14) (str.to_re ")@")) (re.++ ((_ re.loop 3 7) (str.to_re "~&")) (re.++ ((_ re.loop 4 14) (str.to_re "x|{")) ((_ re.loop 0 9) (str.to_re "?")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 18) (str.to_re "a[")) (re.++ ((_ re.loop 5 20) (str.to_re "l:=")) (re.++ ((_ re.loop 1 12) (str.to_re "A")) ((_ re.loop 0 16) (str.to_re "{2Z")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 3 8) (str.to_re "4Q\u0022")) (re.++ ((_ re.loop 2 8) (str.to_re "E")) (re.++ ((_ re.loop 4 8) (str.to_re "J")) ((_ re.loop 2 18) (str.to_re "@")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 0 10) (str.to_re "g")) (re.++ ((_ re.loop 3 6) (str.to_re "_")) (re.++ ((_ re.loop 1 20) (str.to_re "N9A")) ((_ re.loop 2 19) (str.to_re "67")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
