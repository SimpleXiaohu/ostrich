(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 1 20) (str.to_re "4!P")) (re.++ ((_ re.loop 4 7) (str.to_re "d~.")) (re.++ ((_ re.loop 2 16) (str.to_re "}")) ((_ re.loop 1 7) (str.to_re "b")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 12) (str.to_re "/")) (re.++ ((_ re.loop 5 10) (str.to_re "r")) (re.++ ((_ re.loop 5 6) (str.to_re "N`~")) ((_ re.loop 4 12) (str.to_re "LZ")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 18) (str.to_re "Iv")) (re.++ ((_ re.loop 1 14) (str.to_re "1F")) (re.++ ((_ re.loop 1 11) (str.to_re "Vf")) ((_ re.loop 5 13) (str.to_re "7")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 5 5) (str.to_re "EEj")) (re.++ ((_ re.loop 3 18) (str.to_re "p")) (re.++ ((_ re.loop 1 16) (str.to_re "s")) ((_ re.loop 5 12) (str.to_re "J~{")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
