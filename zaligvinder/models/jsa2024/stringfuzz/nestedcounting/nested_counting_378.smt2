(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 6) (str.to_re "L5'")) (re.++ ((_ re.loop 4 12) (str.to_re "=Y(")) (re.++ ((_ re.loop 5 11) (str.to_re "U")) ((_ re.loop 1 12) (str.to_re "H")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 16) (str.to_re "8f")) (re.++ ((_ re.loop 1 15) (str.to_re "Q")) (re.++ ((_ re.loop 0 15) (str.to_re "C")) ((_ re.loop 2 12) (str.to_re "}!")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 15) (str.to_re "ut")) (re.++ ((_ re.loop 3 16) (str.to_re "1")) (re.++ ((_ re.loop 2 18) (str.to_re "rQ")) ((_ re.loop 1 5) (str.to_re "(")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 5 15) (str.to_re "9")) (re.++ ((_ re.loop 2 7) (str.to_re "5")) (re.++ ((_ re.loop 0 8) (str.to_re "[p")) ((_ re.loop 4 13) (str.to_re "\\k")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
