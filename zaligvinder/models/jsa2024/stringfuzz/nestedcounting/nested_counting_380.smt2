(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 7) (str.to_re "9")) (re.++ ((_ re.loop 0 10) (str.to_re "O")) (re.++ ((_ re.loop 5 6) (str.to_re "YM")) ((_ re.loop 4 18) (str.to_re "Pe")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 6) (str.to_re "Q")) (re.++ ((_ re.loop 5 18) (str.to_re "7")) (re.++ ((_ re.loop 2 9) (str.to_re "b}")) ((_ re.loop 2 9) (str.to_re "6Y")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 15) (str.to_re "G+")) (re.++ ((_ re.loop 3 10) (str.to_re "L-")) (re.++ ((_ re.loop 5 8) (str.to_re "7a^")) ((_ re.loop 3 11) (str.to_re "A0")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 2 7) (str.to_re "0")) (re.++ ((_ re.loop 2 9) (str.to_re "5")) (re.++ ((_ re.loop 1 11) (str.to_re "fS")) ((_ re.loop 5 20) (str.to_re "v")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
