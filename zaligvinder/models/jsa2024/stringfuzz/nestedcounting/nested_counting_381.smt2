(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 4 18) (str.to_re "&r/")) (re.++ ((_ re.loop 1 7) (str.to_re "XbL")) (re.++ ((_ re.loop 2 11) (str.to_re "*}")) ((_ re.loop 5 13) (str.to_re "<")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 12) (str.to_re "<Hj")) (re.++ ((_ re.loop 5 10) (str.to_re "n")) (re.++ ((_ re.loop 3 14) (str.to_re "9")) ((_ re.loop 0 11) (str.to_re "uv")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 20) (str.to_re "MWs")) (re.++ ((_ re.loop 3 12) (str.to_re "5")) (re.++ ((_ re.loop 0 12) (str.to_re "*?m")) ((_ re.loop 4 9) (str.to_re "Rq")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 2 19) (str.to_re "^$A")) (re.++ ((_ re.loop 1 15) (str.to_re "\u00224s")) (re.++ ((_ re.loop 2 20) (str.to_re "_")) ((_ re.loop 0 6) (str.to_re "[1")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
