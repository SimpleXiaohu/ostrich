(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 18) (str.to_re "6")) (re.++ ((_ re.loop 4 13) (str.to_re "yg")) (re.++ ((_ re.loop 0 16) (str.to_re "<")) ((_ re.loop 2 15) (str.to_re "+")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 7) (str.to_re "-")) (re.++ ((_ re.loop 0 10) (str.to_re "_4")) (re.++ ((_ re.loop 2 7) (str.to_re "Bur")) ((_ re.loop 4 19) (str.to_re "c")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 20) (str.to_re "{Iy")) (re.++ ((_ re.loop 0 5) (str.to_re "'")) (re.++ ((_ re.loop 4 20) (str.to_re "JT")) ((_ re.loop 4 7) (str.to_re "96")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 2 9) (str.to_re "z")) (re.++ ((_ re.loop 2 11) (str.to_re "U")) (re.++ ((_ re.loop 1 5) (str.to_re "4")) ((_ re.loop 1 12) (str.to_re "w")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
