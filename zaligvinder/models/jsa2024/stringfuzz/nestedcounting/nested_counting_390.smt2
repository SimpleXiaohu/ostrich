(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 15) (str.to_re "Y.")) (re.++ ((_ re.loop 3 7) (str.to_re "p")) (re.++ ((_ re.loop 0 13) (str.to_re ":")) ((_ re.loop 0 7) (str.to_re "!V")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 7) (str.to_re ".")) (re.++ ((_ re.loop 5 13) (str.to_re "bQ")) (re.++ ((_ re.loop 0 8) (str.to_re "`?$")) ((_ re.loop 2 19) (str.to_re "V{7")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 20) (str.to_re "Oo")) (re.++ ((_ re.loop 1 15) (str.to_re "?d")) (re.++ ((_ re.loop 3 18) (str.to_re ",")) ((_ re.loop 5 20) (str.to_re "9")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 0 16) (str.to_re "Mnk")) (re.++ ((_ re.loop 3 17) (str.to_re "4j")) (re.++ ((_ re.loop 3 13) (str.to_re "kh&")) ((_ re.loop 3 18) (str.to_re "&!")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
