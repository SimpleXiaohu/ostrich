(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 1 13) (str.to_re "9")) (re.++ ((_ re.loop 4 9) (str.to_re "K")) (re.++ ((_ re.loop 0 10) (str.to_re ";LQ")) ((_ re.loop 1 9) (str.to_re "F")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 5 11) (str.to_re "D")) (re.++ ((_ re.loop 1 9) (str.to_re "NzX")) (re.++ ((_ re.loop 0 9) (str.to_re "K")) ((_ re.loop 0 11) (str.to_re "I-W")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 13) (str.to_re "a")) (re.++ ((_ re.loop 4 13) (str.to_re "YTK")) (re.++ ((_ re.loop 4 14) (str.to_re "/$?")) ((_ re.loop 4 6) (str.to_re "/JM")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 2 15) (str.to_re "*")) (re.++ ((_ re.loop 0 11) (str.to_re "en")) (re.++ ((_ re.loop 1 11) (str.to_re "8|s")) ((_ re.loop 2 16) (str.to_re "B;s")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
