(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 1 15) (str.to_re "E")) (re.++ ((_ re.loop 0 6) (str.to_re "G")) (re.++ ((_ re.loop 1 11) (str.to_re "B-a")) ((_ re.loop 5 5) (str.to_re "@!e")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 18) (str.to_re "+")) (re.++ ((_ re.loop 3 19) (str.to_re "{\\")) (re.++ ((_ re.loop 1 15) (str.to_re "Pw:")) ((_ re.loop 2 13) (str.to_re "$")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 19) (str.to_re "wN")) (re.++ ((_ re.loop 5 17) (str.to_re "Zx")) (re.++ ((_ re.loop 5 18) (str.to_re "Y5F")) ((_ re.loop 2 12) (str.to_re "k")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 2 19) (str.to_re "#$")) (re.++ ((_ re.loop 5 7) (str.to_re "]p")) (re.++ ((_ re.loop 0 12) (str.to_re "R")) ((_ re.loop 4 9) (str.to_re "&")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
