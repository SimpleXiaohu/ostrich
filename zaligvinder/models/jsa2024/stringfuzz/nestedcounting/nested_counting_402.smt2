(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 0 15) (str.to_re "IU")) (re.++ ((_ re.loop 4 7) (str.to_re "&V")) (re.++ ((_ re.loop 1 11) (str.to_re "hLB")) ((_ re.loop 4 18) (str.to_re "r_")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 7) (str.to_re "$H")) (re.++ ((_ re.loop 3 14) (str.to_re "`HL")) (re.++ ((_ re.loop 0 16) (str.to_re "+)\u0022")) ((_ re.loop 4 17) (str.to_re "F;/")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 16) (str.to_re "gR,")) (re.++ ((_ re.loop 4 10) (str.to_re "]L")) (re.++ ((_ re.loop 1 19) (str.to_re "8v!")) ((_ re.loop 4 6) (str.to_re "l}%")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 1 20) (str.to_re "2.V")) (re.++ ((_ re.loop 3 7) (str.to_re "`")) (re.++ ((_ re.loop 0 8) (str.to_re "L'7")) ((_ re.loop 0 8) (str.to_re "@;q")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
