(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 16) (str.to_re "0")) (re.++ ((_ re.loop 3 5) (str.to_re ".c")) (re.++ ((_ re.loop 4 14) (str.to_re "&6")) ((_ re.loop 3 9) (str.to_re "B<")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 13) (str.to_re "c5m")) (re.++ ((_ re.loop 2 13) (str.to_re "qjO")) (re.++ ((_ re.loop 3 11) (str.to_re "oBj")) ((_ re.loop 1 11) (str.to_re "%f")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 18) (str.to_re "'-")) (re.++ ((_ re.loop 3 8) (str.to_re ">")) (re.++ ((_ re.loop 2 17) (str.to_re "1S)")) ((_ re.loop 3 19) (str.to_re "('$")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 5 5) (str.to_re "q")) (re.++ ((_ re.loop 0 5) (str.to_re "d\u0022")) (re.++ ((_ re.loop 2 5) (str.to_re "dg")) ((_ re.loop 5 10) (str.to_re "iQ*")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
