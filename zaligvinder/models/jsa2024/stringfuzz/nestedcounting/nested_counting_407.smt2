(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 1 20) (str.to_re "VU0")) (re.++ ((_ re.loop 4 13) (str.to_re "q")) (re.++ ((_ re.loop 3 13) (str.to_re ")*)")) ((_ re.loop 2 5) (str.to_re "Spi")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 10) (str.to_re "7q")) (re.++ ((_ re.loop 1 14) (str.to_re "Q=")) (re.++ ((_ re.loop 3 15) (str.to_re "oj")) ((_ re.loop 1 12) (str.to_re ";<")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 16) (str.to_re "+")) (re.++ ((_ re.loop 1 14) (str.to_re "bE")) (re.++ ((_ re.loop 2 11) (str.to_re "(i3")) ((_ re.loop 1 20) (str.to_re "L6y")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 2 8) (str.to_re "?77")) (re.++ ((_ re.loop 4 19) (str.to_re "g%9")) (re.++ ((_ re.loop 5 17) (str.to_re "Vf")) ((_ re.loop 2 16) (str.to_re "^")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
