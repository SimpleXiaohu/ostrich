(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 5) (str.to_re "h")) (re.++ ((_ re.loop 3 18) (str.to_re "e")) (re.++ ((_ re.loop 3 6) (str.to_re "d?P")) ((_ re.loop 4 20) (str.to_re "f4")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 5 12) (str.to_re "mK")) (re.++ ((_ re.loop 0 9) (str.to_re ")")) (re.++ ((_ re.loop 0 18) (str.to_re "w}")) ((_ re.loop 5 7) (str.to_re "](")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 17) (str.to_re "3C")) (re.++ ((_ re.loop 5 5) (str.to_re "Iik")) (re.++ ((_ re.loop 3 9) (str.to_re "'d")) ((_ re.loop 5 20) (str.to_re "L")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 0 16) (str.to_re "9$9")) (re.++ ((_ re.loop 1 15) (str.to_re "V")) (re.++ ((_ re.loop 1 6) (str.to_re "lF")) ((_ re.loop 5 18) (str.to_re "G3,")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
