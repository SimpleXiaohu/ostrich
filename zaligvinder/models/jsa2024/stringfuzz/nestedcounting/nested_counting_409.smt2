(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 20) (str.to_re ",")) (re.++ ((_ re.loop 4 14) (str.to_re "Z)")) (re.++ ((_ re.loop 2 6) (str.to_re "QQO")) ((_ re.loop 2 16) (str.to_re "6F|")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 19) (str.to_re "<M")) (re.++ ((_ re.loop 5 7) (str.to_re "[|g")) (re.++ ((_ re.loop 3 9) (str.to_re "=%")) ((_ re.loop 2 20) (str.to_re "7k")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 1 12) (str.to_re "\\c7")) (re.++ ((_ re.loop 5 9) (str.to_re "{")) (re.++ ((_ re.loop 3 17) (str.to_re "arQ")) ((_ re.loop 0 7) (str.to_re "UoL")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 3 12) (str.to_re "/No")) (re.++ ((_ re.loop 1 8) (str.to_re "s%a")) (re.++ ((_ re.loop 5 7) (str.to_re "q")) ((_ re.loop 5 13) (str.to_re "g{Y")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
