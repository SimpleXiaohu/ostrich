(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 10) (str.to_re "i'")) (re.++ ((_ re.loop 4 6) (str.to_re "q$A")) (re.++ ((_ re.loop 5 15) (str.to_re ".S")) ((_ re.loop 5 12) (str.to_re "u")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 8) (str.to_re "v_")) (re.++ ((_ re.loop 5 5) (str.to_re "_")) (re.++ ((_ re.loop 0 20) (str.to_re "WJy")) ((_ re.loop 0 17) (str.to_re "j,")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 14) (str.to_re "C")) (re.++ ((_ re.loop 2 14) (str.to_re "r+g")) (re.++ ((_ re.loop 5 12) (str.to_re "jFL")) ((_ re.loop 4 15) (str.to_re "Q")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 1 8) (str.to_re "yG%")) (re.++ ((_ re.loop 2 17) (str.to_re "*")) (re.++ ((_ re.loop 2 8) (str.to_re ",")) ((_ re.loop 0 11) (str.to_re "Ix")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
