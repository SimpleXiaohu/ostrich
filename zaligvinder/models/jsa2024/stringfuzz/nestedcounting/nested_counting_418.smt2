(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 0 7) (str.to_re "r1)")) (re.++ ((_ re.loop 0 16) (str.to_re "9O")) (re.++ ((_ re.loop 0 6) (str.to_re "cm~")) ((_ re.loop 3 5) (str.to_re "*w")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 12) (str.to_re "%")) (re.++ ((_ re.loop 5 16) (str.to_re "`")) (re.++ ((_ re.loop 4 19) (str.to_re "u2/")) ((_ re.loop 3 14) (str.to_re "!XX")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 5) (str.to_re "[S.")) (re.++ ((_ re.loop 2 8) (str.to_re "r5W")) (re.++ ((_ re.loop 2 18) (str.to_re "f>i")) ((_ re.loop 0 11) (str.to_re "<!:")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 0 17) (str.to_re "rmg")) (re.++ ((_ re.loop 2 13) (str.to_re ".[")) (re.++ ((_ re.loop 3 20) (str.to_re "q{i")) ((_ re.loop 4 13) (str.to_re "u(")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
