(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 19) (str.to_re "k")) (re.++ ((_ re.loop 2 11) (str.to_re "RR")) (re.++ ((_ re.loop 2 20) (str.to_re "fKe")) ((_ re.loop 3 19) (str.to_re "}Qi")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 10) (str.to_re "-")) (re.++ ((_ re.loop 5 20) (str.to_re "'N2")) (re.++ ((_ re.loop 1 13) (str.to_re "c;7")) ((_ re.loop 1 14) (str.to_re "_")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 11) (str.to_re "\\")) (re.++ ((_ re.loop 3 12) (str.to_re "D&")) (re.++ ((_ re.loop 0 13) (str.to_re "x")) ((_ re.loop 3 14) (str.to_re "s;I")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 0 13) (str.to_re "q")) (re.++ ((_ re.loop 2 16) (str.to_re "u\\")) (re.++ ((_ re.loop 2 5) (str.to_re "b@V")) ((_ re.loop 1 5) (str.to_re "MCv")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
