(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 13) (str.to_re "r+C")) (re.++ ((_ re.loop 2 16) (str.to_re "}$")) (re.++ ((_ re.loop 1 16) (str.to_re "?|")) ((_ re.loop 5 19) (str.to_re "IA")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 17) (str.to_re "X|\u0022")) (re.++ ((_ re.loop 3 14) (str.to_re "c")) (re.++ ((_ re.loop 5 18) (str.to_re ",-E")) ((_ re.loop 4 5) (str.to_re "X")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 19) (str.to_re "NP$")) (re.++ ((_ re.loop 4 14) (str.to_re "Dl}")) (re.++ ((_ re.loop 5 17) (str.to_re ":")) ((_ re.loop 5 14) (str.to_re "o")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 1 7) (str.to_re "I{")) (re.++ ((_ re.loop 4 20) (str.to_re "<n")) (re.++ ((_ re.loop 0 16) (str.to_re "676")) ((_ re.loop 4 12) (str.to_re "-H")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
