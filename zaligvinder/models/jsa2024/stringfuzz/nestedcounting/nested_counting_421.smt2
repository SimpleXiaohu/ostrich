(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 0 18) (str.to_re "|\u0022")) (re.++ ((_ re.loop 4 7) (str.to_re "k")) (re.++ ((_ re.loop 3 17) (str.to_re "6;m")) ((_ re.loop 2 11) (str.to_re "&p8")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 7) (str.to_re "Fg")) (re.++ ((_ re.loop 4 12) (str.to_re "U'")) (re.++ ((_ re.loop 3 10) (str.to_re "T")) ((_ re.loop 0 14) (str.to_re "9l")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 13) (str.to_re "=")) (re.++ ((_ re.loop 5 19) (str.to_re "#c3")) (re.++ ((_ re.loop 1 17) (str.to_re "#")) ((_ re.loop 5 16) (str.to_re ")")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 5 12) (str.to_re "k")) (re.++ ((_ re.loop 1 17) (str.to_re "tF")) (re.++ ((_ re.loop 4 12) (str.to_re "t;Z")) ((_ re.loop 3 17) (str.to_re "vId")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
