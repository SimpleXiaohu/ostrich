(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 13) (str.to_re "A")) (re.++ ((_ re.loop 1 12) (str.to_re "#")) (re.++ ((_ re.loop 3 12) (str.to_re "`Mo")) ((_ re.loop 0 7) (str.to_re "1")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 14) (str.to_re "]8|")) (re.++ ((_ re.loop 0 15) (str.to_re "dg")) (re.++ ((_ re.loop 3 18) (str.to_re "u")) ((_ re.loop 4 11) (str.to_re "V")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 4 15) (str.to_re "V")) (re.++ ((_ re.loop 5 9) (str.to_re "R")) (re.++ ((_ re.loop 5 9) (str.to_re "v")) ((_ re.loop 2 7) (str.to_re "Y")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 5 13) (str.to_re "F")) (re.++ ((_ re.loop 2 17) (str.to_re "V!")) (re.++ ((_ re.loop 2 14) (str.to_re "}")) ((_ re.loop 1 15) (str.to_re "E5")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
