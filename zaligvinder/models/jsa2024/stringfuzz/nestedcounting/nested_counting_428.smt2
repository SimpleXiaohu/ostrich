(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 4 19) (str.to_re "jLF")) (re.++ ((_ re.loop 2 11) (str.to_re "K")) (re.++ ((_ re.loop 1 10) (str.to_re "Y")) ((_ re.loop 0 7) (str.to_re "<")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 10) (str.to_re "V")) (re.++ ((_ re.loop 4 19) (str.to_re "@O_")) (re.++ ((_ re.loop 5 15) (str.to_re "WKH")) ((_ re.loop 1 8) (str.to_re "AR")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 18) (str.to_re "b")) (re.++ ((_ re.loop 0 18) (str.to_re "#")) (re.++ ((_ re.loop 5 20) (str.to_re "@")) ((_ re.loop 5 18) (str.to_re "&7")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 3 7) (str.to_re "xh")) (re.++ ((_ re.loop 1 11) (str.to_re "$")) (re.++ ((_ re.loop 3 15) (str.to_re "'")) ((_ re.loop 5 20) (str.to_re "jAw")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
