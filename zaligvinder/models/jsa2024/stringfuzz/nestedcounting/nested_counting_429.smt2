(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 2 5) (str.to_re "H~2")) (re.++ ((_ re.loop 0 16) (str.to_re "b'")) (re.++ ((_ re.loop 0 8) (str.to_re "b")) ((_ re.loop 1 18) (str.to_re "+S")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 17) (str.to_re "m")) (re.++ ((_ re.loop 4 16) (str.to_re "8|1")) (re.++ ((_ re.loop 4 15) (str.to_re "[")) ((_ re.loop 2 13) (str.to_re ":")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 19) (str.to_re "8")) (re.++ ((_ re.loop 1 8) (str.to_re "8\u0022")) (re.++ ((_ re.loop 5 13) (str.to_re "'~h")) ((_ re.loop 3 15) (str.to_re "pm")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 1 5) (str.to_re "m0")) (re.++ ((_ re.loop 1 16) (str.to_re "w")) (re.++ ((_ re.loop 2 9) (str.to_re "&")) ((_ re.loop 0 19) (str.to_re "3")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
