(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 8) (str.to_re "Y8y")) (re.++ ((_ re.loop 2 15) (str.to_re "$pE")) (re.++ ((_ re.loop 2 9) (str.to_re "\\g+")) ((_ re.loop 0 10) (str.to_re "X'j")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 9) (str.to_re ";w")) (re.++ ((_ re.loop 4 19) (str.to_re "cp")) (re.++ ((_ re.loop 3 16) (str.to_re "$")) ((_ re.loop 4 15) (str.to_re "U`")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 20) (str.to_re "'/")) (re.++ ((_ re.loop 5 13) (str.to_re "c")) (re.++ ((_ re.loop 1 9) (str.to_re ".")) ((_ re.loop 2 5) (str.to_re "t:")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 0 6) (str.to_re "3U")) (re.++ ((_ re.loop 1 18) (str.to_re "jt")) (re.++ ((_ re.loop 4 14) (str.to_re "!")) ((_ re.loop 2 7) (str.to_re "i")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
