(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 11) (str.to_re "e[")) (re.++ ((_ re.loop 2 13) (str.to_re "v")) (re.++ ((_ re.loop 2 16) (str.to_re "Sy")) ((_ re.loop 1 16) (str.to_re "Z,")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 5 10) (str.to_re "M")) (re.++ ((_ re.loop 2 18) (str.to_re "B(")) (re.++ ((_ re.loop 0 19) (str.to_re "Om")) ((_ re.loop 2 9) (str.to_re "U_")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 13) (str.to_re "he")) (re.++ ((_ re.loop 0 15) (str.to_re "\\j/")) (re.++ ((_ re.loop 4 16) (str.to_re "~1")) ((_ re.loop 1 11) (str.to_re "Y")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 1 11) (str.to_re "x")) (re.++ ((_ re.loop 5 10) (str.to_re "S?")) (re.++ ((_ re.loop 0 17) (str.to_re "xF")) ((_ re.loop 4 8) (str.to_re "P9")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
