(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 2 15) (str.to_re "\u00229")) (re.++ ((_ re.loop 2 16) (str.to_re "_k")) (re.++ ((_ re.loop 3 5) (str.to_re "&")) ((_ re.loop 2 7) (str.to_re "w")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 5 18) (str.to_re "^")) (re.++ ((_ re.loop 3 14) (str.to_re "Hmi")) (re.++ ((_ re.loop 2 20) (str.to_re "M*")) ((_ re.loop 1 17) (str.to_re "FKv")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 20) (str.to_re "@G<")) (re.++ ((_ re.loop 0 11) (str.to_re "Q`4")) (re.++ ((_ re.loop 2 5) (str.to_re "{3w")) ((_ re.loop 1 13) (str.to_re "2")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 3 9) (str.to_re "H")) (re.++ ((_ re.loop 2 11) (str.to_re ",")) (re.++ ((_ re.loop 3 16) (str.to_re "Y$")) ((_ re.loop 5 11) (str.to_re ">l")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
