(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 10) (str.to_re "K")) (re.++ ((_ re.loop 2 15) (str.to_re "H6Q")) (re.++ ((_ re.loop 0 20) (str.to_re "j\\")) ((_ re.loop 0 13) (str.to_re "1")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 5 14) (str.to_re "8{y")) (re.++ ((_ re.loop 3 19) (str.to_re "K")) (re.++ ((_ re.loop 2 15) (str.to_re "o8B")) ((_ re.loop 0 12) (str.to_re "i")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 4 11) (str.to_re "7")) (re.++ ((_ re.loop 4 16) (str.to_re "<")) (re.++ ((_ re.loop 3 16) (str.to_re "U}x")) ((_ re.loop 2 20) (str.to_re "w")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 4 16) (str.to_re "t$%")) (re.++ ((_ re.loop 2 11) (str.to_re "O")) (re.++ ((_ re.loop 0 17) (str.to_re "A")) ((_ re.loop 0 14) (str.to_re "qv")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
