(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 5) (str.to_re "C")) (re.++ ((_ re.loop 2 16) (str.to_re ")>1")) (re.++ ((_ re.loop 5 12) (str.to_re "=i")) ((_ re.loop 1 20) (str.to_re "6pn")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 10) (str.to_re "*#X")) (re.++ ((_ re.loop 5 12) (str.to_re "'")) (re.++ ((_ re.loop 4 17) (str.to_re "a")) ((_ re.loop 1 13) (str.to_re "Bzw")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 6) (str.to_re ".L<")) (re.++ ((_ re.loop 1 16) (str.to_re "+KC")) (re.++ ((_ re.loop 3 8) (str.to_re "=")) ((_ re.loop 1 6) (str.to_re "-60")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 0 10) (str.to_re "(")) (re.++ ((_ re.loop 4 8) (str.to_re "{)")) (re.++ ((_ re.loop 3 8) (str.to_re ":")) ((_ re.loop 0 12) (str.to_re "&}")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
