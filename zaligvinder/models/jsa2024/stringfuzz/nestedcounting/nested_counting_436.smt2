(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 15) (str.to_re "es")) (re.++ ((_ re.loop 5 11) (str.to_re ";")) (re.++ ((_ re.loop 3 13) (str.to_re ";ZF")) ((_ re.loop 5 7) (str.to_re "3gk")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 5 19) (str.to_re "|u2")) (re.++ ((_ re.loop 3 20) (str.to_re "|")) (re.++ ((_ re.loop 1 18) (str.to_re "a\u0022O")) ((_ re.loop 3 13) (str.to_re "!:")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 17) (str.to_re ",")) (re.++ ((_ re.loop 4 17) (str.to_re "r")) (re.++ ((_ re.loop 2 13) (str.to_re "W")) ((_ re.loop 3 8) (str.to_re "VW")))))) ((_ re.loop 0 1) (re.++ ((_ re.loop 3 14) (str.to_re "7aQ")) (re.++ ((_ re.loop 5 19) (str.to_re ".")) (re.++ ((_ re.loop 5 9) (str.to_re "Q{|")) ((_ re.loop 3 19) (str.to_re "x!'")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
