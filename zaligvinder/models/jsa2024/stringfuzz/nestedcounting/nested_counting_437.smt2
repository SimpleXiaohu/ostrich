(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 13) (str.to_re ")[")) (re.++ ((_ re.loop 5 17) (str.to_re "#q")) (re.++ ((_ re.loop 0 20) (str.to_re "oe{")) ((_ re.loop 3 18) (str.to_re "F")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 20) (str.to_re "D3J")) (re.++ ((_ re.loop 2 7) (str.to_re "z")) (re.++ ((_ re.loop 5 5) (str.to_re "e1")) ((_ re.loop 0 12) (str.to_re "ap")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 5 18) (str.to_re "Ah<")) (re.++ ((_ re.loop 2 8) (str.to_re "ZO")) (re.++ ((_ re.loop 3 14) (str.to_re "b\\F")) ((_ re.loop 0 15) (str.to_re "Xjd")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 2 14) (str.to_re "%")) (re.++ ((_ re.loop 0 7) (str.to_re "'")) (re.++ ((_ re.loop 5 17) (str.to_re "jf")) ((_ re.loop 3 7) (str.to_re "o")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
