(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 6) (str.to_re "6~*")) (re.++ ((_ re.loop 0 16) (str.to_re "XA")) (re.++ ((_ re.loop 0 20) (str.to_re "9I")) ((_ re.loop 3 8) (str.to_re "N")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 8) (str.to_re "O")) (re.++ ((_ re.loop 3 13) (str.to_re "x}f")) (re.++ ((_ re.loop 2 5) (str.to_re "<t1")) ((_ re.loop 5 15) (str.to_re "Q@")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 14) (str.to_re "!")) (re.++ ((_ re.loop 1 5) (str.to_re "q")) (re.++ ((_ re.loop 5 8) (str.to_re "8T")) ((_ re.loop 4 8) (str.to_re "_")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 0 5) (str.to_re "Bf")) (re.++ ((_ re.loop 5 15) (str.to_re "H")) (re.++ ((_ re.loop 3 9) (str.to_re "(S")) ((_ re.loop 5 7) (str.to_re "3")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
