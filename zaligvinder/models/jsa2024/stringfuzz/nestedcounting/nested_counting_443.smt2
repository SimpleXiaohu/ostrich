(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 14) (str.to_re "zVB")) (re.++ ((_ re.loop 0 17) (str.to_re "o")) (re.++ ((_ re.loop 4 14) (str.to_re "e")) ((_ re.loop 4 6) (str.to_re "e")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 6) (str.to_re "@$,")) (re.++ ((_ re.loop 5 8) (str.to_re "j\\x")) (re.++ ((_ re.loop 5 14) (str.to_re "|9x")) ((_ re.loop 5 10) (str.to_re "Y")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 13) (str.to_re "yh.")) (re.++ ((_ re.loop 1 15) (str.to_re "6")) (re.++ ((_ re.loop 2 9) (str.to_re "C")) ((_ re.loop 3 7) (str.to_re "LBM")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 3 19) (str.to_re "Z")) (re.++ ((_ re.loop 3 17) (str.to_re "MD5")) (re.++ ((_ re.loop 4 14) (str.to_re "NGD")) ((_ re.loop 2 20) (str.to_re "rU7")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
