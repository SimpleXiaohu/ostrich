(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 20) (str.to_re "*A(")) (re.++ ((_ re.loop 0 15) (str.to_re "1yN")) (re.++ ((_ re.loop 4 19) (str.to_re "==")) ((_ re.loop 2 14) (str.to_re "dN_")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 7) (str.to_re "/@K")) (re.++ ((_ re.loop 0 20) (str.to_re "O[")) (re.++ ((_ re.loop 3 6) (str.to_re "Ex")) ((_ re.loop 3 18) (str.to_re "w6")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 12) (str.to_re "L")) (re.++ ((_ re.loop 3 19) (str.to_re "ZqH")) (re.++ ((_ re.loop 1 12) (str.to_re "{U2")) ((_ re.loop 0 18) (str.to_re "f")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 3 12) (str.to_re "PY")) (re.++ ((_ re.loop 2 14) (str.to_re "?'")) (re.++ ((_ re.loop 2 5) (str.to_re "vP")) ((_ re.loop 1 7) (str.to_re "`")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
