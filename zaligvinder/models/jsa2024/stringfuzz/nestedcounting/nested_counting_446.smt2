(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 13) (str.to_re ",n%")) (re.++ ((_ re.loop 1 12) (str.to_re "u")) (re.++ ((_ re.loop 3 13) (str.to_re "U")) ((_ re.loop 5 16) (str.to_re "*48")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 10) (str.to_re "G5")) (re.++ ((_ re.loop 0 12) (str.to_re ";8:")) (re.++ ((_ re.loop 0 15) (str.to_re "xIg")) ((_ re.loop 3 20) (str.to_re "xr\u0022")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 17) (str.to_re "9")) (re.++ ((_ re.loop 4 18) (str.to_re ">v")) (re.++ ((_ re.loop 4 8) (str.to_re ".E")) ((_ re.loop 1 9) (str.to_re "Uh")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 0 5) (str.to_re "HMN")) (re.++ ((_ re.loop 3 8) (str.to_re "Kze")) (re.++ ((_ re.loop 1 14) (str.to_re "Q9P")) ((_ re.loop 2 20) (str.to_re "?")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
