(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 20) (str.to_re "_")) (re.++ ((_ re.loop 1 11) (str.to_re ">!")) (re.++ ((_ re.loop 1 13) (str.to_re "G>W")) ((_ re.loop 5 8) (str.to_re "5Z")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 12) (str.to_re "7O.")) (re.++ ((_ re.loop 1 20) (str.to_re "8")) (re.++ ((_ re.loop 1 5) (str.to_re "i")) ((_ re.loop 3 5) (str.to_re "B")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 14) (str.to_re "b")) (re.++ ((_ re.loop 4 18) (str.to_re "XA;")) (re.++ ((_ re.loop 3 7) (str.to_re "fj7")) ((_ re.loop 4 16) (str.to_re "O/")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 0 12) (str.to_re "2j")) (re.++ ((_ re.loop 1 15) (str.to_re "Qgz")) (re.++ ((_ re.loop 1 6) (str.to_re "RhD")) ((_ re.loop 3 9) (str.to_re "Al<")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
