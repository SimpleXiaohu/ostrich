(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 5) (str.to_re "~")) (re.++ ((_ re.loop 5 15) (str.to_re ".gj")) (re.++ ((_ re.loop 5 9) (str.to_re "X")) ((_ re.loop 0 15) (str.to_re "ez")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 8) (str.to_re "/F")) (re.++ ((_ re.loop 3 20) (str.to_re "Wr")) (re.++ ((_ re.loop 4 13) (str.to_re "^R")) ((_ re.loop 2 8) (str.to_re "Je")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 5 18) (str.to_re "Zt")) (re.++ ((_ re.loop 4 6) (str.to_re "bz/")) (re.++ ((_ re.loop 2 20) (str.to_re "n")) ((_ re.loop 0 10) (str.to_re "^")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 5 9) (str.to_re "-2")) (re.++ ((_ re.loop 1 10) (str.to_re "tY")) (re.++ ((_ re.loop 2 8) (str.to_re "\\")) ((_ re.loop 0 8) (str.to_re "Z")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
