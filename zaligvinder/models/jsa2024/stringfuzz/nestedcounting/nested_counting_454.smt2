(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 3 11) (str.to_re "l")) (re.++ ((_ re.loop 1 5) (str.to_re "GB9")) (re.++ ((_ re.loop 5 15) (str.to_re "MJ\u0022")) ((_ re.loop 5 16) (str.to_re "bP")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 17) (str.to_re "E=")) (re.++ ((_ re.loop 3 16) (str.to_re "%")) (re.++ ((_ re.loop 2 13) (str.to_re "Kc@")) ((_ re.loop 3 14) (str.to_re "J")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 16) (str.to_re "fV")) (re.++ ((_ re.loop 0 20) (str.to_re "\\m,")) (re.++ ((_ re.loop 4 6) (str.to_re "J")) ((_ re.loop 0 17) (str.to_re ":(.")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 2 17) (str.to_re "Xq")) (re.++ ((_ re.loop 2 15) (str.to_re ">")) (re.++ ((_ re.loop 1 6) (str.to_re "M'")) ((_ re.loop 4 20) (str.to_re "t")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
