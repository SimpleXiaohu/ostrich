(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 14) (str.to_re "wA")) (re.++ ((_ re.loop 5 8) (str.to_re "zz?")) (re.++ ((_ re.loop 0 10) (str.to_re "<")) ((_ re.loop 0 20) (str.to_re "J")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 6) (str.to_re ";Hn")) (re.++ ((_ re.loop 5 15) (str.to_re ",")) (re.++ ((_ re.loop 1 6) (str.to_re "^Q$")) ((_ re.loop 1 12) (str.to_re "U")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 6) (str.to_re "'pN")) (re.++ ((_ re.loop 4 13) (str.to_re "07")) (re.++ ((_ re.loop 4 16) (str.to_re "ye")) ((_ re.loop 2 16) (str.to_re "%")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 4 6) (str.to_re "1]")) (re.++ ((_ re.loop 2 6) (str.to_re "F")) (re.++ ((_ re.loop 3 12) (str.to_re "L")) ((_ re.loop 5 20) (str.to_re "fQ7")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
