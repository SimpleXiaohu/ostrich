(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 6) (str.to_re "n")) (re.++ ((_ re.loop 3 8) (str.to_re "r")) (re.++ ((_ re.loop 2 19) (str.to_re ",")) ((_ re.loop 5 14) (str.to_re ":'")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 12) (str.to_re "P")) (re.++ ((_ re.loop 4 19) (str.to_re "H[")) (re.++ ((_ re.loop 3 11) (str.to_re "G")) ((_ re.loop 4 7) (str.to_re "dVE")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 13) (str.to_re ",")) (re.++ ((_ re.loop 3 8) (str.to_re "9`1")) (re.++ ((_ re.loop 0 20) (str.to_re "nk")) ((_ re.loop 1 15) (str.to_re "eAi")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 5 8) (str.to_re "P[")) (re.++ ((_ re.loop 4 11) (str.to_re "X")) (re.++ ((_ re.loop 0 20) (str.to_re "K")) ((_ re.loop 0 18) (str.to_re "4M")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
