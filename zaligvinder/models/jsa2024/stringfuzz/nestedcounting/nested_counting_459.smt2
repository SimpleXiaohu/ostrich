(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 19) (str.to_re "M[h")) (re.++ ((_ re.loop 3 17) (str.to_re "o2")) (re.++ ((_ re.loop 1 16) (str.to_re "Z")) ((_ re.loop 2 16) (str.to_re "eV")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 10) (str.to_re "o/")) (re.++ ((_ re.loop 2 9) (str.to_re "d")) (re.++ ((_ re.loop 1 18) (str.to_re "T")) ((_ re.loop 4 7) (str.to_re "bL")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 15) (str.to_re "c")) (re.++ ((_ re.loop 0 20) (str.to_re "Loi")) (re.++ ((_ re.loop 0 16) (str.to_re "i6'")) ((_ re.loop 2 19) (str.to_re "M,Z")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 2 8) (str.to_re "(")) (re.++ ((_ re.loop 3 15) (str.to_re "6}U")) (re.++ ((_ re.loop 4 12) (str.to_re "U#h")) ((_ re.loop 1 12) (str.to_re "E")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
