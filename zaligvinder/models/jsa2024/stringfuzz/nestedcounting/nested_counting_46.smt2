(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 5 11) (str.to_re "d)")) (re.++ ((_ re.loop 5 19) (str.to_re "a")) (re.++ ((_ re.loop 4 9) (str.to_re "L]")) ((_ re.loop 3 8) (str.to_re "<")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 5 20) (str.to_re ";$")) (re.++ ((_ re.loop 2 9) (str.to_re "c\\,")) (re.++ ((_ re.loop 3 7) (str.to_re "UH")) ((_ re.loop 1 13) (str.to_re "DlY")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 15) (str.to_re "Dz9")) (re.++ ((_ re.loop 4 20) (str.to_re "fOo")) (re.++ ((_ re.loop 1 17) (str.to_re "kj")) ((_ re.loop 3 6) (str.to_re "xtR")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 1 20) (str.to_re "8")) (re.++ ((_ re.loop 0 17) (str.to_re "'?")) (re.++ ((_ re.loop 0 13) (str.to_re "Xf!")) ((_ re.loop 2 19) (str.to_re "Kh8")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
