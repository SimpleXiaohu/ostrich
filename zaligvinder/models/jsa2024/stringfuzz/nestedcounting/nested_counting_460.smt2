(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 18) (str.to_re "h_")) (re.++ ((_ re.loop 0 18) (str.to_re "B")) (re.++ ((_ re.loop 0 9) (str.to_re "Cn1")) ((_ re.loop 2 9) (str.to_re "Ybh")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 7) (str.to_re "O")) (re.++ ((_ re.loop 0 15) (str.to_re "]")) (re.++ ((_ re.loop 5 15) (str.to_re "5/")) ((_ re.loop 1 7) (str.to_re "mT")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 0 8) (str.to_re "|%>")) (re.++ ((_ re.loop 2 18) (str.to_re "t0")) (re.++ ((_ re.loop 5 6) (str.to_re "1")) ((_ re.loop 5 16) (str.to_re "^hc")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 3 17) (str.to_re "#")) (re.++ ((_ re.loop 4 13) (str.to_re "M5")) (re.++ ((_ re.loop 2 16) (str.to_re "(")) ((_ re.loop 2 18) (str.to_re "O,u")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
