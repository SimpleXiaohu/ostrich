(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 15) (str.to_re "d4s")) (re.++ ((_ re.loop 1 5) (str.to_re "[63")) (re.++ ((_ re.loop 3 5) (str.to_re ";z0")) ((_ re.loop 1 6) (str.to_re "Ec")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 6) (str.to_re "Q)7")) (re.++ ((_ re.loop 1 12) (str.to_re "+C")) (re.++ ((_ re.loop 0 11) (str.to_re "o.")) ((_ re.loop 1 14) (str.to_re ".")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 11) (str.to_re ">N")) (re.++ ((_ re.loop 4 18) (str.to_re "}")) (re.++ ((_ re.loop 0 12) (str.to_re "t")) ((_ re.loop 0 13) (str.to_re "VA9")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 0 11) (str.to_re "^6:")) (re.++ ((_ re.loop 3 10) (str.to_re "D")) (re.++ ((_ re.loop 0 12) (str.to_re "Q")) ((_ re.loop 3 13) (str.to_re "5")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
