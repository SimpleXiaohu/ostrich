(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 3 7) (str.to_re "RU")) (re.++ ((_ re.loop 3 6) (str.to_re "(t")) (re.++ ((_ re.loop 3 16) (str.to_re "h{")) ((_ re.loop 1 18) (str.to_re "%")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 18) (str.to_re "8")) (re.++ ((_ re.loop 2 12) (str.to_re "|")) (re.++ ((_ re.loop 3 7) (str.to_re "{,R")) ((_ re.loop 0 10) (str.to_re "b")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 8) (str.to_re "W")) (re.++ ((_ re.loop 3 20) (str.to_re "ig")) (re.++ ((_ re.loop 4 20) (str.to_re "9]")) ((_ re.loop 1 5) (str.to_re "+o")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 1 10) (str.to_re "F")) (re.++ ((_ re.loop 1 6) (str.to_re "!{")) (re.++ ((_ re.loop 5 10) (str.to_re "=%")) ((_ re.loop 5 5) (str.to_re "e")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
