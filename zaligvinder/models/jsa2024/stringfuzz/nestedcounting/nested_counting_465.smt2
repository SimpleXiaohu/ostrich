(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 14) (str.to_re "}FP")) (re.++ ((_ re.loop 5 5) (str.to_re "9")) (re.++ ((_ re.loop 0 11) (str.to_re "reh")) ((_ re.loop 5 5) (str.to_re "1B")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 7) (str.to_re "K")) (re.++ ((_ re.loop 4 17) (str.to_re "vSV")) (re.++ ((_ re.loop 2 19) (str.to_re "]q`")) ((_ re.loop 3 18) (str.to_re "M")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 7) (str.to_re "T?G")) (re.++ ((_ re.loop 3 7) (str.to_re "_=")) (re.++ ((_ re.loop 2 11) (str.to_re "V")) ((_ re.loop 0 8) (str.to_re "/")))))) ((_ re.loop 0 1) (re.++ ((_ re.loop 5 17) (str.to_re "0#")) (re.++ ((_ re.loop 1 20) (str.to_re "XL")) (re.++ ((_ re.loop 5 18) (str.to_re ":")) ((_ re.loop 1 16) (str.to_re "{f")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
