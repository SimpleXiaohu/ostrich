(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 5 18) (str.to_re "e,s")) (re.++ ((_ re.loop 0 5) (str.to_re "q")) (re.++ ((_ re.loop 4 19) (str.to_re "R")) ((_ re.loop 0 7) (str.to_re "Okp")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 9) (str.to_re "O")) (re.++ ((_ re.loop 1 6) (str.to_re ",y")) (re.++ ((_ re.loop 0 13) (str.to_re "|")) ((_ re.loop 5 11) (str.to_re "S")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 5 19) (str.to_re "&f")) (re.++ ((_ re.loop 2 8) (str.to_re "zO")) (re.++ ((_ re.loop 5 13) (str.to_re "66?")) ((_ re.loop 3 20) (str.to_re "Ch+")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 4 7) (str.to_re "e!>")) (re.++ ((_ re.loop 4 17) (str.to_re "l%")) (re.++ ((_ re.loop 4 20) (str.to_re "9")) ((_ re.loop 4 12) (str.to_re "BT")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
