(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 19) (str.to_re "\\")) (re.++ ((_ re.loop 2 20) (str.to_re "<B@")) (re.++ ((_ re.loop 1 6) (str.to_re "T")) ((_ re.loop 0 16) (str.to_re "-Z")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 14) (str.to_re "g")) (re.++ ((_ re.loop 2 9) (str.to_re "4")) (re.++ ((_ re.loop 5 13) (str.to_re ".~")) ((_ re.loop 4 16) (str.to_re "$")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 12) (str.to_re "F?U")) (re.++ ((_ re.loop 1 13) (str.to_re "I]")) (re.++ ((_ re.loop 1 16) (str.to_re "q")) ((_ re.loop 0 11) (str.to_re "L8")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 3 14) (str.to_re "&")) (re.++ ((_ re.loop 4 6) (str.to_re "48")) (re.++ ((_ re.loop 3 10) (str.to_re "O")) ((_ re.loop 3 13) (str.to_re "Rl7")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
