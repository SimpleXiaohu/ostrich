(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 15) (str.to_re "14")) (re.++ ((_ re.loop 5 17) (str.to_re "jNY")) (re.++ ((_ re.loop 4 5) (str.to_re "H")) ((_ re.loop 1 7) (str.to_re "|")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 1 14) (str.to_re "WLE")) (re.++ ((_ re.loop 5 9) (str.to_re "6h")) (re.++ ((_ re.loop 0 14) (str.to_re "/ll")) ((_ re.loop 4 8) (str.to_re "3X")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 0 16) (str.to_re "OYv")) (re.++ ((_ re.loop 1 7) (str.to_re "[8X")) (re.++ ((_ re.loop 5 11) (str.to_re "\\sl")) ((_ re.loop 5 18) (str.to_re "W")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 3 9) (str.to_re "VQZ")) (re.++ ((_ re.loop 4 20) (str.to_re "IA")) (re.++ ((_ re.loop 5 7) (str.to_re "FR")) ((_ re.loop 0 6) (str.to_re "8Z")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
