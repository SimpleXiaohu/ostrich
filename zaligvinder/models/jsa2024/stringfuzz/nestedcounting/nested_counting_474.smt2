(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 13) (str.to_re "hW3")) (re.++ ((_ re.loop 1 7) (str.to_re "/")) (re.++ ((_ re.loop 4 9) (str.to_re "2T.")) ((_ re.loop 3 10) (str.to_re "Y")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 15) (str.to_re "<\\3")) (re.++ ((_ re.loop 0 6) (str.to_re "|.")) (re.++ ((_ re.loop 2 13) (str.to_re "ffD")) ((_ re.loop 4 15) (str.to_re "Sb")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 14) (str.to_re "e")) (re.++ ((_ re.loop 4 16) (str.to_re "0")) (re.++ ((_ re.loop 5 6) (str.to_re "G#")) ((_ re.loop 2 14) (str.to_re "#")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 0 10) (str.to_re "HR")) (re.++ ((_ re.loop 2 5) (str.to_re "6Co")) (re.++ ((_ re.loop 2 10) (str.to_re "f")) ((_ re.loop 3 20) (str.to_re "+f\\")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
