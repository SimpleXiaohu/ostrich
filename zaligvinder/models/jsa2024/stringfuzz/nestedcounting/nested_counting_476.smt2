(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 17) (str.to_re "s;")) (re.++ ((_ re.loop 5 16) (str.to_re "xE")) (re.++ ((_ re.loop 2 16) (str.to_re "_")) ((_ re.loop 1 12) (str.to_re "f")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 13) (str.to_re "L%>")) (re.++ ((_ re.loop 4 14) (str.to_re "G6B")) (re.++ ((_ re.loop 0 10) (str.to_re ")")) ((_ re.loop 1 9) (str.to_re "3@")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 7) (str.to_re ")iv")) (re.++ ((_ re.loop 4 15) (str.to_re ".)I")) (re.++ ((_ re.loop 1 9) (str.to_re ":")) ((_ re.loop 3 9) (str.to_re "v`d")))))) ((_ re.loop 0 1) (re.++ ((_ re.loop 0 17) (str.to_re "e`")) (re.++ ((_ re.loop 5 12) (str.to_re "F")) (re.++ ((_ re.loop 3 17) (str.to_re "H=V")) ((_ re.loop 3 5) (str.to_re "i")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
