(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 15) (str.to_re ";")) (re.++ ((_ re.loop 2 19) (str.to_re "&7")) (re.++ ((_ re.loop 3 7) (str.to_re "D}Z")) ((_ re.loop 2 6) (str.to_re ")S")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 16) (str.to_re "\\/")) (re.++ ((_ re.loop 0 16) (str.to_re "c")) (re.++ ((_ re.loop 0 8) (str.to_re "K")) ((_ re.loop 3 10) (str.to_re "h")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 9) (str.to_re "\\>#")) (re.++ ((_ re.loop 0 11) (str.to_re "%")) (re.++ ((_ re.loop 5 8) (str.to_re "!d")) ((_ re.loop 1 14) (str.to_re "/rM")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 4 12) (str.to_re "xg")) (re.++ ((_ re.loop 3 11) (str.to_re "h}")) (re.++ ((_ re.loop 3 8) (str.to_re "AI")) ((_ re.loop 5 14) (str.to_re "^Xn")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
