(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 14) (str.to_re "G")) (re.++ ((_ re.loop 0 12) (str.to_re "+")) (re.++ ((_ re.loop 1 11) (str.to_re "Q")) ((_ re.loop 0 15) (str.to_re "i`$")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 12) (str.to_re "{")) (re.++ ((_ re.loop 5 9) (str.to_re "}]y")) (re.++ ((_ re.loop 4 20) (str.to_re "c%")) ((_ re.loop 0 6) (str.to_re "G")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 4 20) (str.to_re "cs")) (re.++ ((_ re.loop 1 14) (str.to_re "_")) (re.++ ((_ re.loop 0 15) (str.to_re "D")) ((_ re.loop 0 5) (str.to_re "'U")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 0 10) (str.to_re "!c(")) (re.++ ((_ re.loop 5 16) (str.to_re "y|K")) (re.++ ((_ re.loop 1 13) (str.to_re "Nt-")) ((_ re.loop 5 11) (str.to_re "n")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
