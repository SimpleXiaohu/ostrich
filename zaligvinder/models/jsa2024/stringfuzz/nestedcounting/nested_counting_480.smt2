(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 2 8) (str.to_re "02")) (re.++ ((_ re.loop 0 10) (str.to_re "VFy")) (re.++ ((_ re.loop 2 8) (str.to_re "}v")) ((_ re.loop 2 7) (str.to_re "|C")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 7) (str.to_re "+")) (re.++ ((_ re.loop 5 19) (str.to_re "2")) (re.++ ((_ re.loop 1 11) (str.to_re "Om")) ((_ re.loop 3 20) (str.to_re "!")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 16) (str.to_re "3Q")) (re.++ ((_ re.loop 0 10) (str.to_re "Q")) (re.++ ((_ re.loop 2 17) (str.to_re "Pi")) ((_ re.loop 2 12) (str.to_re "H")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 3 18) (str.to_re "WjQ")) (re.++ ((_ re.loop 2 13) (str.to_re "PX")) (re.++ ((_ re.loop 0 7) (str.to_re "$")) ((_ re.loop 4 20) (str.to_re "*?")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
