(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 4 5) (str.to_re ":v")) (re.++ ((_ re.loop 4 13) (str.to_re "s%")) (re.++ ((_ re.loop 0 19) (str.to_re "i%o")) ((_ re.loop 2 13) (str.to_re ")e8")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 11) (str.to_re "F.")) (re.++ ((_ re.loop 4 13) (str.to_re "p")) (re.++ ((_ re.loop 4 16) (str.to_re "<JB")) ((_ re.loop 2 19) (str.to_re "qc")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 17) (str.to_re "!")) (re.++ ((_ re.loop 5 11) (str.to_re "Y")) (re.++ ((_ re.loop 5 11) (str.to_re "p")) ((_ re.loop 1 12) (str.to_re "3s")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 1 17) (str.to_re "QQ")) (re.++ ((_ re.loop 2 10) (str.to_re ";m")) (re.++ ((_ re.loop 1 10) (str.to_re "HO2")) ((_ re.loop 2 6) (str.to_re "${B")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
