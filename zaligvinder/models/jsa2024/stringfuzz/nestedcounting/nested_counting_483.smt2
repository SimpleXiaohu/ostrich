(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 5) (str.to_re "{")) (re.++ ((_ re.loop 5 15) (str.to_re "-<s")) (re.++ ((_ re.loop 1 17) (str.to_re "fh")) ((_ re.loop 1 7) (str.to_re "h")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 7) (str.to_re "p")) (re.++ ((_ re.loop 5 6) (str.to_re "d4F")) (re.++ ((_ re.loop 3 8) (str.to_re "`")) ((_ re.loop 2 7) (str.to_re "T")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 3 11) (str.to_re "uji")) (re.++ ((_ re.loop 3 20) (str.to_re "m")) (re.++ ((_ re.loop 0 13) (str.to_re "At(")) ((_ re.loop 5 11) (str.to_re "*7]")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 3 7) (str.to_re "B")) (re.++ ((_ re.loop 5 14) (str.to_re "kd")) (re.++ ((_ re.loop 3 18) (str.to_re "ek}")) ((_ re.loop 3 16) (str.to_re "6")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
