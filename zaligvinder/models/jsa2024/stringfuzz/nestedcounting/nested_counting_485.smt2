(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 0 20) (str.to_re "6m")) (re.++ ((_ re.loop 5 16) (str.to_re "N-=")) (re.++ ((_ re.loop 0 10) (str.to_re "9V")) ((_ re.loop 3 18) (str.to_re "vwx")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 13) (str.to_re "evK")) (re.++ ((_ re.loop 0 13) (str.to_re "L|")) (re.++ ((_ re.loop 5 6) (str.to_re "xw")) ((_ re.loop 2 6) (str.to_re "b;}")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 14) (str.to_re "6hH")) (re.++ ((_ re.loop 1 9) (str.to_re "D")) (re.++ ((_ re.loop 3 8) (str.to_re ";Z")) ((_ re.loop 1 14) (str.to_re "M")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 1 10) (str.to_re "%O")) (re.++ ((_ re.loop 1 19) (str.to_re "1")) (re.++ ((_ re.loop 0 13) (str.to_re "]u")) ((_ re.loop 5 20) (str.to_re "x")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
