(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 18) (str.to_re "8|")) (re.++ ((_ re.loop 4 8) (str.to_re "M")) (re.++ ((_ re.loop 3 10) (str.to_re "\\p")) ((_ re.loop 5 11) (str.to_re "W\\g")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 3 16) (str.to_re "B")) (re.++ ((_ re.loop 4 6) (str.to_re "_")) (re.++ ((_ re.loop 1 8) (str.to_re "W")) ((_ re.loop 5 17) (str.to_re "T,\u0022")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 3 6) (str.to_re "c")) (re.++ ((_ re.loop 2 18) (str.to_re "LH")) (re.++ ((_ re.loop 5 6) (str.to_re "i`")) ((_ re.loop 1 13) (str.to_re "y\u0022]")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 5 11) (str.to_re "~jj")) (re.++ ((_ re.loop 5 11) (str.to_re "M:K")) (re.++ ((_ re.loop 4 19) (str.to_re "t{K")) ((_ re.loop 2 12) (str.to_re "6Z")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
