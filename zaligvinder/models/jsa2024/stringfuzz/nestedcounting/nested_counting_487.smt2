(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 18) (str.to_re "NXp")) (re.++ ((_ re.loop 2 15) (str.to_re "!r}")) (re.++ ((_ re.loop 1 8) (str.to_re "}/")) ((_ re.loop 2 17) (str.to_re ";")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 16) (str.to_re "|Z7")) (re.++ ((_ re.loop 2 7) (str.to_re "S*S")) (re.++ ((_ re.loop 1 15) (str.to_re "^L0")) ((_ re.loop 1 9) (str.to_re "{")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 11) (str.to_re "kG")) (re.++ ((_ re.loop 4 13) (str.to_re "C")) (re.++ ((_ re.loop 1 14) (str.to_re ";")) ((_ re.loop 5 10) (str.to_re "`u")))))) ((_ re.loop 0 2) (re.++ ((_ re.loop 2 20) (str.to_re "HN\u0022")) (re.++ ((_ re.loop 2 13) (str.to_re "e")) (re.++ ((_ re.loop 4 11) (str.to_re "</")) ((_ re.loop 3 9) (str.to_re "o")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
