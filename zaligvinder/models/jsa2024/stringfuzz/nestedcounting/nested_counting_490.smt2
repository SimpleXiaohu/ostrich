(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 1 8) (str.to_re "o4;")) (re.++ ((_ re.loop 4 17) (str.to_re "]")) (re.++ ((_ re.loop 3 7) (str.to_re "lAy")) ((_ re.loop 3 16) (str.to_re "pa")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 5) (str.to_re "T`g")) (re.++ ((_ re.loop 4 5) (str.to_re "tr")) (re.++ ((_ re.loop 4 20) (str.to_re "-")) ((_ re.loop 3 6) (str.to_re "PR")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 5) (str.to_re "]1")) (re.++ ((_ re.loop 0 6) (str.to_re "2")) (re.++ ((_ re.loop 5 10) (str.to_re "@")) ((_ re.loop 2 17) (str.to_re ",")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 3 12) (str.to_re "0")) (re.++ ((_ re.loop 1 20) (str.to_re "m")) (re.++ ((_ re.loop 1 13) (str.to_re "w4")) ((_ re.loop 4 9) (str.to_re "Hq(")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
