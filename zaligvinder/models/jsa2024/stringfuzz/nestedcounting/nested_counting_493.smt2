(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 11) (str.to_re "<(I")) (re.++ ((_ re.loop 0 16) (str.to_re "kyQ")) (re.++ ((_ re.loop 0 12) (str.to_re "B1")) ((_ re.loop 1 10) (str.to_re "^&")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 7) (str.to_re "h;")) (re.++ ((_ re.loop 4 9) (str.to_re "CiC")) (re.++ ((_ re.loop 2 19) (str.to_re "}")) ((_ re.loop 2 16) (str.to_re "VB4")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 3 14) (str.to_re "KE")) (re.++ ((_ re.loop 2 20) (str.to_re "+Bl")) (re.++ ((_ re.loop 4 5) (str.to_re "+")) ((_ re.loop 5 18) (str.to_re "{Z0")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 0 6) (str.to_re "sG)")) (re.++ ((_ re.loop 4 17) (str.to_re "t+")) (re.++ ((_ re.loop 5 7) (str.to_re "P1f")) ((_ re.loop 5 7) (str.to_re "&")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
