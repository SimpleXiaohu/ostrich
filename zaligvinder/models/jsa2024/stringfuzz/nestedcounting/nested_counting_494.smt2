(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 17) (str.to_re "R(")) (re.++ ((_ re.loop 0 12) (str.to_re "_nC")) (re.++ ((_ re.loop 4 10) (str.to_re "&/m")) ((_ re.loop 5 19) (str.to_re "#")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 2 15) (str.to_re "_F)")) (re.++ ((_ re.loop 4 13) (str.to_re "w")) (re.++ ((_ re.loop 4 13) (str.to_re "?`")) ((_ re.loop 2 5) (str.to_re "weO")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 6) (str.to_re "%")) (re.++ ((_ re.loop 0 15) (str.to_re "(")) (re.++ ((_ re.loop 1 7) (str.to_re "G")) ((_ re.loop 0 9) (str.to_re "F-6")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 3 7) (str.to_re "Q^")) (re.++ ((_ re.loop 3 15) (str.to_re "V")) (re.++ ((_ re.loop 5 8) (str.to_re "fve")) ((_ re.loop 0 16) (str.to_re "OL")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
