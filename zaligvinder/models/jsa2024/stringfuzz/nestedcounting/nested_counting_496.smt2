(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 8) (str.to_re ">US")) (re.++ ((_ re.loop 3 11) (str.to_re "Yfg")) (re.++ ((_ re.loop 4 9) (str.to_re "F")) ((_ re.loop 4 8) (str.to_re "4")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 9) (str.to_re "'m")) (re.++ ((_ re.loop 5 8) (str.to_re ",")) (re.++ ((_ re.loop 2 17) (str.to_re "#")) ((_ re.loop 0 5) (str.to_re "\\<")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 6) (str.to_re "O$")) (re.++ ((_ re.loop 5 8) (str.to_re "nt")) (re.++ ((_ re.loop 5 13) (str.to_re "$")) ((_ re.loop 4 5) (str.to_re "`")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 3 18) (str.to_re "Q{")) (re.++ ((_ re.loop 3 6) (str.to_re "=")) (re.++ ((_ re.loop 2 14) (str.to_re "Dn[")) ((_ re.loop 0 15) (str.to_re "(")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
