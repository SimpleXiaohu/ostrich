(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 10) (str.to_re "HHG")) (re.++ ((_ re.loop 1 17) (str.to_re "Ee]")) (re.++ ((_ re.loop 2 12) (str.to_re "A")) ((_ re.loop 3 15) (str.to_re ";")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 11) (str.to_re "P")) (re.++ ((_ re.loop 1 16) (str.to_re "\u0022u")) (re.++ ((_ re.loop 5 9) (str.to_re "}$j")) ((_ re.loop 5 6) (str.to_re "L$")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 11) (str.to_re "~")) (re.++ ((_ re.loop 5 15) (str.to_re "o=")) (re.++ ((_ re.loop 4 13) (str.to_re "]")) ((_ re.loop 4 18) (str.to_re "[")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 4 9) (str.to_re "a")) (re.++ ((_ re.loop 4 14) (str.to_re "p%")) (re.++ ((_ re.loop 0 11) (str.to_re "lo")) ((_ re.loop 4 14) (str.to_re "Az")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
