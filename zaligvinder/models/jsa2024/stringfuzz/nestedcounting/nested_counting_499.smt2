(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 1 12) (str.to_re "(")) (re.++ ((_ re.loop 5 8) (str.to_re "NsE")) (re.++ ((_ re.loop 1 17) (str.to_re "}2")) ((_ re.loop 4 13) (str.to_re "G")))))) (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 5 6) (str.to_re "_")) (re.++ ((_ re.loop 4 20) (str.to_re "N")) (re.++ ((_ re.loop 5 13) (str.to_re "q1")) ((_ re.loop 2 15) (str.to_re ":")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 4 6) (str.to_re "6")) (re.++ ((_ re.loop 4 8) (str.to_re "E")) (re.++ ((_ re.loop 0 11) (str.to_re "<")) ((_ re.loop 4 5) (str.to_re "NfA")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 4 19) (str.to_re "M")) (re.++ ((_ re.loop 2 13) (str.to_re "4")) (re.++ ((_ re.loop 5 13) (str.to_re "JfL")) ((_ re.loop 1 16) (str.to_re "-jy")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
