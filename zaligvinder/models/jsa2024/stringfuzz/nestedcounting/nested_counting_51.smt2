(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 18) (str.to_re "y")) (re.++ ((_ re.loop 1 7) (str.to_re ">3t")) (re.++ ((_ re.loop 3 10) (str.to_re "C")) ((_ re.loop 4 20) (str.to_re "Aa")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 0 7) (str.to_re "{7")) (re.++ ((_ re.loop 5 14) (str.to_re "_1!")) (re.++ ((_ re.loop 2 15) (str.to_re "M$T")) ((_ re.loop 1 10) (str.to_re "s[")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 3 18) (str.to_re "|f")) (re.++ ((_ re.loop 4 6) (str.to_re "MO")) (re.++ ((_ re.loop 1 14) (str.to_re "0Pk")) ((_ re.loop 0 12) (str.to_re "W#")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 4 10) (str.to_re "q")) (re.++ ((_ re.loop 2 13) (str.to_re "$Fk")) (re.++ ((_ re.loop 3 16) (str.to_re "jv?")) ((_ re.loop 4 10) (str.to_re "]Ga")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
