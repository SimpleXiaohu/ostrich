(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 14) (str.to_re "L+=")) (re.++ ((_ re.loop 5 20) (str.to_re "|~q")) (re.++ ((_ re.loop 0 5) (str.to_re "h'N")) ((_ re.loop 0 9) (str.to_re "?")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 17) (str.to_re "|}>")) (re.++ ((_ re.loop 0 16) (str.to_re "ex#")) (re.++ ((_ re.loop 4 11) (str.to_re "Z")) ((_ re.loop 1 15) (str.to_re "}?h")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 5) (str.to_re "jUb")) (re.++ ((_ re.loop 2 6) (str.to_re "4n")) (re.++ ((_ re.loop 1 13) (str.to_re "1)")) ((_ re.loop 2 20) (str.to_re "&L6")))))) ((_ re.loop 0 3) (re.++ ((_ re.loop 4 16) (str.to_re "4W1")) (re.++ ((_ re.loop 3 16) (str.to_re "yGY")) (re.++ ((_ re.loop 2 9) (str.to_re "z")) ((_ re.loop 2 8) (str.to_re "e")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
