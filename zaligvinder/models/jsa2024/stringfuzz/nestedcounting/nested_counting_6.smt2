(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 0 5) (str.to_re "iD")) (re.++ ((_ re.loop 5 9) (str.to_re "]x")) (re.++ ((_ re.loop 1 19) (str.to_re "{&")) ((_ re.loop 1 13) (str.to_re "@)")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 4 17) (str.to_re "`H")) (re.++ ((_ re.loop 2 6) (str.to_re "D")) (re.++ ((_ re.loop 2 10) (str.to_re "Q")) ((_ re.loop 2 6) (str.to_re "(")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 20) (str.to_re "3")) (re.++ ((_ re.loop 1 9) (str.to_re "iOl")) (re.++ ((_ re.loop 4 5) (str.to_re ";z7")) ((_ re.loop 2 9) (str.to_re "5")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 3 11) (str.to_re ".JQ")) (re.++ ((_ re.loop 3 13) (str.to_re "E")) (re.++ ((_ re.loop 0 12) (str.to_re "e")) ((_ re.loop 1 18) (str.to_re "O")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
