(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 5 8) (str.to_re "8Nd")) (re.++ ((_ re.loop 3 16) (str.to_re "zB")) (re.++ ((_ re.loop 0 17) (str.to_re "f#7")) ((_ re.loop 2 10) (str.to_re "vs")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 5 20) (str.to_re "W!.")) (re.++ ((_ re.loop 1 9) (str.to_re "7")) (re.++ ((_ re.loop 5 9) (str.to_re "Y")) ((_ re.loop 4 7) (str.to_re "=}X")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 3 14) (str.to_re "^9")) (re.++ ((_ re.loop 3 18) (str.to_re "R")) (re.++ ((_ re.loop 0 9) (str.to_re "144")) ((_ re.loop 1 19) (str.to_re "`u&")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 0 20) (str.to_re "s")) (re.++ ((_ re.loop 4 6) (str.to_re "*")) (re.++ ((_ re.loop 0 20) (str.to_re "H")) ((_ re.loop 3 13) (str.to_re "mr_")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
