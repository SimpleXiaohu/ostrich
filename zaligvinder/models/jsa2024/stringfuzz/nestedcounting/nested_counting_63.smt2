(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 3 6) (str.to_re "X")) (re.++ ((_ re.loop 2 9) (str.to_re "L>")) (re.++ ((_ re.loop 1 12) (str.to_re "EV7")) ((_ re.loop 1 9) (str.to_re "t+d")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 2 14) (str.to_re "^")) (re.++ ((_ re.loop 3 12) (str.to_re "k")) (re.++ ((_ re.loop 0 12) (str.to_re "h")) ((_ re.loop 0 8) (str.to_re "/!")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 4 9) (str.to_re ".}z")) (re.++ ((_ re.loop 2 10) (str.to_re "L")) (re.++ ((_ re.loop 1 8) (str.to_re "J3d")) ((_ re.loop 4 19) (str.to_re "GRX")))))) ((_ re.loop 1 1) (re.++ ((_ re.loop 4 9) (str.to_re "[7")) (re.++ ((_ re.loop 4 13) (str.to_re "1<")) (re.++ ((_ re.loop 0 8) (str.to_re "|^#")) ((_ re.loop 1 6) (str.to_re "h@")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
