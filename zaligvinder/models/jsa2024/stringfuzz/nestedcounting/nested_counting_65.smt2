(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 4 15) (str.to_re "4!")) (re.++ ((_ re.loop 2 16) (str.to_re "R#_")) (re.++ ((_ re.loop 5 18) (str.to_re "-")) ((_ re.loop 2 16) (str.to_re "vE9")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 11) (str.to_re "(")) (re.++ ((_ re.loop 2 13) (str.to_re "aj")) (re.++ ((_ re.loop 1 14) (str.to_re "p\u0022F")) ((_ re.loop 2 12) (str.to_re "wCw")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 16) (str.to_re "g@i")) (re.++ ((_ re.loop 5 13) (str.to_re "Vx")) (re.++ ((_ re.loop 1 16) (str.to_re "X5")) ((_ re.loop 3 14) (str.to_re "'")))))) ((_ re.loop 0 1) (re.++ ((_ re.loop 4 18) (str.to_re "ZC")) (re.++ ((_ re.loop 2 19) (str.to_re "//\\")) (re.++ ((_ re.loop 2 12) (str.to_re "_.Z")) ((_ re.loop 4 18) (str.to_re "#=&")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
