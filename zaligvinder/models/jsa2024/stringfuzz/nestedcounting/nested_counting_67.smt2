(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 6) (str.to_re "zE")) (re.++ ((_ re.loop 5 8) (str.to_re "%|")) (re.++ ((_ re.loop 4 16) (str.to_re "+")) ((_ re.loop 1 15) (str.to_re "&2;")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 4 9) (str.to_re ":")) (re.++ ((_ re.loop 0 16) (str.to_re "Yvr")) (re.++ ((_ re.loop 2 10) (str.to_re "K/V")) ((_ re.loop 1 7) (str.to_re "x<")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 2 18) (str.to_re "'')")) (re.++ ((_ re.loop 2 19) (str.to_re "Wk")) (re.++ ((_ re.loop 0 16) (str.to_re "q")) ((_ re.loop 1 20) (str.to_re "3xN")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 5 10) (str.to_re "}")) (re.++ ((_ re.loop 2 19) (str.to_re ".0")) (re.++ ((_ re.loop 3 16) (str.to_re "\\e")) ((_ re.loop 2 18) (str.to_re "1")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
