(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 5) (str.to_re "m~#")) (re.++ ((_ re.loop 4 8) (str.to_re "(R<")) (re.++ ((_ re.loop 4 15) (str.to_re "X+")) ((_ re.loop 5 10) (str.to_re "ss")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 15) (str.to_re "W")) (re.++ ((_ re.loop 0 5) (str.to_re "r")) (re.++ ((_ re.loop 5 20) (str.to_re "x")) ((_ re.loop 3 12) (str.to_re "qzD")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 6) (str.to_re "F")) (re.++ ((_ re.loop 5 18) (str.to_re "J")) (re.++ ((_ re.loop 2 16) (str.to_re "A@")) ((_ re.loop 5 17) (str.to_re "Zo")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 1 11) (str.to_re "pU")) (re.++ ((_ re.loop 3 13) (str.to_re "3")) (re.++ ((_ re.loop 1 8) (str.to_re "xtc")) ((_ re.loop 3 17) (str.to_re "w4N")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
