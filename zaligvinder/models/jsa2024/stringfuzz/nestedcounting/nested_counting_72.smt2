(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 2 7) (str.to_re "Bio")) (re.++ ((_ re.loop 4 12) (str.to_re "]L\u0022")) (re.++ ((_ re.loop 3 8) (str.to_re ":")) ((_ re.loop 4 12) (str.to_re "k")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 5) (str.to_re "=")) (re.++ ((_ re.loop 1 6) (str.to_re "_n")) (re.++ ((_ re.loop 3 18) (str.to_re "u53")) ((_ re.loop 2 7) (str.to_re "plt")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 10) (str.to_re "D[`")) (re.++ ((_ re.loop 4 8) (str.to_re "\u0022$")) (re.++ ((_ re.loop 1 14) (str.to_re "r*e")) ((_ re.loop 2 13) (str.to_re "|H")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 1 12) (str.to_re "0")) (re.++ ((_ re.loop 5 14) (str.to_re "4g")) (re.++ ((_ re.loop 2 17) (str.to_re "yf7")) ((_ re.loop 0 9) (str.to_re "a!")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
