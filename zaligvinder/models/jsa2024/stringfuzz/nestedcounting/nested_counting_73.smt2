(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 0 20) (str.to_re "%4")) (re.++ ((_ re.loop 0 15) (str.to_re "~")) (re.++ ((_ re.loop 2 10) (str.to_re "U")) ((_ re.loop 3 20) (str.to_re "DFl")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 17) (str.to_re "9")) (re.++ ((_ re.loop 2 16) (str.to_re "D")) (re.++ ((_ re.loop 5 9) (str.to_re "s-")) ((_ re.loop 3 7) (str.to_re "?")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 2 5) (str.to_re "s}")) (re.++ ((_ re.loop 5 18) (str.to_re "Q")) (re.++ ((_ re.loop 3 7) (str.to_re "P")) ((_ re.loop 5 10) (str.to_re ">Z")))))) ((_ re.loop 1 6) (re.++ ((_ re.loop 2 18) (str.to_re "UC.")) (re.++ ((_ re.loop 4 15) (str.to_re "j")) (re.++ ((_ re.loop 2 15) (str.to_re "{mF")) ((_ re.loop 0 14) (str.to_re "*")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
