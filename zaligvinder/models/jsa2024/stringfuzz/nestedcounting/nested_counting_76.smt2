(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 3 7) (str.to_re "wK")) (re.++ ((_ re.loop 3 17) (str.to_re "5")) (re.++ ((_ re.loop 1 6) (str.to_re "^")) ((_ re.loop 1 6) (str.to_re "D")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 20) (str.to_re "e1")) (re.++ ((_ re.loop 3 15) (str.to_re "'j")) (re.++ ((_ re.loop 3 6) (str.to_re "<")) ((_ re.loop 3 14) (str.to_re "z")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 0 19) (str.to_re "i")) (re.++ ((_ re.loop 3 15) (str.to_re "Z")) (re.++ ((_ re.loop 5 11) (str.to_re "bz")) ((_ re.loop 2 14) (str.to_re ">")))))) ((_ re.loop 0 4) (re.++ ((_ re.loop 0 11) (str.to_re "_-")) (re.++ ((_ re.loop 1 6) (str.to_re "w~>")) (re.++ ((_ re.loop 3 19) (str.to_re "t")) ((_ re.loop 3 7) (str.to_re "g")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
