(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 4 10) (str.to_re ">Ym")) (re.++ ((_ re.loop 3 14) (str.to_re "#VM")) (re.++ ((_ re.loop 3 6) (str.to_re "+")) ((_ re.loop 5 5) (str.to_re "|m")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 4 10) (str.to_re "<")) (re.++ ((_ re.loop 4 18) (str.to_re ":")) (re.++ ((_ re.loop 0 16) (str.to_re "G")) ((_ re.loop 2 10) (str.to_re "o")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 2 8) (str.to_re "BW9")) (re.++ ((_ re.loop 2 16) (str.to_re "=/")) (re.++ ((_ re.loop 0 8) (str.to_re "l's")) ((_ re.loop 1 19) (str.to_re "2d")))))) ((_ re.loop 0 5) (re.++ ((_ re.loop 4 6) (str.to_re "N*o")) (re.++ ((_ re.loop 4 6) (str.to_re "K{")) (re.++ ((_ re.loop 5 9) (str.to_re "k")) ((_ re.loop 2 10) (str.to_re "_O\u0022")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
