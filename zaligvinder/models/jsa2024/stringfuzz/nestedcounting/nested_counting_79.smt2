(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 0 14) (str.to_re "0tX")) (re.++ ((_ re.loop 0 11) (str.to_re "a1z")) (re.++ ((_ re.loop 4 16) (str.to_re "|<-")) ((_ re.loop 5 13) (str.to_re "0")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 2 9) (str.to_re "k")) (re.++ ((_ re.loop 1 17) (str.to_re "[T")) (re.++ ((_ re.loop 5 20) (str.to_re "bev")) ((_ re.loop 3 18) (str.to_re "Ya")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 3 7) (str.to_re "%u")) (re.++ ((_ re.loop 0 11) (str.to_re "9")) (re.++ ((_ re.loop 1 5) (str.to_re "n7a")) ((_ re.loop 1 9) (str.to_re "vC")))))) ((_ re.loop 1 5) (re.++ ((_ re.loop 5 6) (str.to_re "NG")) (re.++ ((_ re.loop 4 6) (str.to_re "f4")) (re.++ ((_ re.loop 1 18) (str.to_re "Gw")) ((_ re.loop 4 19) (str.to_re "W")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
