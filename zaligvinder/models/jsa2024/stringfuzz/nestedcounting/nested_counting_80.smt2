(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 2 8) (str.to_re "+Tm")) (re.++ ((_ re.loop 5 17) (str.to_re "7")) (re.++ ((_ re.loop 2 5) (str.to_re "q")) ((_ re.loop 3 17) (str.to_re "l")))))) (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 1 11) (str.to_re "Fwm")) (re.++ ((_ re.loop 1 7) (str.to_re "P")) (re.++ ((_ re.loop 2 5) (str.to_re "}x")) ((_ re.loop 2 11) (str.to_re "J")))))) (re.++ ((_ re.loop 1 2) (re.++ ((_ re.loop 5 9) (str.to_re "7r@")) (re.++ ((_ re.loop 4 5) (str.to_re "UQ")) (re.++ ((_ re.loop 0 14) (str.to_re "rO")) ((_ re.loop 1 17) (str.to_re "I")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 4 12) (str.to_re "9wI")) (re.++ ((_ re.loop 0 9) (str.to_re "_?")) (re.++ ((_ re.loop 0 6) (str.to_re "B_")) ((_ re.loop 4 10) (str.to_re "9")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
