(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 2 14) (str.to_re "0Q")) (re.++ ((_ re.loop 2 16) (str.to_re "'c")) (re.++ ((_ re.loop 0 20) (str.to_re "%VS")) ((_ re.loop 5 6) (str.to_re ",")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 3 5) (str.to_re "0f")) (re.++ ((_ re.loop 4 20) (str.to_re "T")) (re.++ ((_ re.loop 5 11) (str.to_re "i")) ((_ re.loop 3 17) (str.to_re "wh")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 2 18) (str.to_re "6^~")) (re.++ ((_ re.loop 1 18) (str.to_re ":w")) (re.++ ((_ re.loop 0 20) (str.to_re "6N")) ((_ re.loop 1 5) (str.to_re "8")))))) ((_ re.loop 1 2) (re.++ ((_ re.loop 2 17) (str.to_re ":")) (re.++ ((_ re.loop 1 5) (str.to_re "<")) (re.++ ((_ re.loop 4 9) (str.to_re "0MG")) ((_ re.loop 2 20) (str.to_re "@")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
