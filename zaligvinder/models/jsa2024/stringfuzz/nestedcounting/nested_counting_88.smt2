(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 4 7) (str.to_re "<1")) (re.++ ((_ re.loop 3 18) (str.to_re ".,")) (re.++ ((_ re.loop 1 17) (str.to_re "AG")) ((_ re.loop 5 10) (str.to_re "(?F")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 18) (str.to_re "<")) (re.++ ((_ re.loop 5 16) (str.to_re "t")) (re.++ ((_ re.loop 1 8) (str.to_re "C")) ((_ re.loop 4 20) (str.to_re "Q")))))) (re.++ ((_ re.loop 0 5) (re.++ ((_ re.loop 0 11) (str.to_re "xk7")) (re.++ ((_ re.loop 3 20) (str.to_re "H,n")) (re.++ ((_ re.loop 2 7) (str.to_re "5AZ")) ((_ re.loop 3 13) (str.to_re ".iL")))))) ((_ re.loop 0 6) (re.++ ((_ re.loop 4 7) (str.to_re "NW")) (re.++ ((_ re.loop 4 18) (str.to_re "W")) (re.++ ((_ re.loop 4 13) (str.to_re ",")) ((_ re.loop 3 18) (str.to_re "e")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
