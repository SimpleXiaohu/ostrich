(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 18) (str.to_re "I")) (re.++ ((_ re.loop 1 7) (str.to_re "=F")) (re.++ ((_ re.loop 3 17) (str.to_re "_")) ((_ re.loop 4 8) (str.to_re "%")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 10) (str.to_re "C4O")) (re.++ ((_ re.loop 3 15) (str.to_re "R5")) (re.++ ((_ re.loop 2 9) (str.to_re "\\\u0022")) ((_ re.loop 2 19) (str.to_re "f(+")))))) (re.++ ((_ re.loop 1 3) (re.++ ((_ re.loop 3 15) (str.to_re "W$")) (re.++ ((_ re.loop 2 18) (str.to_re "Q@/")) (re.++ ((_ re.loop 1 20) (str.to_re "u-")) ((_ re.loop 2 8) (str.to_re "!u")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 5 18) (str.to_re "fJu")) (re.++ ((_ re.loop 3 13) (str.to_re "g0")) (re.++ ((_ re.loop 0 10) (str.to_re "v")) ((_ re.loop 0 9) (str.to_re "%}D")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
