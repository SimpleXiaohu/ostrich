(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 0 11) (str.to_re "{")) (re.++ ((_ re.loop 3 11) (str.to_re "5?")) (re.++ ((_ re.loop 1 9) (str.to_re "8C")) ((_ re.loop 2 18) (str.to_re "&")))))) (re.++ ((_ re.loop 0 6) (re.++ ((_ re.loop 1 5) (str.to_re "e")) (re.++ ((_ re.loop 5 10) (str.to_re "_NJ")) (re.++ ((_ re.loop 0 19) (str.to_re "(M")) ((_ re.loop 0 13) (str.to_re "d")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 1 18) (str.to_re "0r:")) (re.++ ((_ re.loop 4 11) (str.to_re "T.$")) (re.++ ((_ re.loop 2 5) (str.to_re "|Eg")) ((_ re.loop 3 11) (str.to_re "g#e")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 0 6) (str.to_re "9")) (re.++ ((_ re.loop 0 20) (str.to_re "kns")) (re.++ ((_ re.loop 0 15) (str.to_re "9")) ((_ re.loop 4 15) (str.to_re "D2j")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
