(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 5 16) (str.to_re "54")) (re.++ ((_ re.loop 5 9) (str.to_re "h\u0022")) (re.++ ((_ re.loop 5 13) (str.to_re "dt}")) ((_ re.loop 3 9) (str.to_re "X")))))) (re.++ ((_ re.loop 0 4) (re.++ ((_ re.loop 3 10) (str.to_re "?")) (re.++ ((_ re.loop 2 17) (str.to_re "hV")) (re.++ ((_ re.loop 5 16) (str.to_re "[o")) ((_ re.loop 0 9) (str.to_re "0")))))) (re.++ ((_ re.loop 1 4) (re.++ ((_ re.loop 3 8) (str.to_re "Z")) (re.++ ((_ re.loop 4 18) (str.to_re "KM")) (re.++ ((_ re.loop 3 19) (str.to_re "|^:")) ((_ re.loop 0 8) (str.to_re "r")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 2 7) (str.to_re "|")) (re.++ ((_ re.loop 0 18) (str.to_re "+")) (re.++ ((_ re.loop 2 8) (str.to_re "MMF")) ((_ re.loop 2 8) (str.to_re "3")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
