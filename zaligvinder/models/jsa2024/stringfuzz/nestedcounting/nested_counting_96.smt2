(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 1 1) (re.++ ((_ re.loop 3 6) (str.to_re "e?")) (re.++ ((_ re.loop 4 17) (str.to_re "W")) (re.++ ((_ re.loop 3 19) (str.to_re "Bjh")) ((_ re.loop 1 20) (str.to_re "Y\u0022")))))) (re.++ ((_ re.loop 1 6) (re.++ ((_ re.loop 5 20) (str.to_re "%")) (re.++ ((_ re.loop 2 10) (str.to_re "<")) (re.++ ((_ re.loop 4 20) (str.to_re "`;")) ((_ re.loop 4 20) (str.to_re "f")))))) (re.++ ((_ re.loop 0 3) (re.++ ((_ re.loop 4 15) (str.to_re "-w")) (re.++ ((_ re.loop 0 18) (str.to_re "(")) (re.++ ((_ re.loop 2 14) (str.to_re "Xb$")) ((_ re.loop 2 13) (str.to_re "G6")))))) ((_ re.loop 1 4) (re.++ ((_ re.loop 0 16) (str.to_re "G")) (re.++ ((_ re.loop 5 16) (str.to_re "z")) (re.++ ((_ re.loop 5 12) (str.to_re "y")) ((_ re.loop 1 7) (str.to_re "P)")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
