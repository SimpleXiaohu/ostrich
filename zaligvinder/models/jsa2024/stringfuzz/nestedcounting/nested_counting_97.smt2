(set-logic QF_SLIA)
(declare-fun var0 () String)
(assert (str.in_re var0 (re.++ ((_ re.loop 0 1) (re.++ ((_ re.loop 0 5) (str.to_re "$!u")) (re.++ ((_ re.loop 1 7) (str.to_re "@i'")) (re.++ ((_ re.loop 2 8) (str.to_re "|zs")) ((_ re.loop 3 16) (str.to_re "lc-")))))) (re.++ ((_ re.loop 0 2) (re.++ ((_ re.loop 0 18) (str.to_re "uqq")) (re.++ ((_ re.loop 1 18) (str.to_re ":")) (re.++ ((_ re.loop 0 9) (str.to_re "=")) ((_ re.loop 3 16) (str.to_re ".")))))) (re.++ ((_ re.loop 1 5) (re.++ ((_ re.loop 5 5) (str.to_re "de=")) (re.++ ((_ re.loop 2 10) (str.to_re "8")) (re.++ ((_ re.loop 3 11) (str.to_re "GLg")) ((_ re.loop 1 15) (str.to_re "'t~")))))) ((_ re.loop 1 3) (re.++ ((_ re.loop 1 17) (str.to_re "\\/")) (re.++ ((_ re.loop 1 9) (str.to_re "1{~")) (re.++ ((_ re.loop 4 9) (str.to_re "Z")) ((_ re.loop 5 16) (str.to_re "0n")))))))))))
(assert (not (str.in_re var0 (re.++ (re.* re.allchar) (re.++ (re.union (str.to_re "<") (re.union (str.to_re ">") (re.union (str.to_re "'") (re.union (str.to_re "\u0022") (str.to_re "&"))))) (re.* re.allchar))))))
(assert (<= 50 (str.len var0)))
(check-sat)
(get-model)
